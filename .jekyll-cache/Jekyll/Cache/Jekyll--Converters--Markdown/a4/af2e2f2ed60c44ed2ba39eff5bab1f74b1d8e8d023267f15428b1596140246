I"o2
<h2 id="242-자료구조-기초">242. 자료구조 기초</h2>

<hr />

<ul>
  <li>
    <p>사실 여기까지 했으면 C 강의 자체는 끝났습니다. 다만, 자료구조를 구현하면서 C를 사용해봅시다.</p>
  </li>
  <li>
    <p>자료구조의 기초만 배울겁니다.</p>
  </li>
  <li>자료 구조란?
    <ul>
      <li>컴퓨터에서 여러 자료들을 조직적, 체계적으로 저장하는 방법</li>
      <li>보통 동일한 자료형을 여럿 저장하는 구조를 의미</li>
      <li>자료구조에 따라 요소들 사이의 관계를 정의하는 규칙이 있음</li>
      <li>상황마다 효율적인 자료구조가 존재
        <ul>
          <li>데이터에 접근하는 빈도</li>
          <li>데이터에 접근하는 방법(삽입, 검색, 읽기, 지우기 등)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>자료구조의 효율성
    <ul>
      <li>보통 시간 복잡도를 말합니다.</li>
      <li>공간 복잡도를 포함하는 경우도 있지만, 기본적으론 시간 복잡도라고 생각합시다.</li>
      <li>효율성을 논할 땐 보통 하드웨어 최적화를 고려하지 않고 말합니다.
        <ul>
          <li>대용량 데이터에선 거의 맞지만 적은 용량 데이터를 다룰 땐 하드웨어 최적화가 큰 영향을 미칩니다.</li>
        </ul>
      </li>
      <li>효율성 n^2 부턴 느린 알고리즘입니다. nlogn은 아슬아슬 하고 n은 soso, logn은 훌륭.</li>
    </ul>
  </li>
  <li>
    <p>자료구조들의 시간 복잡도</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">자료구조</th>
          <th style="text-align: center">검색-평</th>
          <th style="text-align: center">삽입-평</th>
          <th style="text-align: center">삭제-평</th>
          <th style="text-align: center">검색-최악</th>
          <th style="text-align: center">삽입-최악</th>
          <th style="text-align: center">삭제 - 최악</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center">배열</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
        </tr>
        <tr>
          <td style="text-align: center">스택</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
        </tr>
        <tr>
          <td style="text-align: center">큐</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
        </tr>
        <tr>
          <td style="text-align: center">연결 리스트</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
        </tr>
        <tr>
          <td style="text-align: center">해시 테이블</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(1)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
          <td style="text-align: center">O(n)</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="243-배열-배열의-삽입">243. 배열, 배열의 삽입</h2>

<hr />

<ul>
  <li>
    <p>가장 간단한 자료구조입니다.</p>
  </li>
  <li>
    <p>색인(index)로 접근 가능합니다.</p>

    <ul>
      <li>위치 = 시작주소 + sizeof(자료형)*색인</li>
    </ul>
  </li>
  <li>
    <p>배열 삽입 코드 보는중..</p>

    <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">enum</span> <span class="p">{</span> <span class="n">MAX_NUMS</span> <span class="o">=</span> <span class="mi">8</span> <span class="p">};</span>
<span class="kt">int</span> <span class="n">s_nums</span><span class="p">[</span><span class="n">MAX_NUMS</span><span class="p">];</span>
<span class="kt">size_t</span> <span class="n">s_num_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="cm">/* 현재 배열 요소 갯수 */</span>
  
<span class="kt">void</span> <span class="nf">insert_at</span><span class="p">(</span><span class="kt">size_t</span> <span class="n">index</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
    <span class="kt">size_t</span> <span class="n">i</span><span class="p">;</span>
      
    <span class="cm">/* 범위 확인 */</span>
    <span class="n">assert</span><span class="p">(</span><span class="n">index</span> <span class="o">&lt;=</span> <span class="n">s_num_count</span><span class="p">);</span>
    <span class="n">assert</span><span class="p">(</span><span class="n">s_num_count</span> <span class="o">&lt;</span> <span class="n">MAX_NUMS</span><span class="p">);</span>
      
    <span class="cm">/* 배열 앞쪽 index에 insert_at 하면 뒤로 한 칸씩 미는 for문 */</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">s_num_count</span><span class="p">;</span> <span class="n">i</span><span class="o">&gt;</span><span class="n">index</span><span class="p">;</span> <span class="o">--</span><span class="n">i</span><span class="p">){</span>
        <span class="n">s_nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">s_nums</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
      
    <span class="cm">/* 다 밀고나면 index에 넣고 갯수 증가 */</span>
    <span class="n">s_nums</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
    <span class="o">++</span><span class="n">s_num_count</span><span class="p">;</span>
<span class="p">}</span>
  
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">7</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>배열의 삽입엔 크게 두 가지 경우가 있습니다.</p>

    <ul>
      <li>맨 뒤에 삽입
        <ul>
          <li>그냥 넣기만 하면 끝</li>
        </ul>
      </li>
      <li>맨 뒤가 아닌 곳
        <ul>
          <li>넣을 자리 뒤의 요소들을 뒤로 한 칸씩 밀어야 합니다.</li>
          <li>O(n) 의 연산</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="244-배열의-삭제">244. 배열의 삭제</h2>

<hr />

<ul>
  <li>
    <p>삭제 코드 (위 코드에 이어서)</p>

    <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">remove_at</span><span class="p">(</span><span class="kt">size_t</span> <span class="n">index</span><span class="p">){</span>
	<span class="kt">size_t</span> <span class="n">i</span><span class="p">;</span>
  	
	<span class="n">assert</span><span class="p">(</span><span class="n">index</span> <span class="o">&lt;</span> <span class="n">s_num_count</span><span class="p">);</span>
  	
    <span class="cm">/* 요소 갯수 줄이고 */</span>
	<span class="o">--</span><span class="n">s_num_count</span><span class="p">;</span>
    <span class="cm">/* index 뒤의 것들을 앞으로 한 칸씩 당김 */</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">index</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s_num_count</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
		<span class="n">s_nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">s_nums</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>삭제하는 index를 기준으로 뒤의 값들을 한 칸씩 앞으로 당깁니다.</p>

    <ul>
      <li>O(n)의 연산</li>
    </ul>
  </li>
</ul>

<h2 id="245-배열의-검색-배열의-접근">245. 배열의 검색, 배열의 접근</h2>

<hr />

<ul>
  <li>
    <p>배열 검색 코드</p>

    <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">size_t</span> <span class="nf">find_index</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
	<span class="kt">size_t</span> <span class="n">i</span><span class="p">;</span>
  	
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s_num_count</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">s_nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">n</span><span class="p">){</span>
            <span class="k">return</span> <span class="n">i</span><span class="p">;</span>
        <span class="p">}</span>
	<span class="p">}</span>
  	
	<span class="k">return</span> <span class="n">INVALID_INDEX</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>배열의 요소를 차례로 훑으며 찾고자 하는 값이 있는지 찾고 있으면 해당 index를 반환, 없으면 -1을 반환합니다.</p>

    <ul>
      <li>O(n)의 연산</li>
    </ul>
  </li>
  <li>
    <p>index로 바로 배열의 요소의 접근하는 경우엔 O(1) 입니다.</p>

    <ul>
      <li>빈틈 없이 줄 세워놓는 가장 간단한 자료구조이기에 가능합니다.</li>
    </ul>
  </li>
</ul>

<h2 id="246-코드보기--빠른-배열">246. 코드보기 : 빠른 배열</h2>

<hr />

<h2 id="247-스택stack">247. 스택(Stack)</h2>

<hr />

<h2 id="248-스택의-삽입">248. 스택의 삽입</h2>

<hr />

<h2 id="249-스택의-제거">249. 스택의 제거</h2>

<hr />

<h2 id="250-스택의-검색">250. 스택의 검색</h2>

<hr />

<h2 id="251-스택의-용도">251. 스택의 용도</h2>

<hr />

:ET
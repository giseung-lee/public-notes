<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>이기승의 techlog!</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2020-03-17T23:10:13+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Lee Kiseung</name>
   <email>ntz4kiseung@gmail.com</email>
 </author>

 
 <entry>
   <title>윈도우에서 수정한 우분투-리눅스 파일 권한 수정</title>
   <link href="http://localhost:4000/study_googling/jekyll/%EA%B6%8C%ED%95%9C%EB%AC%B8%EC%A0%9C/"/>
   <updated>2020-03-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/jekyll/권한문제</id>
   <content type="html">&lt;h4 id=&quot;0-코린이들에게-바칩니다&quot;&gt;0. 코린이들에게 바칩니다…&lt;/h4&gt;

&lt;p&gt;윈도우 환경과 리눅스(우분투) 환경을 섞어쓰다 Permission denied 난 저같은 코린이들에게 바칩니다…&lt;/p&gt;

&lt;p&gt;사실 별거 아닌 문제입니다만… 해결하는 과정에서 리눅스의 명령어, 권한체계에 좀 친해진것 같은 느낌이 들어 따로 정리해 포스팅 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;1-깃헙-페이지-만들기&quot;&gt;1. 깃헙 페이지 만들기&lt;/h4&gt;

&lt;p&gt;처음 깃헙 페이지를 만들때 아래 링크를 보고 따라했습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://devinlife.com/howto/&quot;&gt;https://devinlife.com/howto/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;하지만 위 포스팅은 리눅스환경에서 실행되고 있었습니다. 제가 사용하는건 윈도우이고, 예전에 우분투로 리눅스 환경을 구성했던 것이 생각나 아래 글을 따라 우분투로 윈도우에 리눅스 환경을 셋팅했습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/6116949/221244246623&quot;&gt;https://m.blog.naver.com/6116949/221244246623&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#### 2. 설치 완료&lt;/p&gt;

&lt;p&gt;jekyll 설치하고, Github page 만들고, 깔끔한 테마(&lt;a href=&quot;https://github.com/poole/lanyon&quot;&gt;Laynon&lt;/a&gt;)도 받아 설치하고, 새 글을 쓰고 Git에 연결하고 Push까지 했습니다.&lt;/p&gt;

&lt;p&gt;#### 3. 작업환경 셋팅하기&lt;/p&gt;

&lt;p&gt;이쯤 하니 이제 편한 환경을 하나씩 셋팅하기 시작했습니다. 우선 git을 CLI로 다루는건 아직 익숙하지 않아 sourcetree를 설치했습니다. 그리고 편집을 쉽게하기 위해 &lt;a href=&quot;https://typora.io/&quot;&gt;Typora&lt;/a&gt;라는 markdown 편집기도 설치했습니다.&lt;/p&gt;

&lt;h4 id=&quot;4-포스팅-작업&quot;&gt;4. 포스팅 작업~&lt;/h4&gt;

&lt;p&gt;그리고 콘솔창에 익숙하지 않은 저는 윈도우 디렉터리 시스템으로 새 폴더를 만들고, md파일들 사본도 만들고, 윈도우 Typora로 md파일을 실행해 편집하고 이것 저것 윈도우 환경아래서 작업을 진행했습니다.&lt;/p&gt;

&lt;h4 id=&quot;5-에러-발견&quot;&gt;5. 에러 발견&lt;/h4&gt;

&lt;p&gt;그리고 이제 jekyll 서버를 켜서 확인해 보려는데…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/permissionError.png&quot; alt=&quot;에러발생&quot; /&gt;&lt;/p&gt;

&lt;p&gt;에러가 납니다. 에러를 추적하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;--trace&lt;/code&gt;옵션을 줘서 켜보면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/permissionError2.png&quot; alt=&quot;에러발생2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Errno::EACCES, Permission denied 에러가 납니다.&lt;/p&gt;

&lt;h4 id=&quot;6-임시해결&quot;&gt;6. (임시)해결&lt;/h4&gt;

&lt;p&gt;서당개도 3년이년 풍월을 읊는다고 아직 프로그래밍을 시작한지 1년밖에 안됐지만 Permission denied 를 보는 순간 윈도우와 리눅스를 섞어사용해 발생한 것 같다는 느낌을 받았습니다.&lt;/p&gt;

&lt;p&gt;여자저차 구글링해 권한에 대해 찾아보고, 권한을 확인하는법, 변경하는 법을 찾았습니다.&lt;/p&gt;

&lt;p&gt;##### 6.1. 권한확인&lt;/p&gt;

&lt;p&gt;우선 권한확인은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt; 명령어(&lt;strong&gt;l&lt;/strong&gt;ist &lt;strong&gt;s&lt;/strong&gt;egment -&lt;strong&gt;l&lt;/strong&gt;ong format)를 통해 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/viewPermission1.png&quot; alt=&quot;viewPermission1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 사진을 보시면  &lt;code class=&quot;highlighter-rouge&quot;&gt;-rw-rw-rw-rw-&lt;/code&gt;로 되어 있는 파일들이 있고 &lt;code class=&quot;highlighter-rouge&quot;&gt;----------&lt;/code&gt;로 되어있는 파일들이 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;-rw-rw-rw-&lt;/code&gt; 파일들은 리눅스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt;명령어로 가져온 파일들이고 &lt;code class=&quot;highlighter-rouge&quot;&gt;----------&lt;/code&gt;파일은 윈도우에서 리눅수 디렉토리로 직접 저장한 파일들입니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;drwxrwxrwx 1 kiseung kiseung   4096 Mar 17 21:42  study_book
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;-rw-rw-rw- 1 kiseung kiseung  65410 Mar 17 21:42 'relative url parsing.png'
---------- 1 kiseung kiseung  29027 Mar 17 21:59  viewPermission1.png
---------- - ------- -------  ----- ------------ ----------------------------
&lt;/span&gt;   권한  링크수 소유자   그룹  파일크기  수정시간              파일이름
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt;로 조회한 파일권한은 위와 같이 이루어져 있습니다. 나머지 부분은 나중에 필요할때 알아보기로 하고 이 포스트에선 &lt;strong&gt;‘권한’&lt;/strong&gt; 부분에 대해 알아보겠습니다.&lt;/p&gt;

&lt;h5 id=&quot;62-권한&quot;&gt;6.2. 권한&lt;/h5&gt;

&lt;p&gt;권한은 크게 4부분으로 이루어져 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-  rw-  rw-  rw-
1   2    3    4 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1 : 해당 항목이 파일(-)인지, 디렉토리(d)인지 구분
 2 : 사용자(소유자)의 권한 정보
 3 : 그룹 권한 정보
 4 : 다른 사용자 권한 정보&lt;/p&gt;

&lt;p&gt;그리고 권한 정보는 각각 &lt;strong&gt;r&lt;/strong&gt;ead, &lt;strong&gt;w&lt;/strong&gt;rite, e&lt;strong&gt;x&lt;/strong&gt;ecute 값을 갖을 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/viewPermission1.png&quot; alt=&quot;viewPermission1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 에러가 났던 파일을 보겠습니다. 다른 항목들은 파일이며(-) 사용자, 그룹, 다른 사용자에 대해 모두 읽기, 쓰기 권한을 가지고 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 에러가 났던 파일은 윈도우 사용자가 만든 파일이라 사용자, 그룹, 다른 사용자 모두에게 아무 권한이 없습니다.&lt;/p&gt;

&lt;h5 id=&quot;63-임시-방편&quot;&gt;6.3. 임시 방편&lt;/h5&gt;

&lt;p&gt;Permission denied 에러를 해결하기 위해선 윈도우에서 만든 파일들의 권한을 리눅스의 사용자가 사용할 수 있게 권한 변경을 해줘야 합니다.&lt;/p&gt;

&lt;p&gt;권한 변경을 하기위해선 &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod {permission} {filename}&lt;/code&gt; 형식의 명령어를 사용합니다. 이때 {permission} 부분은 3자리 숫자로 표현됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt;ead = 4
 &lt;strong&gt;w&lt;/strong&gt;rite = 2
 e&lt;strong&gt;x&lt;/strong&gt;ecute = 1&lt;/p&gt;

&lt;p&gt;값을 갖고 앞서 사용자/권한/다른사용자 순서대로 허용된 권한들의 값의 합을 기입해주면 됩니다.&lt;/p&gt;

&lt;p&gt;rwx = 7
 rw- = 6
 r-x = 5
 — = 0&lt;/p&gt;

&lt;p&gt;위와 같이 말이죠. 제 상황에선 윈도우에서 만든 파일 하나를 다른 파일들과 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;-rx-rx-rx-&lt;/code&gt;로 만들겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/viewPermission2.png&quot; alt=&quot;viewPermission2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일 1개의 권한이 &lt;code class=&quot;highlighter-rouge&quot;&gt;----------&lt;/code&gt; 에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;-rw-rw-rw-&lt;/code&gt; 로 변경되었습니다. 근데 이런 작업을 파일 하나씩 해야 할까요? 아니겠죠&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find -type f -exec chmod 666 {} \;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 명령어는 현재 디렉토리 아래에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;find -type f&lt;/code&gt; 타입이 파일(f)인 것을 찾고(현 디렉토리의 하위 디렉토리아래 있는 파일들도 탐색합니다), 찾은 각 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt;뒤에 명령어를 실행합니다. 뒤의 &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 666 {} \;&lt;/code&gt;는 권한 변경입니다. 파일명 부분에 &lt;code class=&quot;highlighter-rouge&quot;&gt;{} \;&lt;/code&gt;가 들어가는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;find -type f&lt;/code&gt;에서 찾은 파일들을 그대로 입력한다고 생각하면 됩니다.(자세한 부분은 나중에 추가하겠습니다 :sweat_smile:)&lt;/p&gt;

&lt;p&gt;아무튼 이렇게 권한을 바꾼뒤 다시 서버를 켜보면…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/viewPermission3.png&quot; alt=&quot;viewPermission3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/image/permissionErrorClear.png&quot; alt=&quot;permissionErrorClear.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해결이 됐습니다!&lt;/p&gt;

&lt;h4 id=&quot;7-제대로-해결하려면&quot;&gt;7. 제대로 해결하려면…&lt;/h4&gt;

&lt;p&gt;물론 이건 리눅스의 명령어와 권한과 친해지기 위해 해본 임시 해결책입니다. 근본적인 해결책은&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;작업환경을 리눅스로 통일 하던가(사실 시도하다가 Typora 설치에서 에러가…)&lt;/li&gt;
  &lt;li&gt;ruby와 jekyll을 윈도우 환경에서 다시 셋팅 하던가&lt;/li&gt;
  &lt;li&gt;윈도우와 리눅스가 권한을 공유할 수 있게 자동 설정 하는 것입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이것들 중에 하나가 될 것 같습니다. 작업 속도를 위해선 2번이 나을것 같긴 한데… 뭔가 앞으로 개발자 하면서 어차피 친해져야할 리눅스이니 빨리 1번을 할까 싶기도 하고…&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>웹 캐시</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C7/"/>
   <updated>2020-03-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드7</id>
   <content type="html">&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;

&lt;p&gt;웹 캐시는 자주 쓰이는 문서들의 사본을 자동으로 보관 및 관리하는 HTTP 장치입니다. 요청이 캐시에 왔을때 원하는 리소스의 사본이 존재하면 원 서버까지 요청이 가지 않고 캐시에서 제공됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;불필요한 데이터 전송을 줄일 수있다 -&amp;gt; 네트워크 비용 감소&lt;/li&gt;
  &lt;li&gt;네트워크 병목을 줄여준다 -&amp;gt; 대역폭을 늘리지 않더라도 응답시간 줄일 수 있다.&lt;/li&gt;
  &lt;li&gt;원 서버까지 가는 요청을 줄여준다 -&amp;gt; 원 서버의 부하를 감소시킬 수 있다.&lt;/li&gt;
  &lt;li&gt;지역별로 캐시를 둬 거리로 인한 지연을 줄여준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같은 혜택을 얻을 수 있는 캐시의 동작 원리 및 특징을 알아보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;71-불필요한-데이터-전송&quot;&gt;7.1. 불필요한 데이터 전송&lt;/h3&gt;

&lt;p&gt;대부분의 서버는 다수의 클라이언트를 상대합니다. 다수의 클라이언트로부터 같은 요청이 온다면 서버는 같은 데이터를 반복적으로 전송하게 됩니다.&lt;/p&gt;

&lt;p&gt;이런 불필요한 데이터 전송은 네트워크 대역폭을 잡아먹고, 전송을 느리게 만들며 서버에 부하를 줍니다.&lt;/p&gt;

&lt;p&gt;캐시를 사용하면 서버에서 나온 응답이 캐시에 보관됩니다. 요청은 캐시로 들어가 같은 요청에 대한 응답 사본이 있다면 캐시에서 응답의 사본을 돌려줍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;72-대역폭-병목&quot;&gt;7.2. 대역폭 병목&lt;/h3&gt;

&lt;p&gt;캐시는 네트워크 병목을 줄여줍니다. 대부분의 네트워크가 &lt;a href=&quot;test&quot; title=&quot;툴팁되나&quot;&gt;WAN&lt;/a&gt;보다 LAN에서 훨씬 더 넓은 대역폭을 제공합니다.
 캐시를 LAN망 안에 두게 된다면 좁은 WAN을 통과하지 않아 네트워크 병목을 줄여 지연을 감소시킬 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;73-갑작스런-요청-쇄도flash-crowds&quot;&gt;7.3. 갑작스런 요청 쇄도(Flash Crowds)&lt;/h3&gt;

&lt;p&gt;사회적 사건 혹은 기업의 이벤트 때문에 갑작스럽게 요청이 급증하는 경우가 있습니다. 이렇게 많은 사람들의 요청이 급증할 때에 캐싱을 사용한다면 서버의 부하를 많이 줄여줄 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;74-거리로-인한-지연&quot;&gt;7.4. 거리로 인한 지연&lt;/h3&gt;

&lt;p&gt;우리가 사용하는 인터넷은 물리적인 망을 가지고 있습니다. 복잡한 페이지를 로드하기 위해 지구 반대편의 원 서버로 수십개의 요청을 보낸다면 아무리 요청이 빛의 속도로 이동한다고 해도 유의미한 지연이 발생할 수 밖에 없습니다.&lt;/p&gt;

&lt;p&gt;각 지역별로 캐시를 두는 일은 대역폭을 확보하는 것 뿐 아니라 실제 물리적인 거리에 따른 지연도 줄일 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;75-적중과-부적중&quot;&gt;7.5. 적중과 부적중&lt;/h3&gt;

&lt;p&gt;캐시는 원 서버의 모든 리소스 사본을 저장하진 않습니다. 그리고 저장 한다고 하더라도, 어떤 리소스들은 자주 수정될 수 있습니다.&lt;/p&gt;

&lt;p&gt;캐시에 요청이 도착했을때 요청에 대해 캐시에서 사본을 찾아 응답을 줄 수 있다면 ‘적중(cache hit)’, 캐시에 사본이 없어 원 서버로 요청이 가야 한다면 ‘부적중(cache miss)’이라고 합니다.&lt;/p&gt;

&lt;h4 id=&quot;751-재검사revalidation&quot;&gt;7.5.1. 재검사(Revalidation)&lt;/h4&gt;

&lt;p&gt;원 서버의 리소스는 언제든지 변경될 수 있습니다. 그렇기 때문에 캐시는 때때로 가지고 있는 사본이 최신의 사본인지 검사해야 합니다. 언제 점검할지는 캐시의 정책에 따라 달라집니다. 이런 신선도 검사를 HTTP 재검사라고 부릅니다.&lt;/p&gt;

&lt;p&gt;재검사 결과 리소스가 변경되지 않았다면 캐시는 사본이 아직 신선하다고 표시한뒤 클라이언트에게 사본을 돌려줍니다. 이를 ‘재검사 적중’ 혹은 ‘느린 적중’ 이라고 부릅니다. 이는 당연히 순수 캐시 적중보단 느립니다. 하지만 서버로부터 객체를 받아올 필요가 없기 때문에 캐시 부적중 보단 바릅니다.&lt;/p&gt;

&lt;p&gt;캐시의 정책상 재검사가 필요할 때, 원 서버에 작은 재검사 요청을 보냅니다. 작은 재검사 요청을 보내기 위해 쓰이는 몇 가지 방법이 있는데 가장 널리 쓰이는 방법은 ‘If-Modified-Since’헤더를 보내는 것입니다. 이때 서버의 반응은 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;재검사 적중&lt;/strong&gt;
 서버가 검사를 해본뒤 리소스가 변경되지 않았다면 클라이언트에게 작은 304 Not Modified 응답을 보냅니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;재검사 부적중&lt;/strong&gt;
 만약 요청 받은 리소스가 변경 됐다면 서버는 변경된 리소스 전체와 함께 평범한 HTTP 200 OK응답을 보냅니다. 캐시는 응답을 받아 사본을 갱신하고 클라이언트에게 전송합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;객체 삭제&lt;/strong&gt;
 만약 요청 받은 리소스가 서버에 없다면, 서버는 404 Not Found 응답을 돌려보내고, 이를 받은 캐시는 사본을 삭제한 뒤 클라이언트에게 404 Not Found 응답을 돌려줍니다.&lt;/p&gt;

&lt;h4 id=&quot;752-적중률&quot;&gt;7.5.2. 적중률&lt;/h4&gt;

&lt;p&gt;캐시가 요청을 처리하는 비율을 캐시 적중률 or 캐시 적중비 라고 부릅니다. 대게 여기서 말하는 ‘적중’은 ‘재검사 적중’을 제외한 순수 ‘적중’을 말하지만 때에 따라 재검사 적중을 포함해 적중률을 계산하는 곳도 있으니 염두해 두면 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;캐시 적중률은 예측하기 어려운 것으로 악명 높습니다. 캐시 적중률은 높으면 높을수록 좋지만 적중률 40%정도면 웹 캐시로서 괜찮은 편입니다.(책이 처음 쓰여진 때가 2002년임을 감안해 수치를 너무 맹신하지 않는게 좋을 것 같습니다.)&lt;/p&gt;

&lt;p&gt;엄청나게 큰 캐시가 아닌 적당한 크기의 캐시도 자주 쓰이는 문서들을 저장하기엔 충분하고 유의미하게 트래픽을 줄이고 서버 성능을 개선할 수 있는 것으로 알려져 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;753-바이트-적중률&quot;&gt;7.5.3. 바이트 적중률&lt;/h4&gt;

&lt;p&gt;방금 살펴본 캐시 적중률은 요청의 갯수별 적중률 입니다. 하지만 이런 의문을 제기할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘작은 콘텐츠와 큰 콘텐츠가 트래픽을 차지하는 비중이 다른데 둘을 같게 봐도 되나?’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그래서 필요한 적중률이 바이트 적중률입니다. 바이트 적중률은 캐시에서 나간 바이트중 캐시에서 바로 제공된 바이트의 비율을 뜻합니다. 실제 트래픽 절감을 측정할 수 있으며, 주로 바이트별 요금을 산정해야 되는 곳에서 사용됩니다.&lt;/p&gt;

&lt;p&gt;바이트 적중률 100%는 모든 요청이 서버를 거치지 않고 바로 캐시에서 나갔음을 뜻합니다.&lt;/p&gt;

&lt;h4 id=&quot;754-적중과-부적중의-구별&quot;&gt;7.5.4. 적중과 부적중의 구별&lt;/h4&gt;

&lt;p&gt;이런 상황에서 클라이언트는 자신이 받은 응답이 캐시에서 나온 사본인지, 원 서버에서 온 원본인지 궁금할 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 HTTP에선 이를 말해주는 엄격한 방법은 제공해주지 않습니다. 대신 아래와 같은 임시 대안들이 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 상용 프록시 캐시들은 캐시에서 무슨 일이 일어났는지 설명하기 위해 Via 헤더에 추가정보를 줍니다.&lt;/li&gt;
  &lt;li&gt;응답의 Date헤더를 확인해봤을때, 응답의 생성일이 요청일보다 오래되었다면 이전에 만들어진 사본임을 알 수 있습니다.&lt;/li&gt;
  &lt;li&gt;비슷한 방법으로 응답이 얼마나 오래되었는지를 말해주는 Age 헤더를 살펴볼 수도 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;76-캐시-토폴로지&quot;&gt;7.6. 캐시 토폴로지&lt;/h3&gt;

&lt;p&gt;캐시는 각 사용자마다 할당될 수도 있고 수천 명의 사용자가 공유할 수도 있습니다. 사용자마다 할당된 캐시를 개인 전용 캐시(private cache), 공유된 캐시는 공용 캐시(public cache)라고 합니다.&lt;/p&gt;

&lt;h4 id=&quot;761-개인-전용-캐시&quot;&gt;7.6.1. 개인 전용 캐시&lt;/h4&gt;

&lt;p&gt;가장 대표적인 개인 전용 캐시는 각 웹 브라우저들이 가지고 있는 웹 캐시입니다. 사용자의 PC에 자주 쓰이는 문서를 저장해둡니다. 사용자는 브라우저의 설정을 통해 브라우저의 캐시 크기를 설정할 수 있고 캐시가 저장될 위치도 설정할 수 있습니다. 이런 캐시된 문서들을 ‘임시 파일’이라고도 부릅니다.&lt;/p&gt;

&lt;p&gt;크롬의 경우 기본 캐시 경로는 아래와 같습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\{Username}\AppData\Local\Google\Chrome\User Data\Default\Cache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;762-공용-프록시-캐시&quot;&gt;7.6.2. 공용 프록시 캐시&lt;/h4&gt;

&lt;p&gt;공용 캐시는 캐시 프록시 서버, 프록시 캐시라고도 불립니다. 여러 사용자가 공통적으로 자주 찾는 문서들을 저장해둡니다.&lt;/p&gt;

&lt;p&gt;이런 프록시 캐시들은 결국 프록시이기 때문에 6장에서 알아본 프록시의 규칙들을 따라야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;763-프록시-캐시-계층들&quot;&gt;7.6.3. 프록시 캐시 계층들&lt;/h4&gt;

&lt;p&gt;프록시를 여러 개 거칠 수 있었듯이 캐시 역시 여러 계층으로 이루어질 수 있습니다.&lt;/p&gt;

&lt;p&gt;당장 우리가 사용하는 웹 브라우저들은 모두 각자의 캐시를 가지고 있습니다. 웹 브라우저를 통해 프록시 캐시를 운영하는 웹 사이트에 접속하려 한다면 이미 [웹 브라우저 캐시 -&amp;gt; 프록시 캐시]와 같이 두 단계의 캐시를 거칠게 됩니다.&lt;/p&gt;

&lt;p&gt;큰 규모의 업체들은 지역별로 작은 프록시 캐시를 두고, 원 서버 근처에 큰 프록시 캐시를 둬서 작은 프록시 캐시에서 처리하지 못한 요청들을 큰 프록시 캐시에서 처리하게 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;캐시 계층이 깊어진다면 요청은 캐시의 긴 연쇄를 따라가게 됩니다. 프록시 연쇄가 길어질 수록 각 중간 프록시에서 성능저하가 발생할 수 있어 오히려 프록시 연쇄를 안 두는 것보다 느려질 수도 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;764-캐시망-콘텐츠-라우팅-피어링&quot;&gt;7.6.4. 캐시망, 콘텐츠 라우팅, 피어링&lt;/h4&gt;

&lt;p&gt;복잡한 캐시망을 사용하는 곳도 있습니다. 자식 캐시가 처리하지 못한 요청을 어느 부모 캐시에게 전해줄지 동적으로 결정하는 캐시망도 있고 다른 조직의 프록시 캐시끼리 서로 찾아볼 수 있게 하는 캐시망도 있습니다.(피어링)&lt;/p&gt;

&lt;p&gt;캐시망 안에서 콘텐츠 라우팅을 할땐 다음과 같은 방식으로 어느 곳에 라우팅 할지 결정할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;URL에 근거해 부모 캐시와 원 서버 중 하나를 동적으로 선택합니다.&lt;/li&gt;
  &lt;li&gt;URL에 근거해 특정 부모 캐시를 동적으로 선택합니다.&lt;/li&gt;
  &lt;li&gt;부모 캐시에게 가기 전에, 캐시된 사본을 로컬에서 찾습니다.&lt;/li&gt;
  &lt;li&gt;다른 프록시 캐시들이 자신이 가진 컨텐츠를 부분적으로 접근할 수 있게 허용하되, 그들의 캐시를 통한 인터넷 트랜짓(Internet Transit)은 허용하지 않습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;특히, 서로 다른 조직들이 상호의 이득의 위해 캐시를 연결해 서로 찾아볼 수 있게해주는 피어링을 지원하는 캐시를 ‘형제 캐시’라고 부릅니다. HTTP에선 형제 캐시를 지원하지 않기 때문에 형제 캐시를 사용하는 곳은 인터넷 캐시 프로토콜(ICP, Internet Cache Protocol)이나 하이퍼텍스트 캐시 프로토콜(HTCP, HyperText Cache Protocol)을   이용해 HTTP를 확장 했습니다. 이는 20장에서 더 자세히 살펴볼 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;77-캐시-처리-단계&quot;&gt;7.7. 캐시 처리 단계&lt;/h3&gt;

&lt;p&gt;캐시가 고도화됨에 따라 세부적인 기능은 매우 복잡하지만 기본적으로 아래와 같은 절차를 거칩니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;요청 받기 : 네트워크로부터 도착한 요청 메세지를 읽습니다.&lt;/li&gt;
  &lt;li&gt;파싱 : 메세지를 파싱해 URL, 헤더들을 추출합니다.&lt;/li&gt;
  &lt;li&gt;검색 : 로컬 복사본이 있는지 검사하고, 없다면 원 서버에서 사본을 받아옵니다.(로컬에 저장합니다.)&lt;/li&gt;
  &lt;li&gt;신선도 검사 : 애초에 로컬 복사본이 있었다면, 그 사본이 충분히 신선한지 검사합니다. 신선하지 않다면 서버에게 변경 사항이 있는지 물어보고 변경 사항이 있다면 사본을 받아옵니다.&lt;/li&gt;
  &lt;li&gt;응답 생성 : 새로운 헤더와 캐시된 본문으로 응답 메세지를 만듭니다.&lt;/li&gt;
  &lt;li&gt;발송 : 네트워크를 통해 응답을 클라이언트에게 돌려줍니다.&lt;/li&gt;
  &lt;li&gt;로깅 : 선택적으로, 캐시는 로그파일에 트랜잭션에 대해 서술한 로그 하나를 남깁니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;아래와 같은 차트로 흐른다고 보면 됩니다.&lt;/p&gt;

&lt;p&gt;그림요망&lt;/p&gt;

&lt;h4 id=&quot;771-단계1--요청-받기&quot;&gt;7.7.1. 단계1 : 요청 받기&lt;/h4&gt;

&lt;p&gt;커넥션의 활동을 감지해 들어오는 데이터를 받아들입니다. 고성능 캐시는 여러 개의 커넥션으로 부터 동시에 데이터를 받고 전체 메세지가 도착하기 전에 트랜잭션 처리를 시작합니다.&lt;/p&gt;

&lt;h4 id=&quot;772-단계2--파싱&quot;&gt;7.7.2. 단계2 : 파싱&lt;/h4&gt;

&lt;p&gt;요청 메세지를 파싱해 URL과 헤더를 추출합니다. 이 과정에서 파서는 헤더 부분의 대소문자, 날짜 형식 같이 사소한 차이점이 무시되도록 파싱해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;773-단계3--검색&quot;&gt;7.7.3. 단계3 : 검색&lt;/h4&gt;

&lt;p&gt;알아낸 URL을 토대로 캐시된 로컬 사본이 있는지 검사합니다. 메모리에 있을 수도 있고 디스크에 있을 수도 있습니다. 혹은 캐시 본인의 디스크가 아닌 근처의 다른 디스크에 있을 수도 있습니다.&lt;/p&gt;

&lt;p&gt;캐시된 사본을 찾을 수 없다면 원 서버 혹은 다음 홉에 있는 부모 프록시 캐시에서 가져오거나 실패를 반환합니다.&lt;/p&gt;

&lt;h4 id=&quot;774-단계4--신선도-검사&quot;&gt;7.7.4. 단계4 : 신선도 검사&lt;/h4&gt;

&lt;p&gt;캐시된 사본을 찾았다고 해서 바로 클라이언트에게 보내선 안됩니다. 가지고 있는 사본이 신선한지 검사해야 합니다. 이 신선도를 검사하는 알고리즘은 매우 복잡합니다. 이 장의 다음 절들은 대부분 신선도 검사와 관계된 내용입니다.&lt;/p&gt;

&lt;p&gt;신선한 것으로 판단되면 그 로컬 사본으로 응답을 준비합니다. 신선하지 않다면 서버에 변경사항이 있는지 확인하는 재검사를 실시하게 됩니다.&lt;/p&gt;

&lt;p&gt;재검사 결과 변경사항이 없으면 로컬 사본으로 응답을 준비하고, 변경사항이 있다면 서버에서 다시 사본을 가져와 캐시에 사본을 갱신합니다.&lt;/p&gt;

&lt;h4 id=&quot;775-단계5--응답-생성&quot;&gt;7.7.5. 단계5 : 응답 생성&lt;/h4&gt;

&lt;p&gt;캐시된 응답을 원 서버에서 온것처럼 보이게 하는 것이 좋습니다. 때문에 캐시된 서버 응답 헤더를 토대로 캐시의 응답 헤더를 구성합니다.&lt;/p&gt;

&lt;p&gt;캐시는 클라이언트에 맞게 헤더를 조정해야 합니다. 클라이언트가 HTTP/1.1을 바라는데 서버에서의 응답이 HTTP/1.0이라면 캐시는 헤더를 적절히 번역해줘야 합니다.&lt;/p&gt;

&lt;p&gt;캐시는 원 서버의 응답 헤더에 없는 헤더들도 추가할 수 있습니다. 캐시 신선도 정보(Cache-Control, Age, Expires.. )를 삽입할 수 있습니다. 또, 요청이 프록시 캐시를 거쳤다는 걸 알려주기 위해 Via헤더를 삽입할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 Date헤더는 조정해선 안됩니다. Date헤더는 원 서버에서 만들어진 일시를 표현하는 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;776-단계6--전송&quot;&gt;7.7.6. 단계6 : 전송&lt;/h4&gt;

&lt;p&gt;응답 헤더가 준비되면 캐시는 응답을 돌려줍니다.&lt;/p&gt;

&lt;p&gt;어떤 고성능 캐시들은 로컬 저장장치와 네트워크 I/O 버퍼 사이에서 문서의 콘텐츠 복사를 피해 데이터를 효과적으로 전송하기 위해 노력합니다.&lt;/p&gt;

&lt;h4 id=&quot;777-단계7--로깅&quot;&gt;7.7.7. 단계7 : 로깅&lt;/h4&gt;

&lt;p&gt;대부분의 캐시는 로그 파일과 캐시 사용에 대한 통계를 유지합니다. 트랜잭션 완료 후 캐시 적중, 부적중률에 대한 통계를 갱신하고 로그파일에 어떤 요청이 왔고 어떻게 응답했는지 등을 기록합니다.&lt;/p&gt;

&lt;p&gt;가장 많이 사용되는 캐시 로그 포맷은 스퀴드 로그 포맷(Squid Log Format), 넷스케이프 확장 공용 로그 포맷(Netscape Extended Common Log Format)이지만 커스텀 로그 포맷을 사용해도 상관 없습니다. 로그 파일 포맷에 대해선 21장에서 자세히 다룹니다.&lt;/p&gt;

&lt;h4 id=&quot;778-캐시-처리-플로-차트&quot;&gt;7.7.8. 캐시 처리 플로 차트&lt;/h4&gt;

&lt;p&gt;앞에 먼저 소개해드렸습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;78-사본을-신선하게-유지하기&quot;&gt;7.8. 사본을 신선하게 유지하기&lt;/h3&gt;

&lt;p&gt;캐시된 데이터와 서버의 데이터가 일치하도록 관리하는 방법을 알아보겠습니다. HTTP에선 ‘문서 만료’와 ‘서버 재검사’라는 단순한 메커니즘으로 캐시된 사본과 서버의 원본이 일치하도록 관리할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;781-문서-만료&quot;&gt;7.8.1. 문서 만료&lt;/h4&gt;

&lt;p&gt;Cache-Control와 Expires라는 헤더들을 이용해 각 문서들에 유효기간을 붙일 수 있습니다. 유효기간이 끝나기 전엔 문서가 ‘신선한’것으로 판단해 서버와의 접촉 없이 사본을 제공할 수 있습니다.&lt;/p&gt;

&lt;p&gt;유효기간이 만료된다면, 반드시 문서에 변경사항이 있는지 다시 검사하고 변경 사항이 있다면 신선한 사본을 얻어와야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;782-유효기간과-나이&quot;&gt;7.8.2. 유효기간과 나이&lt;/h4&gt;

&lt;p&gt;유효기간을 표시하는데엔 Cache-Control과 Expires 헤더가 있습니다. 둘의 차이는 쉽게말해 Cache-Control은 문서가 최초로 생성된 이후로 몇초간 유효한가를 나타내고, Expires헤더는 만료되는 절대적인 날짜를 명시합니다.&lt;/p&gt;

&lt;p&gt;Cache-Control:max-age
 max-age값은 최대 나이를 정의합니다. 최대 나이는 문서가 처음 생성된 이후부터, 제공하기에 더 이상 신선하지 않다고 간주될 때까지 경과한 초단위 시간입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cahce-Control : max-age=484200&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Expires
 절대 유효기간을 명시합니다. 이 유효기간이 넘어갔다면 그 문서는 더 이상 신선하지 않습니다. 이 Expires헤더가 제대로 작오하기 위해선 컴퓨터의 시계가 올바르게 작동하고 있어야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Expires : Fri, 05 Jul 2002, 05:00:00 GMT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;현재 시각이 2020년 3월 17일 화요일 20:00:00 GMT 일때, 지금 시각으로부터 딱 5일(==432,000 초)간만 진행되는 이벤트를 위한 안내 페이지를 만들고 싶다면 그 페이지엔 아래의 헤더중 하나를 선택해 사용하면 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cache-Control : max-age=432000
Expires : Sun, 22 Mar 2020, 20:00:00 GMT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;783-서버-재검사&quot;&gt;7.8.3. 서버 재검사&lt;/h4&gt;

&lt;p&gt;하지만 캐시된 사본의 유효기간이 만료되었다고 해서 그 사본이 서버의 원본과 다르다는 걸 의미하진 않습니다. 이제 다시 검사할 시간이 되었다는 것을 뜻합니다. 이렇게 문서 변경 여부를 다시 검사하는걸 ‘서버 재검사’라고 합니다.&lt;/p&gt;

&lt;p&gt;서버 재검사 결과 문서가 변경되었다면, 변경된 문서의 새로운 사본을 가져와 캐시된 문서를 바꿔 저장한뒤, 클라이언트에게 보내줍니다.
 서버 재검사 결과 문서가 변경되지 않았다면, 캐시는 새 만료일을 포함한 새 헤더들만 가져와 캐시된 문서의 헤더를 갱신합니다.&lt;/p&gt;

&lt;p&gt;HTTP는 캐시가 다음중 하나는 응답하기를 요구합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;충분히 신선한 캐시된 사본&lt;/li&gt;
  &lt;li&gt;재검사 결과 신선하다고 할 수 있는 캐시된 사본&lt;/li&gt;
  &lt;li&gt;에러 메세지(재검사에 실패한 경우)&lt;/li&gt;
  &lt;li&gt;경고 메세지가 부착된 캐시된 사본(부정확하다면)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;784-조건부-메서드와의-재검사&quot;&gt;7.8.4. 조건부 메서드와의 재검사&lt;/h4&gt;

&lt;p&gt;그렇다면, 재검사 요청을 받는 서버의 입장에선 캐시에서 온 요청이 재검사 요청인지, 일반 리소스 요청인지 어떻게 구분할까요? 이를 위해 HTTP엔 조건부 GET 요청이 존재합니다.&lt;/p&gt;

&lt;p&gt;조건부 GET 요청은 조건부 요청헤더를 추가해 만들어집니다. 조건부 요청 헤더에는 아래 5가지가 있지만 유용하고 주로 사용되는 2개의 헤더에 대해서만 자세히 알아보겠습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;헤더&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Modified-Since&lt;/td&gt;
      &lt;td&gt;주어진 날짜 이후로 수정되었다면 요청 메서드를 처리합니다. Last-Modified 헤더와 함께 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-None-Match&lt;/td&gt;
      &lt;td&gt;문서의 일련번호 및 id 처럼 문서의 버전을 나타내는 태그를 비교해 요청 메서드를 처리합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Unmodified-Since&lt;/td&gt;
      &lt;td&gt;문서의 부분의 같이 전송해 문서가 변하지 않았는지를 확인합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Range&lt;/td&gt;
      &lt;td&gt;불완전한 문서의 캐싱을 지원하기 위해 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Match&lt;/td&gt;
      &lt;td&gt;웹 서버에 대한 동시성 제어를 할 때 유용합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;785-if-modified-since--날짜-재검사&quot;&gt;7.8.5. If-Modified-Since : 날짜 재검사&lt;/h4&gt;

&lt;p&gt;가장 많이 쓰이는 재검사 헤더는 If-Modified-Since 입니다. 이는 흔히 줄여서 IMS 요청이라고도 불립니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If-Modified-Since : Tue, 17 Mar 2020, 20:30:00 GMT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;서버가 위와 같은 IMS 요청을 받는다면, 현재 서버의 원본이 마지막 변경일을 확인합니다. If-Modified-Since가 참이라면(==변경 되었다면) 변경된 문서의 사본과 함께 평범한 GET 응답이 새로운 만료 날짜와 함께 돌아갑니다.
 If-Modified-Since가 거짓이라면(==변경되지 않았다면), 서버는 작은 304 Not Modified 응답을 돌려줍니다. 이 응답에 본문은 없습니다.&lt;/p&gt;

&lt;p&gt;If-Modified-Since 헤더에 대한 응답엔 Last-Modified 헤더가 따라붙습니다. 캐시가 다음번에 같은 문서를 재검사 요청 보내게 될 땐 저번 재검사 요청의 응답으로 받은 Last-Modified 헤더의 값을 If-Modified-Since값에 넣어 보내게 됩니다.&lt;/p&gt;

&lt;p&gt;주의할 점이 있습니다. 몇몇 웹 서버는 If-Modified-Since의 값을 시간으로 파싱해 비교하지 않습니다. 대신 단순 문자열 비교를 수행해 ‘이 날짜 이후로 변경되었다면’이라는 의미가 아니라 ‘정확히 이 날자에 마지막 변경이 일어난 것이 아니라면’과 같이 비교합니다.  심지어 날짜가 아닌 일련번호, id 같은 것을 If-Modified-Since에 넣어 문자열 비교를 사용하기도 합니다.&lt;/p&gt;

&lt;h4 id=&quot;786-if-none-match--엔터티-태그-재검사&quot;&gt;7.8.6. If-None-Match : 엔터티 태그 재검사&lt;/h4&gt;

&lt;p&gt;날짜를 기준으로한 If-Modified-Since 검사가 가장 많이 쓰이지만 날짜 비교가 적절하지 않은 콘텐츠들도 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일정 간격으로 다시 쓰여지지만 실제 내용 변화가 없을 경우&lt;/li&gt;
  &lt;li&gt;서버를 바라보는 모든 캐시들이 다시 데이터를 받기엔 변경이 사소한 경우(철자 및 주석 등)&lt;/li&gt;
  &lt;li&gt;페이지에 대한 최근 변경 일시를 정확하게 판별할 수 없는 경우&lt;/li&gt;
  &lt;li&gt;1초보다 작은 간격으로 갱신이 될 수 있는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같은 경우엔 If-None-Match 헤더를 사용할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GET /announce.html HTTP/1.0
If-None-Match : “v2.6”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위 헤더는 해당 문서의 버전이 ‘v2.6’이라는 것입니다. 이렇게 일련번호, 버전, id와 같이 문서가 유의미하게 변경되었다는 것을 보여줄수 있는 태그들을 사용해 재검사를 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이에 대한 서버의 응답은 Etag(Entity Tag) 헤더와 함께 돌아옵니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;HTTP/1.0 304 Not Modified
Date : Wed, 03 Jul 2020, 19:18:22 GMT
&lt;strong&gt;ETag : “v2.6”&lt;/strong&gt;
Expires : Frie, 05 Jul 2020, 05:00:00 GMT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위는 변경되지 않았을 때이고, 변경되었다면 200 OK 코드와 갱신된 Etag값, 엔터티 본문과 함께 응답될 것입니다.&lt;/p&gt;

&lt;p&gt;캐시가 객체에 대해 여러개 사본을 가지고 있다면 If-None-Match 태그에 여러개의 엔터티 태그를 같이 보낼 수도 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If-None-Match : “v2.4”, “v2.5”, “v2.6”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;787-약한-검사기와-강한-검사기&quot;&gt;7.8.7. 약한 검사기와 강한 검사기&lt;/h4&gt;

&lt;p&gt;앞서 ‘서버를 바라보는 모든 캐시들이 다시 데이터를 받기엔 변경이 사소한 경우(철자 및 주석 등)’ 를 위해 엔터티 태그를 사용한다고 했습니다. 하지만 이 문제를 해결하기 위한 다른 방법도 있습니다.&lt;/p&gt;

&lt;p&gt;HTTP/1.1 에선 조금 수정된 컨텐츠를 위해 “그 정도면 같은 것이다”라고 서버가 주장할 수 있게 해주는 약한 검사기(weak validator)를 지원합니다. 반대로 약한 검사기가 아닌것은 강한 검사기(strong validator)입니다.&lt;/p&gt;

&lt;p&gt;약한 검사기는 엔터티 태그 앞에 ‘W/’ 접두사를 사용해 구분합니다. ‘W/’접두가사 붙은 엔터티 태그는 약한 검사를 해달라는 것입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Etag : W/”v2.6”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;강한 엔터티 태그는 그에 대응하는 엔터티 값이 어떻게 바뀌든 매번 같이 바뀌어야 합니다. 하지만 약한 엔터티 태그는 변경중 유의미한 변경이 있을때만 같이 변경됩니다.&lt;/p&gt;

&lt;p&gt;서버는 강한 엔터티, 약한 엔터티 모두 재활용해서는 안됩니다. 캐시에 요청이 잘 안들어온다면 유효기간이 엄청오래된 콘텐츠에 대해 재검사 요청이 올수 있고, 이때 요청온 엔터티 태그가 재활용된 태그라면 큰 혼란을 만들것입니다.&lt;/p&gt;

&lt;h4 id=&quot;788-언제-엔터티-태그를-사용하고-언제-last-modified-일시를-사용하는가&quot;&gt;7.8.8. 언제 엔터티 태그를 사용하고 언제 Last-Modified 일시를 사용하는가&lt;/h4&gt;

&lt;p&gt;앞서 알아본 것과 같이 서버는 문서의 유효기간을 다루기 위해 Etag 헤더 혹은 Last-Modified 헤더를 보낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;캐시의 입장에선, 서버가 Etag 헤더를 사용한다면 If-None-Match를, Last-Modified 헤더를 사용한다면 If-Modified-Since 헤더를 사용해야 합니다. 만약 모두 사용 가능하다면 두 가지 모두 사용하는 것을 추천합니다.(HTTP/1.0, HTTP/1.1 모두를 다룰 수 있기 때문입니다.)&lt;/p&gt;

&lt;p&gt;HTTP/1.1 을 구현하고 있는 서버는 가능하다면 Etag 헤더를 보내야 합니다. Last-Modified 헤더를 같이 보내면 더 좋습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;79-캐시-제어&quot;&gt;7.9. 캐시 제어&lt;/h3&gt;

&lt;h4 id=&quot;791-no-cahce와-no-store-응답-헤더&quot;&gt;7.9.1. no-cahce와 no-store 응답 헤더&lt;/h4&gt;

&lt;h4 id=&quot;792-max-age-응답-헤더&quot;&gt;7.9.2. Max-Age 응답 헤더&lt;/h4&gt;

&lt;h4 id=&quot;793-expires-응답-헤더&quot;&gt;7.9.3. Expires 응답 헤더&lt;/h4&gt;

&lt;h4 id=&quot;794-must-revalidate-응답-헤더&quot;&gt;7.9.4. Must-Revalidate 응답 헤더&lt;/h4&gt;

&lt;h4 id=&quot;795-휴리스틱-만료&quot;&gt;7.9.5. 휴리스틱 만료&lt;/h4&gt;

&lt;h4 id=&quot;796-클라이언트-신선도-제약&quot;&gt;7.9.6. 클라이언트 신선도 제약&lt;/h4&gt;

&lt;h4 id=&quot;797-주의할-점&quot;&gt;7.9.7. 주의할 점&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;710-캐시-제어-설정&quot;&gt;7.10. 캐시 제어 설정&lt;/h3&gt;

&lt;h4 id=&quot;7101-아파치로-http-헤더-제어하기&quot;&gt;7.10.1. 아파치로 HTTP 헤더 제어하기&lt;/h4&gt;

&lt;h4 id=&quot;7102-http-equiv를-통한-html-캐시-제어&quot;&gt;7.10.2. HTTP-EQUIV를 통한 HTML 캐시 제어&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;711-자세한-알고리즘&quot;&gt;7.11. 자세한 알고리즘&lt;/h3&gt;

&lt;h4 id=&quot;7111-나이와-신선도-수명&quot;&gt;7.11.1. 나이와 신선도 수명&lt;/h4&gt;

&lt;h4 id=&quot;7112-나이-계산&quot;&gt;7.11.2. 나이 계산&lt;/h4&gt;

&lt;h4 id=&quot;7113-완전한-나이-계산-알고리즘&quot;&gt;7.11.3. 완전한 나이 계산 알고리즘&lt;/h4&gt;

&lt;h4 id=&quot;7114-신선도-수명-계산&quot;&gt;7.11.4. 신선도 수명 계산&lt;/h4&gt;

&lt;h4 id=&quot;7115-완전한-서버-신선도-알고리즘&quot;&gt;7.11.5. 완전한 서버 신선도 알고리즘&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;712-캐시와-광고&quot;&gt;7.12. 캐시와 광고&lt;/h3&gt;

&lt;h4 id=&quot;7121-광고-회사의-딜레마&quot;&gt;7.12.1. 광고 회사의 딜레마&lt;/h4&gt;

&lt;h4 id=&quot;7122-퍼블리셔의-응답&quot;&gt;7.12.2. 퍼블리셔의 응답&lt;/h4&gt;

&lt;h4 id=&quot;7123-로그-마이그레이션&quot;&gt;7.12.3. 로그 마이그레이션&lt;/h4&gt;

&lt;h4 id=&quot;7124-적중-측정과-사용량-제한&quot;&gt;7.12.4. 적중 측정과 사용량 제한&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;
</content>
 </entry>
 
 <entry>
   <title>Github Page Emoji</title>
   <link href="http://localhost:4000/study_googling/etc/Github-Page-Emoji/"/>
   <updated>2020-03-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/etc/Github Page Emoji</id>
   <content type="html">&lt;p&gt;Thanks for ‘https://gist.github.com/rxaviers/7360908’ ​ :fire::fire::fire:&lt;/p&gt;

&lt;p&gt;People&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;:bowtie: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bowtie:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:smile: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smile:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:laughing: &lt;code class=&quot;highlighter-rouge&quot;&gt;:laughing:&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:blush: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blush:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:smiley: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smiley:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:relaxed: &lt;code class=&quot;highlighter-rouge&quot;&gt;:relaxed:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:smirk: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smirk:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heart_eyes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heart_eyes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:kissing_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kissing_heart:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:kissing_closed_eyes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kissing_closed_eyes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:flushed: &lt;code class=&quot;highlighter-rouge&quot;&gt;:flushed:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:relieved: &lt;code class=&quot;highlighter-rouge&quot;&gt;:relieved:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:satisfied: &lt;code class=&quot;highlighter-rouge&quot;&gt;:satisfied:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:grin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wink: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wink:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:stuck_out_tongue_winking_eye: &lt;code class=&quot;highlighter-rouge&quot;&gt;:stuck_out_tongue_winking_eye:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:stuck_out_tongue_closed_eyes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:stuck_out_tongue_closed_eyes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:grinning: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grinning:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:kissing: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kissing:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:kissing_smiling_eyes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kissing_smiling_eyes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:stuck_out_tongue: &lt;code class=&quot;highlighter-rouge&quot;&gt;:stuck_out_tongue:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sleeping: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sleeping:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:worried: &lt;code class=&quot;highlighter-rouge&quot;&gt;:worried:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:frowning: &lt;code class=&quot;highlighter-rouge&quot;&gt;:frowning:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:anguished: &lt;code class=&quot;highlighter-rouge&quot;&gt;:anguished:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:open_mouth: &lt;code class=&quot;highlighter-rouge&quot;&gt;:open_mouth:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:grimacing: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grimacing:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:confused: &lt;code class=&quot;highlighter-rouge&quot;&gt;:confused:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hushed: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hushed:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:expressionless: &lt;code class=&quot;highlighter-rouge&quot;&gt;:expressionless:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:unamused: &lt;code class=&quot;highlighter-rouge&quot;&gt;:unamused:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sweat_smile: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sweat_smile:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sweat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sweat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:disappointed_relieved: &lt;code class=&quot;highlighter-rouge&quot;&gt;:disappointed_relieved:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:weary: &lt;code class=&quot;highlighter-rouge&quot;&gt;:weary:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pensive: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pensive:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:disappointed: &lt;code class=&quot;highlighter-rouge&quot;&gt;:disappointed:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:confounded: &lt;code class=&quot;highlighter-rouge&quot;&gt;:confounded:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fearful: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fearful:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cold_sweat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cold_sweat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:persevere: &lt;code class=&quot;highlighter-rouge&quot;&gt;:persevere:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cry:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sob: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sob:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:joy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:joy:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:astonished: &lt;code class=&quot;highlighter-rouge&quot;&gt;:astonished:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:scream: &lt;code class=&quot;highlighter-rouge&quot;&gt;:scream:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:neckbeard: &lt;code class=&quot;highlighter-rouge&quot;&gt;:neckbeard:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tired_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tired_face:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:angry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:angry:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rage: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rage:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:triumph: &lt;code class=&quot;highlighter-rouge&quot;&gt;:triumph:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sleepy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sleepy:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:yum: &lt;code class=&quot;highlighter-rouge&quot;&gt;:yum:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mask: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mask:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sunglasses: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sunglasses:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dizzy_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dizzy_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:imp: &lt;code class=&quot;highlighter-rouge&quot;&gt;:imp:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:smiling_imp: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smiling_imp:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:neutral_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:neutral_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_mouth: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_mouth:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:innocent: &lt;code class=&quot;highlighter-rouge&quot;&gt;:innocent:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:alien: &lt;code class=&quot;highlighter-rouge&quot;&gt;:alien:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:yellow_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:yellow_heart:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:blue_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blue_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:purple_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:purple_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heart:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:green_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:broken_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:broken_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heartbeat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heartbeat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:heartpulse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heartpulse:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:two_hearts: &lt;code class=&quot;highlighter-rouge&quot;&gt;:two_hearts:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:revolving_hearts: &lt;code class=&quot;highlighter-rouge&quot;&gt;:revolving_hearts:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cupid: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cupid:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sparkling_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sparkling_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sparkles: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sparkles:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:star: &lt;code class=&quot;highlighter-rouge&quot;&gt;:star:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:star2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:star2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dizzy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dizzy:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:boom: &lt;code class=&quot;highlighter-rouge&quot;&gt;:boom:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:collision: &lt;code class=&quot;highlighter-rouge&quot;&gt;:collision:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:anger: &lt;code class=&quot;highlighter-rouge&quot;&gt;:anger:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:exclamation: &lt;code class=&quot;highlighter-rouge&quot;&gt;:exclamation:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:question: &lt;code class=&quot;highlighter-rouge&quot;&gt;:question:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:grey_exclamation: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grey_exclamation:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:grey_question: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grey_question:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:zzz: &lt;code class=&quot;highlighter-rouge&quot;&gt;:zzz:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dash: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dash:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sweat_drops: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sweat_drops:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:notes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:notes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:musical_note: &lt;code class=&quot;highlighter-rouge&quot;&gt;:musical_note:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:fire: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fire:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hankey: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hankey:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:poop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:poop:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:shit: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shit:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:+1: &lt;code class=&quot;highlighter-rouge&quot;&gt;:+1:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:thumbsup: &lt;code class=&quot;highlighter-rouge&quot;&gt;:thumbsup:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:-1: &lt;code class=&quot;highlighter-rouge&quot;&gt;:-1:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:thumbsdown: &lt;code class=&quot;highlighter-rouge&quot;&gt;:thumbsdown:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ok_hand: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ok_hand:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:punch: &lt;code class=&quot;highlighter-rouge&quot;&gt;:punch:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:facepunch: &lt;code class=&quot;highlighter-rouge&quot;&gt;:facepunch:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fist: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fist:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:v: &lt;code class=&quot;highlighter-rouge&quot;&gt;:v:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wave: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wave:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hand: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hand:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:raised_hand: &lt;code class=&quot;highlighter-rouge&quot;&gt;:raised_hand:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:open_hands: &lt;code class=&quot;highlighter-rouge&quot;&gt;:open_hands:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:point_up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:point_up:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:point_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:point_down:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:point_left: &lt;code class=&quot;highlighter-rouge&quot;&gt;:point_left:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:point_right: &lt;code class=&quot;highlighter-rouge&quot;&gt;:point_right:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:raised_hands: &lt;code class=&quot;highlighter-rouge&quot;&gt;:raised_hands:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pray: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pray:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:point_up_2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:point_up_2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clap: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clap:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:muscle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:muscle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:metal: &lt;code class=&quot;highlighter-rouge&quot;&gt;:metal:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:fu: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fu:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:walking: &lt;code class=&quot;highlighter-rouge&quot;&gt;:walking:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:runner: &lt;code class=&quot;highlighter-rouge&quot;&gt;:runner:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:running: &lt;code class=&quot;highlighter-rouge&quot;&gt;:running:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:couple: &lt;code class=&quot;highlighter-rouge&quot;&gt;:couple:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:family: &lt;code class=&quot;highlighter-rouge&quot;&gt;:family:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:two_men_holding_hands: &lt;code class=&quot;highlighter-rouge&quot;&gt;:two_men_holding_hands:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:two_women_holding_hands: &lt;code class=&quot;highlighter-rouge&quot;&gt;:two_women_holding_hands:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dancer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dancer:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:dancers: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dancers:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ok_woman: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ok_woman:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_good: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_good:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:information_desk_person: &lt;code class=&quot;highlighter-rouge&quot;&gt;:information_desk_person:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:raising_hand: &lt;code class=&quot;highlighter-rouge&quot;&gt;:raising_hand:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bride_with_veil: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bride_with_veil:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:person_with_pouting_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:person_with_pouting_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:person_frowning: &lt;code class=&quot;highlighter-rouge&quot;&gt;:person_frowning:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bow: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bow:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:couplekiss: &lt;code class=&quot;highlighter-rouge&quot;&gt;:couplekiss:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:couple_with_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:couple_with_heart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:massage: &lt;code class=&quot;highlighter-rouge&quot;&gt;:massage:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:haircut: &lt;code class=&quot;highlighter-rouge&quot;&gt;:haircut:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:nail_care: &lt;code class=&quot;highlighter-rouge&quot;&gt;:nail_care:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:boy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:boy:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:girl: &lt;code class=&quot;highlighter-rouge&quot;&gt;:girl:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:woman: &lt;code class=&quot;highlighter-rouge&quot;&gt;:woman:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:man: &lt;code class=&quot;highlighter-rouge&quot;&gt;:man:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:baby: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baby:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:older_woman: &lt;code class=&quot;highlighter-rouge&quot;&gt;:older_woman:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:older_man: &lt;code class=&quot;highlighter-rouge&quot;&gt;:older_man:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:person_with_blond_hair: &lt;code class=&quot;highlighter-rouge&quot;&gt;:person_with_blond_hair:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:man_with_gua_pi_mao: &lt;code class=&quot;highlighter-rouge&quot;&gt;:man_with_gua_pi_mao:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:man_with_turban: &lt;code class=&quot;highlighter-rouge&quot;&gt;:man_with_turban:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:construction_worker: &lt;code class=&quot;highlighter-rouge&quot;&gt;:construction_worker:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cop:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:angel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:angel:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:princess: &lt;code class=&quot;highlighter-rouge&quot;&gt;:princess:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:smiley_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smiley_cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:smile_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smile_cat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:heart_eyes_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heart_eyes_cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:kissing_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kissing_cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:smirk_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smirk_cat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:scream_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:scream_cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:crying_cat_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:crying_cat_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:joy_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:joy_cat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:pouting_cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pouting_cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:japanese_ogre: &lt;code class=&quot;highlighter-rouge&quot;&gt;:japanese_ogre:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:japanese_goblin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:japanese_goblin:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:see_no_evil: &lt;code class=&quot;highlighter-rouge&quot;&gt;:see_no_evil:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hear_no_evil: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hear_no_evil:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:speak_no_evil: &lt;code class=&quot;highlighter-rouge&quot;&gt;:speak_no_evil:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:guardsman: &lt;code class=&quot;highlighter-rouge&quot;&gt;:guardsman:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:skull: &lt;code class=&quot;highlighter-rouge&quot;&gt;:skull:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:feet: &lt;code class=&quot;highlighter-rouge&quot;&gt;:feet:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:lips: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lips:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:kiss: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kiss:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:droplet: &lt;code class=&quot;highlighter-rouge&quot;&gt;:droplet:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ear: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ear:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:eyes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eyes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:nose: &lt;code class=&quot;highlighter-rouge&quot;&gt;:nose:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tongue: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tongue:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:love_letter: &lt;code class=&quot;highlighter-rouge&quot;&gt;:love_letter:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bust_in_silhouette: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bust_in_silhouette:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:busts_in_silhouette: &lt;code class=&quot;highlighter-rouge&quot;&gt;:busts_in_silhouette:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:speech_balloon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:speech_balloon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:thought_balloon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:thought_balloon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:feelsgood: &lt;code class=&quot;highlighter-rouge&quot;&gt;:feelsgood:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:finnadie: &lt;code class=&quot;highlighter-rouge&quot;&gt;:finnadie:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:goberserk: &lt;code class=&quot;highlighter-rouge&quot;&gt;:goberserk:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:godmode: &lt;code class=&quot;highlighter-rouge&quot;&gt;:godmode:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hurtrealbad: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hurtrealbad:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rage1: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rage1:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rage2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rage2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rage3: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rage3:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rage4: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rage4:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:suspect: &lt;code class=&quot;highlighter-rouge&quot;&gt;:suspect:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:trollface: &lt;code class=&quot;highlighter-rouge&quot;&gt;:trollface:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nature&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;:sunny: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sunny:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:umbrella: &lt;code class=&quot;highlighter-rouge&quot;&gt;:umbrella:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:cloud: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cloud:&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:snowflake: &lt;code class=&quot;highlighter-rouge&quot;&gt;:snowflake:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:snowman: &lt;code class=&quot;highlighter-rouge&quot;&gt;:snowman:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:zap: &lt;code class=&quot;highlighter-rouge&quot;&gt;:zap:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cyclone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cyclone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:foggy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:foggy:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ocean: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ocean:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dog: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dog:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mouse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mouse:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:hamster: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hamster:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rabbit: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rabbit:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wolf: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wolf:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:frog: &lt;code class=&quot;highlighter-rouge&quot;&gt;:frog:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tiger: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tiger:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:koala: &lt;code class=&quot;highlighter-rouge&quot;&gt;:koala:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bear: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bear:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pig: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pig:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pig_nose: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pig_nose:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cow: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cow:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:boar: &lt;code class=&quot;highlighter-rouge&quot;&gt;:boar:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:monkey_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:monkey_face:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:monkey: &lt;code class=&quot;highlighter-rouge&quot;&gt;:monkey:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:horse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:horse:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:racehorse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:racehorse:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:camel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:camel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sheep: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sheep:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:elephant: &lt;code class=&quot;highlighter-rouge&quot;&gt;:elephant:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:panda_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:panda_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:snake: &lt;code class=&quot;highlighter-rouge&quot;&gt;:snake:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bird: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bird:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:baby_chick: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baby_chick:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hatched_chick: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hatched_chick:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hatching_chick: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hatching_chick:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:chicken: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chicken:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:penguin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:penguin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:turtle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:turtle:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bug: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bug:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:honeybee: &lt;code class=&quot;highlighter-rouge&quot;&gt;:honeybee:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ant: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ant:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:beetle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:beetle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:snail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:snail:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:octopus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:octopus:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tropical_fish: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tropical_fish:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fish: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fish:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:whale: &lt;code class=&quot;highlighter-rouge&quot;&gt;:whale:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:whale2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:whale2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dolphin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dolphin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cow2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cow2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ram: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ram:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:water_buffalo: &lt;code class=&quot;highlighter-rouge&quot;&gt;:water_buffalo:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tiger2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tiger2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rabbit2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rabbit2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dragon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dragon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:goat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:goat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rooster: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rooster:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dog2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dog2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:pig2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pig2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mouse2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mouse2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ox: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ox:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:dragon_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dragon_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:blowfish: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blowfish:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:crocodile: &lt;code class=&quot;highlighter-rouge&quot;&gt;:crocodile:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:dromedary_camel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dromedary_camel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:leopard: &lt;code class=&quot;highlighter-rouge&quot;&gt;:leopard:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cat2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cat2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:poodle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:poodle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:paw_prints: &lt;code class=&quot;highlighter-rouge&quot;&gt;:paw_prints:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bouquet: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bouquet:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cherry_blossom: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cherry_blossom:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tulip: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tulip:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:four_leaf_clover: &lt;code class=&quot;highlighter-rouge&quot;&gt;:four_leaf_clover:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rose: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rose:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sunflower: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sunflower:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hibiscus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hibiscus:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:maple_leaf: &lt;code class=&quot;highlighter-rouge&quot;&gt;:maple_leaf:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:leaves: &lt;code class=&quot;highlighter-rouge&quot;&gt;:leaves:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fallen_leaf: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fallen_leaf:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:herb: &lt;code class=&quot;highlighter-rouge&quot;&gt;:herb:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mushroom: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mushroom:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cactus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cactus:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:palm_tree: &lt;code class=&quot;highlighter-rouge&quot;&gt;:palm_tree:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:evergreen_tree: &lt;code class=&quot;highlighter-rouge&quot;&gt;:evergreen_tree:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:deciduous_tree: &lt;code class=&quot;highlighter-rouge&quot;&gt;:deciduous_tree:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:chestnut: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chestnut:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:seedling: &lt;code class=&quot;highlighter-rouge&quot;&gt;:seedling:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:blossom: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blossom:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ear_of_rice: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ear_of_rice:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:shell: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shell:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:globe_with_meridians: &lt;code class=&quot;highlighter-rouge&quot;&gt;:globe_with_meridians:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sun_with_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sun_with_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:full_moon_with_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:full_moon_with_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:new_moon_with_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:new_moon_with_face:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:new_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:new_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:waxing_crescent_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:waxing_crescent_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:first_quarter_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:first_quarter_moon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:waxing_gibbous_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:waxing_gibbous_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:full_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:full_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:waning_gibbous_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:waning_gibbous_moon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:last_quarter_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:last_quarter_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:waning_crescent_moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:waning_crescent_moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:last_quarter_moon_with_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:last_quarter_moon_with_face:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:first_quarter_moon_with_face: &lt;code class=&quot;highlighter-rouge&quot;&gt;:first_quarter_moon_with_face:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:moon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:moon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:earth_africa: &lt;code class=&quot;highlighter-rouge&quot;&gt;:earth_africa:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:earth_americas: &lt;code class=&quot;highlighter-rouge&quot;&gt;:earth_americas:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:earth_asia: &lt;code class=&quot;highlighter-rouge&quot;&gt;:earth_asia:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:volcano: &lt;code class=&quot;highlighter-rouge&quot;&gt;:volcano:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:milky_way: &lt;code class=&quot;highlighter-rouge&quot;&gt;:milky_way:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:partly_sunny: &lt;code class=&quot;highlighter-rouge&quot;&gt;:partly_sunny:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:octocat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:octocat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:squirrel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:squirrel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Objects&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;:bamboo: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bamboo:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:gift_heart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gift_heart:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:dolls: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dolls:&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:school_satchel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:school_satchel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mortar_board: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mortar_board:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:flags: &lt;code class=&quot;highlighter-rouge&quot;&gt;:flags:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:fireworks: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fireworks:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sparkler: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sparkler:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wind_chime: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wind_chime:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rice_scene: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rice_scene:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:jack_o_lantern: &lt;code class=&quot;highlighter-rouge&quot;&gt;:jack_o_lantern:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ghost: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ghost:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:santa: &lt;code class=&quot;highlighter-rouge&quot;&gt;:santa:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:christmas_tree: &lt;code class=&quot;highlighter-rouge&quot;&gt;:christmas_tree:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:gift: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gift:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bell: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bell:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_bell: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_bell:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tanabata_tree: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tanabata_tree:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tada: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tada:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:confetti_ball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:confetti_ball:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:balloon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:balloon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:crystal_ball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:crystal_ball:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cd: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cd:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dvd: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dvd:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:floppy_disk: &lt;code class=&quot;highlighter-rouge&quot;&gt;:floppy_disk:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:camera: &lt;code class=&quot;highlighter-rouge&quot;&gt;:camera:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:video_camera: &lt;code class=&quot;highlighter-rouge&quot;&gt;:video_camera:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:movie_camera: &lt;code class=&quot;highlighter-rouge&quot;&gt;:movie_camera:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:computer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:computer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tv: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tv:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:iphone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:iphone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:phone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:phone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:telephone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:telephone:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:telephone_receiver: &lt;code class=&quot;highlighter-rouge&quot;&gt;:telephone_receiver:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pager: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pager:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fax: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fax:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:minidisc: &lt;code class=&quot;highlighter-rouge&quot;&gt;:minidisc:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:vhs: &lt;code class=&quot;highlighter-rouge&quot;&gt;:vhs:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sound: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sound:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:speaker: &lt;code class=&quot;highlighter-rouge&quot;&gt;:speaker:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mute: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mute:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:loudspeaker: &lt;code class=&quot;highlighter-rouge&quot;&gt;:loudspeaker:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:mega: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mega:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hourglass: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hourglass:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hourglass_flowing_sand: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hourglass_flowing_sand:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:alarm_clock: &lt;code class=&quot;highlighter-rouge&quot;&gt;:alarm_clock:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:watch: &lt;code class=&quot;highlighter-rouge&quot;&gt;:watch:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:radio: &lt;code class=&quot;highlighter-rouge&quot;&gt;:radio:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:satellite: &lt;code class=&quot;highlighter-rouge&quot;&gt;:satellite:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:loop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:loop:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mag: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mag:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:mag_right: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mag_right:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:unlock: &lt;code class=&quot;highlighter-rouge&quot;&gt;:unlock:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:lock: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lock:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:lock_with_ink_pen: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lock_with_ink_pen:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:closed_lock_with_key: &lt;code class=&quot;highlighter-rouge&quot;&gt;:closed_lock_with_key:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:key: &lt;code class=&quot;highlighter-rouge&quot;&gt;:key:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bulb: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bulb:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:flashlight: &lt;code class=&quot;highlighter-rouge&quot;&gt;:flashlight:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:high_brightness: &lt;code class=&quot;highlighter-rouge&quot;&gt;:high_brightness:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:low_brightness: &lt;code class=&quot;highlighter-rouge&quot;&gt;:low_brightness:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:electric_plug: &lt;code class=&quot;highlighter-rouge&quot;&gt;:electric_plug:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:battery: &lt;code class=&quot;highlighter-rouge&quot;&gt;:battery:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:calling: &lt;code class=&quot;highlighter-rouge&quot;&gt;:calling:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:email: &lt;code class=&quot;highlighter-rouge&quot;&gt;:email:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mailbox: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mailbox:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:postbox: &lt;code class=&quot;highlighter-rouge&quot;&gt;:postbox:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bath: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bath:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bathtub: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bathtub:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:shower: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shower:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:toilet: &lt;code class=&quot;highlighter-rouge&quot;&gt;:toilet:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wrench: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wrench:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:nut_and_bolt: &lt;code class=&quot;highlighter-rouge&quot;&gt;:nut_and_bolt:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hammer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hammer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:seat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:seat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:moneybag: &lt;code class=&quot;highlighter-rouge&quot;&gt;:moneybag:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:yen: &lt;code class=&quot;highlighter-rouge&quot;&gt;:yen:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dollar: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dollar:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:pound: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pound:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:euro: &lt;code class=&quot;highlighter-rouge&quot;&gt;:euro:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:credit_card: &lt;code class=&quot;highlighter-rouge&quot;&gt;:credit_card:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:money_with_wings: &lt;code class=&quot;highlighter-rouge&quot;&gt;:money_with_wings:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:e-mail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:e-mail:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:inbox_tray: &lt;code class=&quot;highlighter-rouge&quot;&gt;:inbox_tray:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:outbox_tray: &lt;code class=&quot;highlighter-rouge&quot;&gt;:outbox_tray:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:envelope: &lt;code class=&quot;highlighter-rouge&quot;&gt;:envelope:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:incoming_envelope: &lt;code class=&quot;highlighter-rouge&quot;&gt;:incoming_envelope:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:postal_horn: &lt;code class=&quot;highlighter-rouge&quot;&gt;:postal_horn:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mailbox_closed: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mailbox_closed:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mailbox_with_mail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mailbox_with_mail:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:mailbox_with_no_mail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mailbox_with_no_mail:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:door: &lt;code class=&quot;highlighter-rouge&quot;&gt;:door:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:smoking: &lt;code class=&quot;highlighter-rouge&quot;&gt;:smoking:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bomb: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bomb:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:gun: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gun:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hocho: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hocho:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:pill: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pill:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:syringe: &lt;code class=&quot;highlighter-rouge&quot;&gt;:syringe:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:page_facing_up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:page_facing_up:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:page_with_curl: &lt;code class=&quot;highlighter-rouge&quot;&gt;:page_with_curl:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bookmark_tabs: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bookmark_tabs:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bar_chart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bar_chart:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:chart_with_upwards_trend: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chart_with_upwards_trend:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:chart_with_downwards_trend: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chart_with_downwards_trend:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:scroll: &lt;code class=&quot;highlighter-rouge&quot;&gt;:scroll:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clipboard: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clipboard:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:calendar: &lt;code class=&quot;highlighter-rouge&quot;&gt;:calendar:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:date: &lt;code class=&quot;highlighter-rouge&quot;&gt;:date:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:card_index: &lt;code class=&quot;highlighter-rouge&quot;&gt;:card_index:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:file_folder: &lt;code class=&quot;highlighter-rouge&quot;&gt;:file_folder:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:open_file_folder: &lt;code class=&quot;highlighter-rouge&quot;&gt;:open_file_folder:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:scissors: &lt;code class=&quot;highlighter-rouge&quot;&gt;:scissors:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pushpin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pushpin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:paperclip: &lt;code class=&quot;highlighter-rouge&quot;&gt;:paperclip:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:black_nib: &lt;code class=&quot;highlighter-rouge&quot;&gt;:black_nib:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pencil2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pencil2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:straight_ruler: &lt;code class=&quot;highlighter-rouge&quot;&gt;:straight_ruler:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:triangular_ruler: &lt;code class=&quot;highlighter-rouge&quot;&gt;:triangular_ruler:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:closed_book: &lt;code class=&quot;highlighter-rouge&quot;&gt;:closed_book:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:green_book: &lt;code class=&quot;highlighter-rouge&quot;&gt;:green_book:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:blue_book: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blue_book:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:orange_book: &lt;code class=&quot;highlighter-rouge&quot;&gt;:orange_book:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:notebook: &lt;code class=&quot;highlighter-rouge&quot;&gt;:notebook:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:notebook_with_decorative_cover: &lt;code class=&quot;highlighter-rouge&quot;&gt;:notebook_with_decorative_cover:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ledger: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ledger:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:books: &lt;code class=&quot;highlighter-rouge&quot;&gt;:books:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bookmark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bookmark:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:name_badge: &lt;code class=&quot;highlighter-rouge&quot;&gt;:name_badge:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:microscope: &lt;code class=&quot;highlighter-rouge&quot;&gt;:microscope:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:telescope: &lt;code class=&quot;highlighter-rouge&quot;&gt;:telescope:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:newspaper: &lt;code class=&quot;highlighter-rouge&quot;&gt;:newspaper:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:football: &lt;code class=&quot;highlighter-rouge&quot;&gt;:football:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:basketball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:basketball:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:soccer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:soccer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:baseball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baseball:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tennis: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tennis:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:8ball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:8ball:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rugby_football: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rugby_football:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bowling: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bowling:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:golf: &lt;code class=&quot;highlighter-rouge&quot;&gt;:golf:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mountain_bicyclist: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mountain_bicyclist:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bicyclist: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bicyclist:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:horse_racing: &lt;code class=&quot;highlighter-rouge&quot;&gt;:horse_racing:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:snowboarder: &lt;code class=&quot;highlighter-rouge&quot;&gt;:snowboarder:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:swimmer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:swimmer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:surfer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:surfer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ski: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ski:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:spades: &lt;code class=&quot;highlighter-rouge&quot;&gt;:spades:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hearts: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hearts:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clubs: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clubs:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:diamonds: &lt;code class=&quot;highlighter-rouge&quot;&gt;:diamonds:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:gem: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gem:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ring: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ring:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:trophy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:trophy:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:musical_score: &lt;code class=&quot;highlighter-rouge&quot;&gt;:musical_score:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:musical_keyboard: &lt;code class=&quot;highlighter-rouge&quot;&gt;:musical_keyboard:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:violin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:violin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:space_invader: &lt;code class=&quot;highlighter-rouge&quot;&gt;:space_invader:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:video_game: &lt;code class=&quot;highlighter-rouge&quot;&gt;:video_game:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:black_joker: &lt;code class=&quot;highlighter-rouge&quot;&gt;:black_joker:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:flower_playing_cards: &lt;code class=&quot;highlighter-rouge&quot;&gt;:flower_playing_cards:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:game_die: &lt;code class=&quot;highlighter-rouge&quot;&gt;:game_die:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:dart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mahjong: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mahjong:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clapper: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clapper:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:memo: &lt;code class=&quot;highlighter-rouge&quot;&gt;:memo:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pencil: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pencil:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:book: &lt;code class=&quot;highlighter-rouge&quot;&gt;:book:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:art: &lt;code class=&quot;highlighter-rouge&quot;&gt;:art:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:microphone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:microphone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:headphones: &lt;code class=&quot;highlighter-rouge&quot;&gt;:headphones:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:trumpet: &lt;code class=&quot;highlighter-rouge&quot;&gt;:trumpet:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:saxophone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:saxophone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:guitar: &lt;code class=&quot;highlighter-rouge&quot;&gt;:guitar:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:shoe: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shoe:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sandal: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sandal:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:high_heel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:high_heel:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:lipstick: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lipstick:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:boot: &lt;code class=&quot;highlighter-rouge&quot;&gt;:boot:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:shirt: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shirt:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tshirt: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tshirt:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:necktie: &lt;code class=&quot;highlighter-rouge&quot;&gt;:necktie:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:womans_clothes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:womans_clothes:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:dress: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dress:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:running_shirt_with_sash: &lt;code class=&quot;highlighter-rouge&quot;&gt;:running_shirt_with_sash:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:jeans: &lt;code class=&quot;highlighter-rouge&quot;&gt;:jeans:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:kimono: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kimono:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bikini: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bikini:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ribbon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ribbon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tophat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tophat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:crown: &lt;code class=&quot;highlighter-rouge&quot;&gt;:crown:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:womans_hat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:womans_hat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:mans_shoe: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mans_shoe:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:closed_umbrella: &lt;code class=&quot;highlighter-rouge&quot;&gt;:closed_umbrella:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:briefcase: &lt;code class=&quot;highlighter-rouge&quot;&gt;:briefcase:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:handbag: &lt;code class=&quot;highlighter-rouge&quot;&gt;:handbag:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pouch: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pouch:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:purse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:purse:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:eyeglasses: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eyeglasses:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fishing_pole_and_fish: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fishing_pole_and_fish:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:coffee: &lt;code class=&quot;highlighter-rouge&quot;&gt;:coffee:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tea: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tea:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sake: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sake:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:baby_bottle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baby_bottle:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:beer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:beer:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:beers: &lt;code class=&quot;highlighter-rouge&quot;&gt;:beers:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cocktail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cocktail:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tropical_drink: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tropical_drink:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wine_glass: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wine_glass:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fork_and_knife: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fork_and_knife:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:pizza: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pizza:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hamburger: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hamburger:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fries: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fries:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:poultry_leg: &lt;code class=&quot;highlighter-rouge&quot;&gt;:poultry_leg:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:meat_on_bone: &lt;code class=&quot;highlighter-rouge&quot;&gt;:meat_on_bone:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:spaghetti: &lt;code class=&quot;highlighter-rouge&quot;&gt;:spaghetti:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:curry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:curry:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fried_shrimp: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fried_shrimp:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bento: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bento:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sushi: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sushi:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fish_cake: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fish_cake:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rice_ball: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rice_ball:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rice_cracker: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rice_cracker:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rice: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rice:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ramen: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ramen:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:stew: &lt;code class=&quot;highlighter-rouge&quot;&gt;:stew:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:oden: &lt;code class=&quot;highlighter-rouge&quot;&gt;:oden:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:dango: &lt;code class=&quot;highlighter-rouge&quot;&gt;:dango:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:egg: &lt;code class=&quot;highlighter-rouge&quot;&gt;:egg:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bread: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bread:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:doughnut: &lt;code class=&quot;highlighter-rouge&quot;&gt;:doughnut:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:custard: &lt;code class=&quot;highlighter-rouge&quot;&gt;:custard:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:icecream: &lt;code class=&quot;highlighter-rouge&quot;&gt;:icecream:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ice_cream: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ice_cream:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:shaved_ice: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shaved_ice:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:birthday: &lt;code class=&quot;highlighter-rouge&quot;&gt;:birthday:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cake: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cake:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cookie: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cookie:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:chocolate_bar: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chocolate_bar:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:candy: &lt;code class=&quot;highlighter-rouge&quot;&gt;:candy:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:lollipop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lollipop:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:honey_pot: &lt;code class=&quot;highlighter-rouge&quot;&gt;:honey_pot:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:apple: &lt;code class=&quot;highlighter-rouge&quot;&gt;:apple:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_apple: &lt;code class=&quot;highlighter-rouge&quot;&gt;:green_apple:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tangerine: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tangerine:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:lemon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:lemon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cherries: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cherries:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:grapes: &lt;code class=&quot;highlighter-rouge&quot;&gt;:grapes:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:watermelon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:watermelon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:strawberry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:strawberry:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:peach: &lt;code class=&quot;highlighter-rouge&quot;&gt;:peach:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:melon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:melon:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:banana: &lt;code class=&quot;highlighter-rouge&quot;&gt;:banana:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pear: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pear:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pineapple: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pineapple:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sweet_potato: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sweet_potato:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:eggplant: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eggplant:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tomato: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tomato:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:corn: &lt;code class=&quot;highlighter-rouge&quot;&gt;:corn:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Places&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;:house: &lt;code class=&quot;highlighter-rouge&quot;&gt;:house:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:house_with_garden: &lt;code class=&quot;highlighter-rouge&quot;&gt;:house_with_garden:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:school: &lt;code class=&quot;highlighter-rouge&quot;&gt;:school:&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:office: &lt;code class=&quot;highlighter-rouge&quot;&gt;:office:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:post_office: &lt;code class=&quot;highlighter-rouge&quot;&gt;:post_office:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hospital: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hospital:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bank: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bank:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:convenience_store: &lt;code class=&quot;highlighter-rouge&quot;&gt;:convenience_store:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:love_hotel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:love_hotel:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:hotel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hotel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wedding: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wedding:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:church: &lt;code class=&quot;highlighter-rouge&quot;&gt;:church:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:department_store: &lt;code class=&quot;highlighter-rouge&quot;&gt;:department_store:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:european_post_office: &lt;code class=&quot;highlighter-rouge&quot;&gt;:european_post_office:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:city_sunrise: &lt;code class=&quot;highlighter-rouge&quot;&gt;:city_sunrise:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:city_sunset: &lt;code class=&quot;highlighter-rouge&quot;&gt;:city_sunset:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:japanese_castle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:japanese_castle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:european_castle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:european_castle:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:tent: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tent:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:factory: &lt;code class=&quot;highlighter-rouge&quot;&gt;:factory:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tokyo_tower: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tokyo_tower:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:japan: &lt;code class=&quot;highlighter-rouge&quot;&gt;:japan:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mount_fuji: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mount_fuji:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sunrise_over_mountains: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sunrise_over_mountains:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sunrise: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sunrise:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:stars: &lt;code class=&quot;highlighter-rouge&quot;&gt;:stars:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:statue_of_liberty: &lt;code class=&quot;highlighter-rouge&quot;&gt;:statue_of_liberty:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bridge_at_night: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bridge_at_night:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:carousel_horse: &lt;code class=&quot;highlighter-rouge&quot;&gt;:carousel_horse:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rainbow: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rainbow:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ferris_wheel: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ferris_wheel:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fountain: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fountain:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:roller_coaster: &lt;code class=&quot;highlighter-rouge&quot;&gt;:roller_coaster:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ship: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ship:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:speedboat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:speedboat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:boat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:boat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sailboat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sailboat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rowboat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rowboat:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:anchor: &lt;code class=&quot;highlighter-rouge&quot;&gt;:anchor:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rocket: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rocket:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:airplane: &lt;code class=&quot;highlighter-rouge&quot;&gt;:airplane:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:helicopter: &lt;code class=&quot;highlighter-rouge&quot;&gt;:helicopter:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:steam_locomotive: &lt;code class=&quot;highlighter-rouge&quot;&gt;:steam_locomotive:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tram: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tram:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mountain_railway: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mountain_railway:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bike: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bike:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:aerial_tramway: &lt;code class=&quot;highlighter-rouge&quot;&gt;:aerial_tramway:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:suspension_railway: &lt;code class=&quot;highlighter-rouge&quot;&gt;:suspension_railway:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:mountain_cableway: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mountain_cableway:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tractor: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tractor:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:blue_car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:blue_car:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:oncoming_automobile: &lt;code class=&quot;highlighter-rouge&quot;&gt;:oncoming_automobile:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:car:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:red_car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:red_car:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:taxi: &lt;code class=&quot;highlighter-rouge&quot;&gt;:taxi:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:oncoming_taxi: &lt;code class=&quot;highlighter-rouge&quot;&gt;:oncoming_taxi:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:articulated_lorry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:articulated_lorry:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bus:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:oncoming_bus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:oncoming_bus:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:rotating_light: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rotating_light:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:police_car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:police_car:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:oncoming_police_car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:oncoming_police_car:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fire_engine: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fire_engine:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ambulance: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ambulance:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:minibus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:minibus:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:truck: &lt;code class=&quot;highlighter-rouge&quot;&gt;:truck:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:train: &lt;code class=&quot;highlighter-rouge&quot;&gt;:train:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:station: &lt;code class=&quot;highlighter-rouge&quot;&gt;:station:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:train2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:train2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bullettrain_front: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bullettrain_front:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bullettrain_side: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bullettrain_side:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:light_rail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:light_rail:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:monorail: &lt;code class=&quot;highlighter-rouge&quot;&gt;:monorail:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:railway_car: &lt;code class=&quot;highlighter-rouge&quot;&gt;:railway_car:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:trolleybus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:trolleybus:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ticket: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ticket:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fuelpump: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fuelpump:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:vertical_traffic_light: &lt;code class=&quot;highlighter-rouge&quot;&gt;:vertical_traffic_light:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:traffic_light: &lt;code class=&quot;highlighter-rouge&quot;&gt;:traffic_light:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:warning: &lt;code class=&quot;highlighter-rouge&quot;&gt;:warning:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:construction: &lt;code class=&quot;highlighter-rouge&quot;&gt;:construction:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:beginner: &lt;code class=&quot;highlighter-rouge&quot;&gt;:beginner:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:atm: &lt;code class=&quot;highlighter-rouge&quot;&gt;:atm:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:slot_machine: &lt;code class=&quot;highlighter-rouge&quot;&gt;:slot_machine:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:busstop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:busstop:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:barber: &lt;code class=&quot;highlighter-rouge&quot;&gt;:barber:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:hotsprings: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hotsprings:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:checkered_flag: &lt;code class=&quot;highlighter-rouge&quot;&gt;:checkered_flag:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:crossed_flags: &lt;code class=&quot;highlighter-rouge&quot;&gt;:crossed_flags:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:izakaya_lantern: &lt;code class=&quot;highlighter-rouge&quot;&gt;:izakaya_lantern:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:moyai: &lt;code class=&quot;highlighter-rouge&quot;&gt;:moyai:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:circus_tent: &lt;code class=&quot;highlighter-rouge&quot;&gt;:circus_tent:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:performing_arts: &lt;code class=&quot;highlighter-rouge&quot;&gt;:performing_arts:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:round_pushpin: &lt;code class=&quot;highlighter-rouge&quot;&gt;:round_pushpin:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:triangular_flag_on_post: &lt;code class=&quot;highlighter-rouge&quot;&gt;:triangular_flag_on_post:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:jp: &lt;code class=&quot;highlighter-rouge&quot;&gt;:jp:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:kr: &lt;code class=&quot;highlighter-rouge&quot;&gt;:kr:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cn: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cn:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:us: &lt;code class=&quot;highlighter-rouge&quot;&gt;:us:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:fr: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fr:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:es: &lt;code class=&quot;highlighter-rouge&quot;&gt;:es:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:it: &lt;code class=&quot;highlighter-rouge&quot;&gt;:it:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ru: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ru:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:gb: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gb:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:uk: &lt;code class=&quot;highlighter-rouge&quot;&gt;:uk:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:de: &lt;code class=&quot;highlighter-rouge&quot;&gt;:de:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Symbols&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;:one: &lt;code class=&quot;highlighter-rouge&quot;&gt;:one:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:two: &lt;code class=&quot;highlighter-rouge&quot;&gt;:two:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;:three: &lt;code class=&quot;highlighter-rouge&quot;&gt;:three:&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:four: &lt;code class=&quot;highlighter-rouge&quot;&gt;:four:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:five: &lt;code class=&quot;highlighter-rouge&quot;&gt;:five:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:six: &lt;code class=&quot;highlighter-rouge&quot;&gt;:six:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:seven: &lt;code class=&quot;highlighter-rouge&quot;&gt;:seven:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:eight: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eight:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:nine: &lt;code class=&quot;highlighter-rouge&quot;&gt;:nine:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:keycap_ten: &lt;code class=&quot;highlighter-rouge&quot;&gt;:keycap_ten:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:1234: &lt;code class=&quot;highlighter-rouge&quot;&gt;:1234:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:zero: &lt;code class=&quot;highlighter-rouge&quot;&gt;:zero:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:hash: &lt;code class=&quot;highlighter-rouge&quot;&gt;:hash:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:symbols: &lt;code class=&quot;highlighter-rouge&quot;&gt;:symbols:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_backward: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_backward:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_down:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_forward: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_forward:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_left: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_left:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:capital_abcd: &lt;code class=&quot;highlighter-rouge&quot;&gt;:capital_abcd:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:abcd: &lt;code class=&quot;highlighter-rouge&quot;&gt;:abcd:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:abc: &lt;code class=&quot;highlighter-rouge&quot;&gt;:abc:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_lower_left: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_lower_left:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_lower_right: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_lower_right:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_right: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_right:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_up:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_upper_left: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_upper_left:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_upper_right: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_upper_right:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_double_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_double_down:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_double_up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_double_up:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_down_small: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_down_small:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_heading_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_heading_down:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_heading_up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_heading_up:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:leftwards_arrow_with_hook: &lt;code class=&quot;highlighter-rouge&quot;&gt;:leftwards_arrow_with_hook:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_right_hook: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_right_hook:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:left_right_arrow: &lt;code class=&quot;highlighter-rouge&quot;&gt;:left_right_arrow:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrow_up_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_up_down:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:arrow_up_small: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrow_up_small:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrows_clockwise: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrows_clockwise:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:arrows_counterclockwise: &lt;code class=&quot;highlighter-rouge&quot;&gt;:arrows_counterclockwise:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:rewind: &lt;code class=&quot;highlighter-rouge&quot;&gt;:rewind:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:fast_forward: &lt;code class=&quot;highlighter-rouge&quot;&gt;:fast_forward:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:information_source: &lt;code class=&quot;highlighter-rouge&quot;&gt;:information_source:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ok: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ok:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:twisted_rightwards_arrows: &lt;code class=&quot;highlighter-rouge&quot;&gt;:twisted_rightwards_arrows:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:repeat: &lt;code class=&quot;highlighter-rouge&quot;&gt;:repeat:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:repeat_one: &lt;code class=&quot;highlighter-rouge&quot;&gt;:repeat_one:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:new: &lt;code class=&quot;highlighter-rouge&quot;&gt;:new:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:top: &lt;code class=&quot;highlighter-rouge&quot;&gt;:top:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:up: &lt;code class=&quot;highlighter-rouge&quot;&gt;:up:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cool: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cool:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:free: &lt;code class=&quot;highlighter-rouge&quot;&gt;:free:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ng: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ng:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cinema: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cinema:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:koko: &lt;code class=&quot;highlighter-rouge&quot;&gt;:koko:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:signal_strength: &lt;code class=&quot;highlighter-rouge&quot;&gt;:signal_strength:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u5272: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u5272:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u5408: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u5408:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:u55b6: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u55b6:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u6307: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u6307:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u6708: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u6708:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:u6709: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u6709:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u6e80: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u6e80:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u7121: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u7121:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:u7533: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u7533:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u7a7a: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u7a7a:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:u7981: &lt;code class=&quot;highlighter-rouge&quot;&gt;:u7981:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sa: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sa:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:restroom: &lt;code class=&quot;highlighter-rouge&quot;&gt;:restroom:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mens: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mens:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:womens: &lt;code class=&quot;highlighter-rouge&quot;&gt;:womens:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:baby_symbol: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baby_symbol:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_smoking: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_smoking:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:parking: &lt;code class=&quot;highlighter-rouge&quot;&gt;:parking:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wheelchair: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wheelchair:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:metro: &lt;code class=&quot;highlighter-rouge&quot;&gt;:metro:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:baggage_claim: &lt;code class=&quot;highlighter-rouge&quot;&gt;:baggage_claim:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:accept: &lt;code class=&quot;highlighter-rouge&quot;&gt;:accept:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wc: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wc:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:potable_water: &lt;code class=&quot;highlighter-rouge&quot;&gt;:potable_water:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:put_litter_in_its_place: &lt;code class=&quot;highlighter-rouge&quot;&gt;:put_litter_in_its_place:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:secret: &lt;code class=&quot;highlighter-rouge&quot;&gt;:secret:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:congratulations: &lt;code class=&quot;highlighter-rouge&quot;&gt;:congratulations:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:m: &lt;code class=&quot;highlighter-rouge&quot;&gt;:m:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:passport_control: &lt;code class=&quot;highlighter-rouge&quot;&gt;:passport_control:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:left_luggage: &lt;code class=&quot;highlighter-rouge&quot;&gt;:left_luggage:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:customs: &lt;code class=&quot;highlighter-rouge&quot;&gt;:customs:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ideograph_advantage: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ideograph_advantage:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cl: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cl:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sos: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sos:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:id: &lt;code class=&quot;highlighter-rouge&quot;&gt;:id:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:no_entry_sign: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_entry_sign:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:underage: &lt;code class=&quot;highlighter-rouge&quot;&gt;:underage:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_mobile_phones: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_mobile_phones:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:do_not_litter: &lt;code class=&quot;highlighter-rouge&quot;&gt;:do_not_litter:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:non-potable_water: &lt;code class=&quot;highlighter-rouge&quot;&gt;:non-potable_water:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_bicycles: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_bicycles:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:no_pedestrians: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_pedestrians:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:children_crossing: &lt;code class=&quot;highlighter-rouge&quot;&gt;:children_crossing:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:no_entry: &lt;code class=&quot;highlighter-rouge&quot;&gt;:no_entry:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:eight_spoked_asterisk: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eight_spoked_asterisk:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:eight_pointed_black_star: &lt;code class=&quot;highlighter-rouge&quot;&gt;:eight_pointed_black_star:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heart_decoration: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heart_decoration:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:vs: &lt;code class=&quot;highlighter-rouge&quot;&gt;:vs:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:vibration_mode: &lt;code class=&quot;highlighter-rouge&quot;&gt;:vibration_mode:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:mobile_phone_off: &lt;code class=&quot;highlighter-rouge&quot;&gt;:mobile_phone_off:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:chart: &lt;code class=&quot;highlighter-rouge&quot;&gt;:chart:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:currency_exchange: &lt;code class=&quot;highlighter-rouge&quot;&gt;:currency_exchange:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:aries: &lt;code class=&quot;highlighter-rouge&quot;&gt;:aries:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:taurus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:taurus:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:gemini: &lt;code class=&quot;highlighter-rouge&quot;&gt;:gemini:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:cancer: &lt;code class=&quot;highlighter-rouge&quot;&gt;:cancer:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:leo: &lt;code class=&quot;highlighter-rouge&quot;&gt;:leo:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:virgo: &lt;code class=&quot;highlighter-rouge&quot;&gt;:virgo:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:libra: &lt;code class=&quot;highlighter-rouge&quot;&gt;:libra:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:scorpius: &lt;code class=&quot;highlighter-rouge&quot;&gt;:scorpius:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:sagittarius: &lt;code class=&quot;highlighter-rouge&quot;&gt;:sagittarius:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:capricorn: &lt;code class=&quot;highlighter-rouge&quot;&gt;:capricorn:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:aquarius: &lt;code class=&quot;highlighter-rouge&quot;&gt;:aquarius:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:pisces: &lt;code class=&quot;highlighter-rouge&quot;&gt;:pisces:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ophiuchus: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ophiuchus:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:six_pointed_star: &lt;code class=&quot;highlighter-rouge&quot;&gt;:six_pointed_star:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:negative_squared_cross_mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:negative_squared_cross_mark:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:a: &lt;code class=&quot;highlighter-rouge&quot;&gt;:a:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:b: &lt;code class=&quot;highlighter-rouge&quot;&gt;:b:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:ab: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ab:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:o2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:o2:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:diamond_shape_with_a_dot_inside: &lt;code class=&quot;highlighter-rouge&quot;&gt;:diamond_shape_with_a_dot_inside:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:recycle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:recycle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:end: &lt;code class=&quot;highlighter-rouge&quot;&gt;:end:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:on: &lt;code class=&quot;highlighter-rouge&quot;&gt;:on:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:soon: &lt;code class=&quot;highlighter-rouge&quot;&gt;:soon:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock1: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock1:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock130: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock130:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock10: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock10:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock1030: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock1030:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock11: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock11:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock1130: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock1130:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock12: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock12:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock1230: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock1230:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock2: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock2:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock230: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock230:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock3: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock3:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock330: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock330:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock4: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock4:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock430: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock430:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock5: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock5:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock530: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock530:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock6: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock6:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock630: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock630:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock7: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock7:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock730: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock730:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock8: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock8:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock830: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock830:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:clock9: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock9:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:clock930: &lt;code class=&quot;highlighter-rouge&quot;&gt;:clock930:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_dollar_sign: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_dollar_sign:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:copyright: &lt;code class=&quot;highlighter-rouge&quot;&gt;:copyright:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:registered: &lt;code class=&quot;highlighter-rouge&quot;&gt;:registered:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:tm: &lt;code class=&quot;highlighter-rouge&quot;&gt;:tm:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:x: &lt;code class=&quot;highlighter-rouge&quot;&gt;:x:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_exclamation_mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_exclamation_mark:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:bangbang: &lt;code class=&quot;highlighter-rouge&quot;&gt;:bangbang:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:interrobang: &lt;code class=&quot;highlighter-rouge&quot;&gt;:interrobang:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:o: &lt;code class=&quot;highlighter-rouge&quot;&gt;:o:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_multiplication_x: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_multiplication_x:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:heavy_plus_sign: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_plus_sign:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_minus_sign: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_minus_sign:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_division_sign: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_division_sign:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:white_flower: &lt;code class=&quot;highlighter-rouge&quot;&gt;:white_flower:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:100: &lt;code class=&quot;highlighter-rouge&quot;&gt;:100:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:heavy_check_mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:heavy_check_mark:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ballot_box_with_check: &lt;code class=&quot;highlighter-rouge&quot;&gt;:ballot_box_with_check:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:radio_button: &lt;code class=&quot;highlighter-rouge&quot;&gt;:radio_button:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:link: &lt;code class=&quot;highlighter-rouge&quot;&gt;:link:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:curly_loop: &lt;code class=&quot;highlighter-rouge&quot;&gt;:curly_loop:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wavy_dash: &lt;code class=&quot;highlighter-rouge&quot;&gt;:wavy_dash:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:part_alternation_mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:part_alternation_mark:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:trident: &lt;code class=&quot;highlighter-rouge&quot;&gt;:trident:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:black_square: &lt;code class=&quot;highlighter-rouge&quot;&gt;:black_square:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:white_square: &lt;code class=&quot;highlighter-rouge&quot;&gt;:white_square:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:white_check_mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;:white_check_mark:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:black_square_button: &lt;code class=&quot;highlighter-rouge&quot;&gt;:black_square_button:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:white_square_button: &lt;code class=&quot;highlighter-rouge&quot;&gt;:white_square_button:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:black_circle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:black_circle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:white_circle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:white_circle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:red_circle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:red_circle:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:large_blue_circle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:large_blue_circle:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:large_blue_diamond: &lt;code class=&quot;highlighter-rouge&quot;&gt;:large_blue_diamond:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:large_orange_diamond: &lt;code class=&quot;highlighter-rouge&quot;&gt;:large_orange_diamond:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:small_blue_diamond: &lt;code class=&quot;highlighter-rouge&quot;&gt;:small_blue_diamond:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:small_orange_diamond: &lt;code class=&quot;highlighter-rouge&quot;&gt;:small_orange_diamond:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:small_red_triangle: &lt;code class=&quot;highlighter-rouge&quot;&gt;:small_red_triangle:&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:small_red_triangle_down: &lt;code class=&quot;highlighter-rouge&quot;&gt;:small_red_triangle_down:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:shipit: &lt;code class=&quot;highlighter-rouge&quot;&gt;:shipit:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</content>
 </entry>
 
 <entry>
   <title>프레임워크(Framework) vs 라이브러리(Library)</title>
   <link href="http://localhost:4000/study_googling/etc/Framework-vs-Library/"/>
   <updated>2020-03-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/etc/Framework vs Library</id>
   <content type="html">&lt;h3 id=&quot;프레임워크framework-vs-라이브러리library-firefirefire&quot;&gt;프레임워크(Framework) vs 라이브러리(Library) :fire::fire::fire:&lt;/h3&gt;

&lt;p&gt;예전에 면접 질문들을 정리하다가 Framework와 Library의 차이에 대해 생각해보게 됐습니다.&lt;/p&gt;

&lt;p&gt;여기저기 글을 찾아 헤메던 와중 가장 알기 쉽고 간단하게 정리된 문장을 발견했습니다.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;**라이브러리와 프레임워크의 차이는 제어 흐름에 대한 주도성이 누구에게/어디에 있는가이다.**&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;블로그 이곳 저곳에 흩어져 있던 말이라 어떤 분이 처음 하신 말인지 출처를 찾아 봤더니… &lt;strong&gt;『거꾸로 배우는 소프트웨어 개발 - 이호종』&lt;/strong&gt; 이라는 책이 출처인것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;프레임워크&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;프레임워크는 프로그램이 흐르는 틀을 제공해줍니다. 개발자의 역할은 프레임워크님이 잘 굴러갈 수 있게 채워줘야 할 부분을 채워주는 것입니다.&lt;/strong&gt; 프로그램 흐름에 대한 제어권은 프레임워크님에게 있습니다.&lt;/p&gt;

&lt;p&gt;스프링 프레임워크를 사용하는데 왜 ‘Dispatcher Servlet’이 ‘Handler Mapping’을 찾아가고 ‘Handler Adapter’를 찾아가고 ‘View Resolver’를 찾아가는지 이유를 알 필요는 있지만 애써 건드릴 필요는 없습니다. 전체적인 흐름은 프레임워크님에게 맡겨 줍시다. :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;라이브러리&lt;/strong&gt; :hammer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;라이브러리는 반면 프로그램을 다루는데 필요한 도구들을 제공해줍니다. 프로그램이 전체적으로 어떻게 돌아갈지 결정하는건 개발자 본인입니다.&lt;/strong&gt; 스프링 프레임워크가 없어도 개발자가 원하는대로 진행되는 웹 서비스를 만들 수 있습니다.&lt;/p&gt;

&lt;p&gt;Java에서 제공하는 소켓 API는(라이브러리가 아니라 api긴 하지만…) TCP 통신을 할때 유용한 도구 입니다. 이 소켓 API를 잘 휘두루면 본인이 원하는 대로 흘러가는 웹 서비스를 만들 수 있습니다. 주도권은 온전히 개발자에게 있습니다.(책임도.. :weary:)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>프록시</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C6/"/>
   <updated>2020-03-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드6</id>
   <content type="html">&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;61-웹-중개자&quot;&gt;6.1. 웹 중개자&lt;/h3&gt;

&lt;p&gt;쿠팡, 11번가와 같은 인터넷 쇼핑몰은 소비자와 판매자 사이를 중개해줍니다. 소비자 입장에선 똑같이 돈을 주고 물건을 받는것이지만 인터넷 쇼핑몰을 이용하면 쇼핑몰이 제공하는 다양한 기능(상품 비교, 장바구니 등)을 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;프록시는 클라이언트와 서버를 중개해줍니다. 클라이언트와 서버 사이에 놓여 여러가지 기능들을 제공해줍니다. 클라이언트와 서버 사이에 있기 때문에 프록시는 클라이언트와 통신할땐 서버처럼, 서버와 통신할 땐 클라이언트 처럼 행동합니다.&lt;/p&gt;

&lt;h4 id=&quot;611-개인-프록시와-공유-프록시&quot;&gt;6.1.1. 개인 프록시와 공유 프록시&lt;/h4&gt;

&lt;p&gt;프록시는 하나의 클라이언트가 하나를 독점적으로 쓸 수도 있고 여러 클라이언트가 공유할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;공용 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;하지만 대부분의 프록시는 사실 공용 프록시입니다. 클라이언트마다 프록시를 할당해 관리하는 것 보다 하나의 큰 프록시를 관리하는게 효율이 더 높기 때문입니다. 그리고 캐시 프록시 서버 같은 프록시는 공통된 요청을 빠르게 처리할 수 있기 때문에 사용자가 많을수록 유리하기도 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;개인 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;개인 프록시는 흔하지 않지만 꾸준히 사용됩니다. 주로 클라이언트의 PC에 설치되어 실행 됩니다. 인터넷 브라우저 자체적으로 개인 프록시를 운영하기도 합니다.&lt;/p&gt;

&lt;h4 id=&quot;612-프록시-대-게이트웨이&quot;&gt;6.1.2. 프록시 대 게이트웨이&lt;/h4&gt;

&lt;p&gt;그런데 클라이언트와 서버 사이를 중개해주는 것이 하나 더 있습니다. 바로 게이트웨이입니다. 앞 장에서 살짝 살펴보았고 이후 8장에서 더 자세히 살펴볼 것입니다.&lt;/p&gt;

&lt;p&gt;일반적으로 프록시와 게이트웨이의 차이점은 같은 프로토콜을 연결하는지, 다른 프로토콜을 연결하는 지입니다. 프록시는 같은 프로토콜을 사용해 클라이언트와 서버를 중개하고, 게이트웨이는 메세지를 받아 다른 프로토콜의 메세지로 전환해줍니다.&lt;/p&gt;

&lt;p&gt;하지만 사실 프록시와 게이트웨이의 경계는 모호합니다. 프록시는 다른 버전의 HTTP 프로토콜끼리도 중개해야 하기 때문에(클라이언트마다 HTTP 버전이 다르므로) 프로토콜을 변환하기도 합니다. 그리고 상용 프록시들은 SSL 보안 프로토콜, SOCKS 방화벽, FTP접근 등 게이트웨이가 하는 역할까지 지원합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;62-왜-프록시를-사용하는가&quot;&gt;6.2. 왜 프록시를 사용하는가?&lt;/h3&gt;

&lt;p&gt;프로시가 사용되는 몇 가지 예를 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;어린이 필터&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;어린이들이 주로 사용하는 학교의 PC 같은 경우엔 유해한 사이트를 차단하는 프록시를 설정해둘수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;문서 접근 제어자&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;대기업 같이 권한이 계층화 되어있는 곳에선 부서별로, 직급별로 열람 가능한 문서를 제한할 수 있습니다. 모든 클라이언트가 중앙 프록시 서버를 거칠 수 있도록 하고, 중앙 프록시 서버에서 요청마다 접근을 제어하고 audit trail(감사 추적)을 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;보안 방화벽&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;보안용 프록시를 설치해 들어오는 요청에 바이러스가 있는지 검사할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;웹 캐시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서버에 걸리는 부담을 줄이고 클라이언트들이 응답을 빠르게 얻을 수 있도록 서버 안에 자주 열람되는 리소스들의 사본을 모아 프록시에 저장해 놓을 수도 있습니다. 이를 웹 캐시라고 부릅니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;대리 프록시(Surrogate)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;대리 프록시는 웹 서버인것 처럼 위장합니다. 요청을 받아 요청받은 리소스의 위치를 찾기 위해 다른 서버들과 통신합니다. 웹 서버의 성능 개선을 목적으로 쓰이기 때문에 흔히 서버 가속기라고 불리기도 합니다. 콘텐츠 라우팅기능과 결합되어 분산 네트워크를 구성하기도 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;콘텐츠 라우터&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;콘텐츠 라우터는 클라이언트나 콘텐츠 종류에 따라 요청을 특정 웹 서버로 유도합니다. 예를들어 높은 성능을 위해 추가로 돈을 지불할 수 있는 웹 서비스에선 추가 지불한 클라이언트들의 요청은 더 빨리 응답해줄 수 있는 웹 캐시로 전달해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;트랜스코더&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;트랜스코더는 본문의 포맷을 수정하는 프록시입니다. GIF 파일을 JPG 파일로 압축하거나, 일반 텍스트 파일을 더 압축할 수도 있고, 텍스트 파일을 특정 언어로 변환할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;익명화 프록시(Anonymizer)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP 메세지에서 클라이언트를 식별할 수 있는 특성들을 제거하고 전달해주는 프록시입니다. User-Agent헤더에서 사용자의 컴퓨터와 OS종류를 제거하고, IP주소, From헤더, Referer헤더, Cookie헤더 등을 제거해줍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;63-프록시는-어디에-있는가&quot;&gt;6.3. 프록시는 어디에 있는가&lt;/h3&gt;

&lt;p&gt;프록시가 어떤 역할을 하는지는 알았으니 이번엔 프록시가 구체적으로 어디에 있고, 언제 네트워크 아키텍처상에 배치되는지 알아보겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;631-프록시-서버-배치&quot;&gt;6.3.1. 프록시 서버 배치&lt;/h4&gt;

&lt;p&gt;프록시는 클라이언트-서버 사이면 어느 곳에든 배치 될 수 있는데 아래와 같은 방법들로 배치할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LAN과 WAN사이 : 출구(Egress) 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;로컬 네트워크(LAN, Local Area Network)가 WAN(Wide Area Network)에 들어가는 지점에 위치해 회사안의 보안을 강화할 수도 있고 어린이들이 유해 사이트에 노출되지 않게 할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ISP(Internet Service Provider)접근 지점 : 접근(입구) 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ISP란 KT, SK 텔레콤과 같이 인터넷을 제공해주는 업체를 말합니다. 주로 인터넷 속도 개선을 위해 사용하는 캐시 프록시를 예로 들 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;웹 서버 바로 앞 : 대리 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;대리 프록시는 웹 서버 바로 앞에 위치해 요청을 처리하고 서버에서 리소스를 가져와야 할 때만 서버까지 요청을 보냅니다. 주로 캐시 프록시를 예로 들 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;네트워크 교환 프록시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;네트워크들 사이에 위치해서 트래픽의 혼잡을 완하하고 감시하기도 합니다.&lt;/p&gt;

&lt;h4 id=&quot;632-프록시-계층&quot;&gt;6.3.2. 프록시 계층&lt;/h4&gt;

&lt;p&gt;프록시는 여러개를 거칠 수도 있습니다. 만약&lt;/p&gt;

&lt;p&gt;클라이언트 -&amp;gt; 프록시1 -&amp;gt; 프록시2 -&amp;gt; 프록시3 -&amp;gt; 서버&lt;/p&gt;

&lt;p&gt;관계가 있다면 프록시2는 프록시1의 인바운드 프록시이며 ‘부모’프록시라고 부릅니다. 반대로 프록시2는 프록시3의 아웃바운드 프록시이며 ‘자식’프록시라고 부릅니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;프락시 계층 콘텐츠 라우팅&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;프록시가 계층을 이루고 있을때 프록시A는 항상 프록시B로 요청을 보낼 수도 있고(프록시 계층이 정적이다) 조건에 따라 다른 프록시들로 라우팅 할 수도 있습니다.(프록시 계층이 동적이다.)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;부하 균형
 자식 프록시는 부하를 분산하기 위해 부모 프록시들의 작업량을 파악해 부하가 적게 걸리는 부모쪽으로 라우팅 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;지리적 인접성에 근거한 라우팅
 원 서버의 각 지역을 담당하는 부모쪽으로 라우팅할 수 있습니다. 2020년 3월 16일 기준으로 구글 클라우드 서비스는 전세계 21개 지역에 서버를 두고 있습니다. 서울도 있습니다.&lt;/li&gt;
  &lt;li&gt;프로토콜/타입 라우팅
 요청 URI에 근거해 라우팅을 할 수 있습니다. FTP프로토콜로 온 요청을 파일 서버로 라우팅 한다던가, 이미지 파일 요청이 왔을때 이미지 서버로 라우팅할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;유료 서비스 가입자를 위한 라우팅
 빠른 성능을 위해 추가금액을 낸 이용자를 위해 가까운 것에 캐시 프록시를 만들어 캐시 프록시에서 바로 리소스를 제공해줄 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;633-어떻게-프록시가-트래픽을-처리하는가&quot;&gt;6.3.3. 어떻게 프록시가 트래픽을 처리하는가&lt;/h4&gt;

&lt;p&gt;그런데 지금까지 학습한 바에 따르면 우리는 분명 원 서버로 URL 요청을 보낼텐데 어떻게 그 요청이 프록시로 가는 걸까요&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;클라이언트 수정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;웹 브라우저같은 웹 클라이언트들은 수동 혹은 자동 프록시 설정을 지원합니다. 클라이언트 어플리케이션에서 특정 프록시를 거치도록 설정 됐거나, 설정 하게되면 사용자의 요청은 프록시로 먼저 가게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;네트워크 수정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;네트워크를 관리하는 업체에선 트래픽을 가로채 프록시로 보낼 수 있습니다. 이 방법을 사용하면 클라이언트 입장에선 자신의 요청이 프록시를 거쳐온건지, 바로 서버로 갔다온건지 알 수 없습니다. 이를 하기 위해 스위칭 장치와 라우팅 장치가 필요합니다. 이런 프록시를 인터셉트 프록시라고 부릅니다.
 (투명 프록시(transparent proxy) 라고도 하지만 HTTP 명세에서 transparent는 ‘행위의 의미를 변경하지 않는다’라는 뜻으로 쓰이기 때문에 본 책에선 투명 프록시 대신 인터셉트 프록시라고 표현했습니다.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DNS 이름 공간을 수정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;사용자가 URL에 호스트명을 입력하면 DNS 서버가 이를 호스트의 IP로 변환해줍니다. 이 과정에서 호스트 명을 호스트의 원 서버 IP가 아닌 프록시의 IP로 변환되게 설정한다면 요청을 프록시로 보낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;웹 서버를 수정 - 리다이렉션&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;웹 서버에서 프록시로 리다이렉션 시킬 수도 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;64-클라이언트-프록시-설정&quot;&gt;6.4. 클라이언트 프록시 설정&lt;/h3&gt;

&lt;p&gt;앞서 웹 브라우저같은 클라이언트 어플리케이션을 수정해 요청을 프록시로 보낼 수 있다고 했습니다. 거의 모든 현대 브라우저에선 프록시를 사용할 수 있도록 여러가지 설정 방법을 제공하고 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;641-클라이언트-프록시-설정-수동&quot;&gt;6.4.1. 클라이언트 프록시 설정: 수동&lt;/h4&gt;

&lt;p&gt;사용자가 브라우저의 설정 탭에서 수동으로 프록시 설정을 할 수 있습니다. (크롬 프록시 설정 : https://www.itopening.com/2413/)&lt;/p&gt;

&lt;h4 id=&quot;642-클라이언트-프록시-설정-pac-파일&quot;&gt;6.4.2. 클라이언트 프록시 설정: PAC 파일&lt;/h4&gt;

&lt;p&gt;수동으로 프록시를 설정하는 방법은 쉽지만 한계가 있습니다. 하나의 프록시만 설정할 수 있고, 지정한 프록시가 장애를 일으킬때의 대안도 없으며, 기업같은 곳에선 프록시를 바꿀때마다 모든 사용자가 각자 프록시 설정을 바꿔야 합니다.&lt;/p&gt;

&lt;p&gt;PAC(Proxy Auto-Configuration)파일은 말 그대로 프록시를 자동으로 Configuration해주는 파일입니다. PAC파일은 FindProxyForUrl(url, host)라는 함수를 구현한 자바스크립트 파일입니다. PAC파일의 URI를 브라우저에 수동으로 설정해두면, 브라우저는 PAC 파일의 로직에 따라 동적으로 프록시를 찾습니다.&lt;/p&gt;

&lt;p&gt;기업같은 곳에서 PAC파일을 한 곳에서 관리하고 모든 사용자가 그 PAC파일의 URI만 안다면 언제든지 PAC 파일을 사용자와 관계 없이 업데이트 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;PAC 파일은 .pac확장자를 갖고 MIME 타입은 ‘application/x-ns-proxy-autoconfig’ 입니다. PAC파일에서 정의해야 하는 FindProxyForUrl 함수는 아래중 하나를 리턴해야 합니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;return 값&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;DIRECT&lt;/td&gt;
      &lt;td&gt;프록시 없이 직접 연결한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PROXY host:port&lt;/td&gt;
      &lt;td&gt;지정한 프록시를 사용한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SOCKS host:port&lt;/td&gt;
      &lt;td&gt;지정한 SOCKS 서버를 사용한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;아래는 프로토콜에 따라 프록시를 달리해주는 PAC 파일 사례입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindProxyURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PROXY http-proxy.mydomain.com:8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ftp:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PROXY ftp-proxy.mydomain.com:8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;DIRECT&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;643-클라이언트-프록시-설정-wpad&quot;&gt;6.4.3. 클라이언트 프록시 설정: WPAD&lt;/h4&gt;

&lt;p&gt;하지만 여기서 끝나지 않고 이 PAC파일의 설정 자체도 동적으로 할 수 있습니다. WPAD(Web Proxy Autodiscovery Protocol)는 프로토콜중 하나이며 자동으로 PAC 파일을 찾아줍니다. 대부분의 브라우저에서 지원해줍니다.&lt;/p&gt;

&lt;p&gt;자동으로 PAC 파일을 찾는 방법엔 몇가지 정형화된 기법이 있습니다. 브라우저는 몇 가지 PAC 파일 탐색 기법을 차례대로 성공할때 까지 수행합니다.&lt;/p&gt;

&lt;p&gt;WPAD명세에선 다음의 순서대로 기법들을 정의하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;동적 호스트 발견 규약(DHCP, Dynamic Host Configuration Protocol)&lt;/li&gt;
  &lt;li&gt;서비스 위치 규약(SLP, Service Location Protocol)&lt;/li&gt;
  &lt;li&gt;DNS 잘 알려진 호스트명&lt;/li&gt;
  &lt;li&gt;DNS SRV 레코드&lt;/li&gt;
  &lt;li&gt;DNS TXT 레코드 안의 서비스 URI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;20장에서 더 자세히 알아볼 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;65-프록시-요청의-미묘한-특징들&quot;&gt;6.5. 프록시 요청의 미묘한 특징들&lt;/h3&gt;

&lt;p&gt;프록시에게 하는 요청은 서버에 하는 요청과 약간 다른 특징을 갖습니다.&lt;/p&gt;

&lt;h4 id=&quot;651-프록시-uri는-서버-uri와-다르다&quot;&gt;6.5.1. 프록시 URI는 서버 URI와 다르다&lt;/h4&gt;

&lt;p&gt;클라이언트가 웹 서버로 바로 요청을 보낼땐 아래와 같이 부분 URI를 갖을 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GET /index.html HTTP/1.0
User-Agent : SuperBrowser v1.3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하지만 프록시로 요청을 보낼땐 다음과 같이 완전한 URI를 갖습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GET http://www.marys-antiques.com/index.html HTTP/1.0
User-Agent : SuperBrowser v1.3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;인터넷의 초창기 시절 클라이언트는 서버와 직접 대화했습니다. 가상 호스팅도, 프록시도 없었습니다. 이렇게 직접 대화하는 환경에서 서버는 자신의 호스트명, 포트번호를 알고 있기 때문에 클라이언트쪽에선 불필요한 정보 발송을 피하기 위해 스킴과 호스트를 생략한 부분 URI를 보냈습니다.&lt;/p&gt;

&lt;p&gt;하지만 프록시, 게이트웨이가 등장하며 부분 URI는 문제가 됐습니다. 프록시로 보내기 위해선 프록시 서버의 호스트명을 명시해야 했고, 게이트웨이에선 스킴을 읽어 어떤 프로토콜인지 식별해야 했기 때문입니다.&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해서 HTTP/1.0에선 프록시 요청의 경우 완전한 URI를 보내기로 하였습니다. HTTP/1.1 부턴 프록시, 서버 모두 완전한 URI를 요구하지만 아직 많은 레거시 클라이언트들이 부분 URI를 보냅니다.&lt;/p&gt;

&lt;h4 id=&quot;652-가상-호스팅에서-일어나는-같은-문제&quot;&gt;6.5.2. 가상 호스팅에서 일어나는 같은 문제&lt;/h4&gt;

&lt;p&gt;가상 호스팅은 물리적으론 같은 웹 서버를 공유하지만 여러 도메인을 호스팅하는 방식을 말합니다. 앞서 언급한 부분 URI는 가상 호스팅 환경에서도 문제가 됐습니다.&lt;/p&gt;

&lt;p&gt;프록시에선 완전한 URI를 요구하는 것으로 문제를 해결했지만 가상 호스팅에선 호스트와 포트 정보가 담겨있는 Host 헤더를 요구하는 것으로 해결했습니다.&lt;/p&gt;

&lt;h4 id=&quot;653-인터셉트-프록시는-부분-uri를-받는다&quot;&gt;6.5.3. 인터셉트 프록시는 부분 URI를 받는다.&lt;/h4&gt;

&lt;p&gt;6.5.1. 에서 프록시 요청은 완전한 URI를 요구한다고 했습니다. 하지만 클라이언트가 자신이 프록시와 대화하는지 모르면서 프록시와 대화할 수도 있습니다. 대리프록시, 인터셉트 프록시가 그 예입니다. 이때, 클라이언트는 자신이 원 서버와 대화한다고 생각하고 부분 URI를 보낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;대리 프록시는 앞서 설명했듯이 원 서버의 호스트명과 IP를 사용하기 때문에 문제될 것이 없고, 원 서버의 IP는 대리 프록시가 알고 있습니다.&lt;/p&gt;

&lt;p&gt;인터셉트 프록시는 네트워크 사이에서 서버로 가는 트래픽을 가로채기 때문에 부분 URI를 얻게 됩니다.(그래서 어떻게 되는지…)&lt;/p&gt;

&lt;h4 id=&quot;654-프록시는-프록시-요청과-서버-요청을-모두-다룰-수-있다&quot;&gt;6.5.4. 프록시는 프록시 요청과 서버 요청을 모두 다룰 수 있다.&lt;/h4&gt;

&lt;p&gt;다목적 프록시라면 완전한 URI와 부분 URI 모두를 다룰 수 있어야 합니다. 어떻게 다루는 지는 아래와 같은 프로세스를 따릅니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;완전한 URI가 주어졌다면 그것을 사용합니다.&lt;/li&gt;
  &lt;li&gt;부분 URI가 주어졌고 Host헤더가 있다면, Host 헤더를 이용해 원 서버의 이름과 포트번호를 알아냅니다.&lt;/li&gt;
  &lt;li&gt;부분 URI가 주어졌으나 Host 헤더가 없다면 다음과 같은 경우의 수가 있습니다.
    &lt;ol&gt;
      &lt;li&gt;프록시가 대리 프록시라면, 프록시에 원 서버 주소와 포트번호가 설정되어 있을 것입니다.&lt;/li&gt;
      &lt;li&gt;이전에 인터셉트 프록시가 가로챘던 트래픽을 받았고, 이전에 가로챈 인터셉터 프록시가 해당 트래픽에 원 IP주소와 포트번호를 설정해두었다면 그 IP와 포트번호를 사용합니다.&lt;/li&gt;
      &lt;li&gt;모두 실패했다면 에러 메세지를 반환합니다.(Host헤더를 지원하는 최신 브라우저로 업그레이드 하라는 에러 메세지)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;655-전송-중-uri-변경&quot;&gt;6.5.5. 전송 중 URI 변경&lt;/h4&gt;

&lt;p&gt;영향이 없을 것 같은 사소한 URI 변경도 문제를 일으킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;몇몇 프록시는 URI를 다음 홉으로 보내기 전에 포트번호를 기본 포트인 ‘:80’으로 설정한다던가, 잘못 사용된 예약어를 올바르게 교체하는 것 같은 표준 형식으로의 ‘정규화’를 진행합니다. 이런 변형도 상호운용성 문제를 일으킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;프록시는 최대한 관대하게 메세지를 받아 넘겨야 합니다.&lt;/p&gt;

&lt;p&gt;특히 HTTP명세에서 일반적인 인터셉트 프록시가 URI를 전달할때 절대 경로를 고쳐 쓰는 것을 금지합니다.(빈 경로를 ‘/’로 교체하는 건 허용합니다.)&lt;/p&gt;

&lt;h4 id=&quot;656-uri-클라이언트-자동확장과-호스트명-분석hostname-resolution&quot;&gt;6.5.6. URI 클라이언트 자동확장과 호스트명 분석(Hostname Resolution)&lt;/h4&gt;

&lt;p&gt;브라우저는 프록시의 존재 여부에 따라 요청 URI를 다르게 분석합니다. 프록시가 없다면 사용자가 입력한 URI에서 호스트명을 찾고 그에 대응하는 IP 주소들을 연결에 성공할 때까지 시도합니다.&lt;/p&gt;

&lt;p&gt;호스트가 발견되지 않는다면 브라우저는 사용자가 호스트명을 완전히 입력하지 않은 것으로 간주하고 2장에서 살펴봤던 URL 확장을 시도합니다.&lt;/p&gt;

&lt;h4 id=&quot;657-프록시-없는-uri-분석uri-resolution&quot;&gt;6.5.7. 프록시 없는 URI 분석(URI Resolution)&lt;/h4&gt;

&lt;p&gt;6.5.6.에서 명시적인 프록시가 없을 때의 과정을 사례를 들어 알아보겠습니다. 사용자가 URI에 ‘Oreilly’를 입력한 상황입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용자가 ‘Oreilly’를 입력합니다.&lt;/li&gt;
  &lt;li&gt;브라우저는 DNS로 호스트 ‘Oreilly’를 찾습니다. -&amp;gt; 실패&lt;/li&gt;
  &lt;li&gt;브라우저는 ‘Oreilly’를 확장합니다.
3.1. 앞에 ‘www’, 뒤에 ‘com’을 붙여 ‘www.oreilly.com’로 URI를 확장했습니다.
3.2. DNS로 ‘www.oreilly.com’을 찾습니다. -&amp;gt; 성공, IP주소 받음&lt;/li&gt;
  &lt;li&gt;브라우저는 알아낸 IP주소들에 대해 성공할 때까지 접속을 시도합니다. -&amp;gt; 성공했다면 커넥션을 맺습니다.&lt;/li&gt;
  &lt;li&gt;요청을 보내고 응답을 받습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;658-명시적인-프록시를-사용할-때의-uri-분석&quot;&gt;6.5.8. 명시적인 프록시를 사용할 때의 URI 분석&lt;/h4&gt;

&lt;p&gt;6.5.6. 에서 명시적인 프록시를 사용한다면 브라우저가 제공하는 URI 확장 없이 요청이 진행됩니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용자가 ‘Oreilly’를 입력합니다.&lt;/li&gt;
  &lt;li&gt;브라우저는 사용하기로 설정된 프록시의 호스트 명과 DNS를 이용해 프록시의 IP를 알아냅니다.&lt;/li&gt;
  &lt;li&gt;브라우저와 프록시가 커넥션을 맺습니다.&lt;/li&gt;
  &lt;li&gt;브라우저는 기본 스킴과 경로만 추가해 프록시로 ‘http://oreilly/’라는 요청을 보냅니다.&lt;/li&gt;
  &lt;li&gt;이후로는 프록시에 따라 달라집니다. URI 확장을 시도하는 프록시도 있지만 대부분 확장하지 않고 에러를 돌려줄 것입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;659-인터셉트-프록시를-이용한-uri-분석&quot;&gt;6.5.9. 인터셉트 프록시를 이용한 URI 분석&lt;/h4&gt;

&lt;p&gt;앞서 인터셉터 프록시는 클라이언트 입장에서 본인이 프록시와 대화하는지 모른다고 하였습니다. 그렇기 때문에 6.5.6.의 과정에서 인터셉트 프록시가 개입한다면 클라이언트는 URI 확장을 시도합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용자가 ‘Oreilly’를 입력합니다.&lt;/li&gt;
  &lt;li&gt;브라우저는 DNS로 호스트 ‘Oreilly’를 찾습니다. -&amp;gt; 실패&lt;/li&gt;
  &lt;li&gt;브라우저는 ‘Oreilly’를 확장합니다.
3.1. 앞에 ‘www’, 뒤에 ‘com’을 붙여 ‘www.oreilly.com’로 URI를 확장했습니다.
3.2. DNS로 ‘www.oreilly.com’을 찾습니다. -&amp;gt; 성공, IP주소 받음&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하지만 여기서 프록시가 없을 때와 인터셉트 프록시가 개입할때가 다른 과정을 보입니다. 프록시가 없을 땐 받아온 IP들중 연결에 성공할 때까지 접속을 시도합니다. 하지만 인터셉트 프록시가 개입하면 첫 번째 접속 시도로 끝납니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;브라우저가 첫 번째 접속을 시도하고 그 시도를 인터셉트 프록시가 가로챕니다. 브라우저는 첫 번째 접속 시도가 성공했다고 생각합니다.&lt;/li&gt;
  &lt;li&gt;인터셉트 프록시가 원 서버와 대화할 준비가 되었을때 프록시는 원 서버에 장애가 있다는 것을 알게 됩니다.&lt;/li&gt;
  &lt;li&gt;인터셉트 프록시는 Host헤더를 찾아 DNS를 이용해 접속 시도할 수 있는 IP를 다시 받아 오던지, Host헤더가 없다면 요청 받은 IP를 역방향 DNS 룩업을 시행해 호스트명을 알아낸뒤 다시 다른 IP들을 알아옵니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;66-메세지-추적&quot;&gt;6.6. 메세지 추적&lt;/h3&gt;

&lt;p&gt;오늘날에 웹 요청이 서버로 가기 까지 둘 이상의 프록시를 지나는건 매우 흔한 일입니다. 프록시가 흔해지며 프록시를 넘나드는 메세지의 흐름을 추적하고 문제점을 찾아내는 것이 중요해 졌습니다.&lt;/p&gt;

&lt;h4 id=&quot;661-via-헤더&quot;&gt;6.6.1. Via 헤더&lt;/h4&gt;

&lt;p&gt;Via헤더 필드는 메세지가 지나는 중간 노드(프록시 및 게이트웨이)의 정보를 나열해줍니다. 한 노드를 지날 때 마다 해당 노드에 대한 정보가 Via 목록의 끝에 추가되어야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Via : 1.1 proxy-62.irenes-isp.net, 1.0 cache.joes-hardware.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위의 Via헤더 예시는 해당 메세지가 두개의 프록시를 거쳤음을 말해줍니다. 첫번째 프록시는 HTTP/1.1을 구현하는 proxy-62.irenes-isp.net 이라는 프록시이고 두번째는 HTTP/1.0을 구현하는 cache.joes-hardware.com 이라는 프록시입니다.&lt;/p&gt;

&lt;p&gt;프록시는 또한 네트워크의 라우팅 루프(마지막 목적지를 찾지 못하고 계속 looping 하는 현상)를 탐지하기 위해 Via 헤더를 사용할 수 있습니다. 프록시에서 받은 요청을 다른 곳으로 보낼때 자신의 정보를 Via헤더에 추가해야 하는데 추가 하기 전에 Via 헤더를 탐색해 라우팅 루프가 발견되는지 검사할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 문법&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Via 헤더 필드는 쉼표로 구분된 경유지(Waypoint)의 목록입니다.
 각 경유지는 개별 프록시, 게이트웨이를 나타내며 프로토콜과 주소에 대한 정보를 담고 있습니다. 프로토콜 이름을 기입 할 수 있으며 기입 안한경우엔 HTTP로 간주합니다. 프로토콜 버전과 경유지 이름은 필수이며 선택적으로 코멘트를 추가할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 문법 - 프로토콜 이름&lt;/strong&gt;
 각 waypoint가 수신한 프로토콜입니다. HTTP라면 생략 가능하고 버전앞에 ‘/’로 구분되어 붙습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 문법 - 프로토콜 버전&lt;/strong&gt;
 수신한 메세지의 프로토콜 버전입니다. 필수적으로 기입되어야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 문법 - 노드 이름&lt;/strong&gt;
 중개자의 호스트와 포트번호입니다. 포트번호는 생략 가능하며 이 경우 사용하는 프로토콜의 기본 포트로 간주합니다. 가명으로 대체할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 문법 - 노드 코멘트&lt;/strong&gt;
 선택사항이며 자유롭게 기입할 수 있지만 주로 벤더나 버전 정보, 프록시에서 일어난 이벤트에 대한 진단 정보등을 넣습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via 요청과 응답 경로&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;요청, 응답 모두 Via 헤더를 갖습니다. TCP 커넥션의 경우 대부분 응답 메세지는 요청과 같은 경로로 되돌아갑니다. 요청시에 프록시 A, B, C를 지났다면 응답시엔 대부분 프록시 C, B, A를 지납니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via와 게이트웨이&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;현대의 프록시는 게이트웨이의 기능도 같이 제공할 수 있습니다. Via 헤더엔 이런 프로토콜 변환이 기록되기 때문에 클라이언트 쪽에서 해당 프록시에 프로토콜 변환 기능이 있는지 확인할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GET ftp://http-guide.com/pub/welcom.txt HTTP/1.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위와 같은 요청을 프록시로 보냈고 프록시가 FTP서버에 FTP 요청을 보내고 받아온 FTP응답을 HTTP로 변환해 클라이언트에게 돌려줍니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;HTTP/1.0 200 OK
Date : Sun, 11 Nov 2001 21:01:59 GMT
&lt;strong&gt;Via : FTP/1.0 proxy.irenes-isp.net (Traffic-Server/5.0.1-17882 [cMsf])&lt;/strong&gt;
Last-modified : Sun, 11 Nov 2001 21:05:24 GMT
Content-type : text/plain&lt;/p&gt;

  &lt;p&gt;Hi there~ This is FTP Server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Via헤더에 기록된 수신 프로토콜이 FTP라는 것에 주의합시다. 클라이언트가 처음 FTP요청을 보냈기에 수신한 프로토콜이 기재됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server 헤더와 Via헤더&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Server 헤더는 최종적인 목적지 서버가 사용하는 소프트웨어를 알려줍니다. 클라이언트가 요청한 원 서버를 위한 헤더입니다. 프록시에선 이 Server 헤더를 건드리면 안됩니다. 프록시가 무슨 소프트웨어를 사용하는지는 Via헤더의 코멘트에 기록하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via가 개인정보 보호와 보안에 미치는 영향&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;프록시가 방화벽의 일부인 경우엔 프록시 뒤에 있는 호스트의 이름과 포트를 전달해서는 안됩니다. 이때 프록시는 호스트 명을 적당한 가명으로 교체할 수 있습니다. 아래와 같이 말이죠.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Via: 1.0 foo, 1.1 devirus.company.com, 1.1 access-logger.company.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 Via 헤더를&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Via: 1.0 foo, 1.1 concealed-stuff&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위와 같이 여러개의 경유지를 하나로 합쳐 숨길 수 있습니다. 하지만 이렇게 합쳐 숨기기 위해선 경유지들이 모두 같은 조직의 통제하에 있고 호스트가 이미 가명으로 교체되었어야 합니다. 그리고 수신된 프로토콜이 다를땐 다른 프로토콜들을 합쳐선 안됩니다.&lt;/p&gt;

&lt;h4 id=&quot;662-trace-메서드&quot;&gt;6.6.2. TRACE 메서드&lt;/h4&gt;

&lt;p&gt;앞 장에서 TRACE 메서드의 역할을 알아본적이 있습니다. TRACE 요청이 목적지 서버에 도착했을 때(혹은 바로 알아볼 Max-Forward값이 0인 요청을 받은 서버), 서버는 요청 메세지를 응답 메세지 본문에 넣어 응답 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Max-Forward&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Max-Forward 헤더는 TRACE요청이나 OPTIONS 요청에서 프록시 홉의 갯수를 제한할 수 있습니다. 메세지가 프록시 들을 계속 무한 루프 도는지 테스트 할 때나, 프록시 연쇄 중간의 특정 프록시 서버들의 효과를 체크할 때 사용됩니다.&lt;/p&gt;

&lt;p&gt;Max-Forward헤더는 이 메세지가 앞으로 몇 개의 홉을 더 거칠수 있는지를 말해주는 값을 가지고 있습니다. Max-Forward값이 0이라면 수신 프록시는 자신이 목적지 서버가 아니더라도 인바운드 방향으로 전달하지 말고 클라이언트 쪽으로 응답을 보내야 합니다.&lt;/p&gt;

&lt;p&gt;받은 Max-Forward값이 0이 아니면 다음 홉으로 전달시 Max-Forward 값을 1 줄여 보내야 합니다.&lt;/p&gt;

&lt;p&gt;그리고 이런 Max-Forward가 작동하기 위해선 모든 프록시나 게이트웨이가 이 Max-Forward를 지원해야 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;67-프록시-인증&quot;&gt;6.7. 프록시 인증&lt;/h3&gt;

&lt;p&gt;프록시는 접근 제어 장치로 사용될 수 있습니다. 사용자가 유효한 접근 권한 자격을 프록시에 제출하지 않으면 프록시에서 요청을 차단할 수 있는데 이를 ‘프록시 인증’ 메커니즘 이라고 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;제한된 콘텐츠에 대한 요청이 프록시에 도착.&lt;/li&gt;
  &lt;li&gt;프록시는 접근 자격을 요구하는 407 Proxy Authorization Required 상태코드와 자격 제출 방식을 설명해주는 Proxy-Authenticate 헤더 필드를 클라이언트에게 보냅니다.&lt;/li&gt;
  &lt;li&gt;407 응답을 받은 클라리언트는 로컬 DB를 찾던지, 사용자에게 물어보던지 여러 방식으로 요구 자격을 수집합니다.&lt;/li&gt;
  &lt;li&gt;자격을 얻었다면 자격을 Proxy-Authenticate 헤더에 담아 다시 요청을 보냅니다.&lt;/li&gt;
  &lt;li&gt;자격이 유효하다면 프록시는 다음 홉으로 메세지를 전달하고 유효하지 않다면 407응답을 보냅니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;프록시 인증은 인증에 참여하는 프록시가 프록시 연쇄상에 여러개 있을 경우 잘 작동하지 않습니다.(Proxy-Authenticate에 있는 값이 여러 프록시 인증 중 어디에 쓰여야 될지 모르므로.) 이를 해결하기 위해 프록시 연쇄의 특정 경유지와 인증 자격을 짝지어주는 HTTP 기능 확장이 제안 됐지만 많이 구현되진 않았습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;68-프록시-상호운용성&quot;&gt;6.8. 프록시 상호운용성&lt;/h3&gt;

&lt;p&gt;클라이언트, 서버, 프록시들은 각기 다른 프로토콜, 프로토콜 버전, 벤더 등을 가지고 있습니다. 따라서 이런 많은 기기들간의 상호운용성 문제는 항상 중요합니다.&lt;/p&gt;

&lt;h4 id=&quot;681-지원하지-않는-헤더와-메서드-다루기&quot;&gt;6.8.1. 지원하지 않는 헤더와 메서드 다루기&lt;/h4&gt;

&lt;p&gt;기본적으로 프록시가 자신이 이해할 수 없는 메서드와 헤더를 만난다면 관대하게 그대로 보존해 전달해야 합니다. HTTP 명세에선 메서드와 헤더의 확장을 허용하기 때문에 항상 자신이 이해하지 못하는 메서드와 헤더를 염두에 두어야 합니다.&lt;/p&gt;

&lt;p&gt;같은 이름의 헤더필드가 여러개 온다면 이 헤더필드의 상대적인 순서 역시 그대로 보존해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;682-options-어떤-기능을-지원하는지-알아보기&quot;&gt;6.8.2. OPTIONS: 어떤 기능을 지원하는지 알아보기&lt;/h4&gt;

&lt;p&gt;앞 장에서 OPTIONS는 서버에게 특정 리소스에 대해 어떤 메서드를 지원하는지 묻는 메서드라고 했습니다.&lt;/p&gt;

&lt;p&gt;OPTIONS 요청을 받은 서버는 특정 리소스에 대해 가능한 기능을 서술하는 여러 헤더를 추가할 수 있지만 HTTP/1.1 명세에서 정의한 헤더는 Allow 헤더 뿐입니다.&lt;/p&gt;

&lt;h4 id=&quot;683-allow-헤더&quot;&gt;6.8.3. Allow 헤더&lt;/h4&gt;

&lt;p&gt;기본적으로 Allow 헤더는 OPTIONS 요청에 대해 응답하기 위한 헤더입니다. 식별되는 자원에 대해 OPTIONS 요청을 하면 서버는 그 리소스에 지원되는 메서드나 서버가 지원하는 모든 메서드(요청 URI가 *인 경우)를 열거합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Allow : GET, HEAD, PUT&lt;/p&gt;

  &lt;p&gt;-&amp;gt; 요청 리소스에 대해 GET, HEAD, PUT 요청이 가능하다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그런데 Allow 헤더가 요청에도 사용될 수 있습니다. 이때 Allow 헤더는 새 리소스가 지원했으면 하는 메서드를 추천하기 위해 사용되지만 서버가 이를 지원할 의무는 없습니다.&lt;/p&gt;

&lt;p&gt;프록시가 Allow에 있는 메서드를 이해할 수 없다고 해서 Allow 헤더를 수정하면 안됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;
</content>
 </entry>
 
 <entry>
   <title>웹 서버</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C5/"/>
   <updated>2020-03-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드5</id>
   <content type="html">&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;51-다채로운-웹-서버&quot;&gt;5.1. 다채로운 웹 서버&lt;/h3&gt;

&lt;p&gt;이번 장에선 웹 서버에 관해 간단하게 알아볼 것입니다.&lt;/p&gt;

&lt;p&gt;웹 서버는 기능, 형태, 크기가 정말 다양합니다. 열 줄 짜리 스크립트가 될 수도 있고 50mb짜리 상용 엔진도 있으며, 전자기기 작은 기판에 설치된 서버도 있습니다. 이런 다양한 웹 서버들이 있지만 공통적으로 클라이언트의 HTTP 요청을 받고 처리해 리소스를 돌려주는 일을 합니다.&lt;/p&gt;

&lt;h4 id=&quot;511-웹-서버-구현&quot;&gt;5.1.1. 웹 서버 구현&lt;/h4&gt;

&lt;p&gt;웹 서버는 HTTP 프로토콜을 구현해 클라이언트와 통신하며, 웹 리소스를 관리하고 서버 스스로를 관리합니다. 운영체제와 함께 TCP 커넥션 관리에 참여하기도 합니다.&lt;/p&gt;

&lt;p&gt;운영체제는 웹 서버가 올라가있는 하드웨어를 관리하고, TCP/IP 네트워크를 지원해주며, 웹 리소스를 관리하기 위한 파일 시스템, 연산활동을 위한 프로세스 관리를 제공합니다.&lt;/p&gt;

&lt;h4 id=&quot;512-다목적-소프트웨어-웹-서버&quot;&gt;5.1.2. 다목적 소프트웨어 웹 서버&lt;/h4&gt;

&lt;p&gt;세상엔 수 만개의 웹 서버들이 존재합니다. 하지만 그중 주로 사용되는건 몇 가지에 꼽힙니다. 아래 netcraft에서 조사한 웹 서버 시장 점유율을 보시죠.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;p&gt;출처 : https://news.netcraft.com/archives/2019/09/27/september-2019-web-server-survey.html&lt;/p&gt;

&lt;p&gt;2019년 8월 까지의 데이터가 담겼는데 아파치 웹 서버의 장기집권이 끝나고 웹 서버의 춘추전국시대가 벌어지는 중인것 같습니다. 하지만 수 만개의 웹 서버중 nginx(32.7%), Apache(29.0%), Microsoft(14.7%)가 전체중 75%가량 차지합니다.&lt;/p&gt;

&lt;h4 id=&quot;513-임베디드-웹-서버&quot;&gt;5.1.3. 임베디드 웹 서버&lt;/h4&gt;

&lt;p&gt;임베디드 웹 서버는 전자기기에 내장될 목적으로 만들어진 작원 웹 서버입니다. 공유기를 구입하고 비밀번호 등을 설정하기 위해 공유기 관리자 페이지에 들어가게 되는데 이때 들어가는 웹 페이지는 공유기의 임베디드 웹 서버에서 운영중인 페이지입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;52-간단한-펄-웹-서버&quot;&gt;5.2. 간단한 펄 웹 서버&lt;/h3&gt;

&lt;p&gt;가장 많이 알려진 아파치 웹 서버의 코어는 50,000줄이 넘는 코드로 이루어져 있습니다. HTTP/1.1의 기능들을 모두 지원하려면 방대한 양의 코드들이 들어갈 수 밖에 없습니다. 하지만 정말 최소한의 기능만 갖는 웹 서버는 30줄로도 가능합니다. 아래 코드가 Perl 언어로 작성한 30줄 짜리 웹 서버 코드입니다.&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Carp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;FileHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# (1) 명령줄에서 덮어쓰지 않는 이상 8080 포트를 기본으로 사용한다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@ARGV&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;# (2) 로컬 TCP소켓을 생성하고 커넥션을 기다리도록(listen) 설정한다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getprotobyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;('&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;tcp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;');&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$proto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;setsockopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SOL_SOCKET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sockaddr_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;INADDR_ANY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SOMAXCONN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# (3) 시작 메세지를 출력한다.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;lt;&amp;lt;&amp;lt;Type-O-Serve Accepting on Port %d&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# (4) 커넥션 C를 기다린다.&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$cport_caddr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$caddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sockaddr_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cport_caddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;autoflush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# (5) 누구로부터의 커넥션인지 출력한다.&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$cname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;gethostbyaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$caddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;lt;&amp;lt;&amp;lt;Request From '%s'&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# (6) 빈 줄이 나올 때까지 요청 메세지를 읽어서 화면에 출력한다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;screen&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^\r/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;# (7) 응답 메세지를 위한 프롬프트를 만들고, 응답줄을 입력 받는다.&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# &quot;.&quot; 하나만으로 되어 있는 줄이 입력되기 전까지, 입력된 줄을 클라이언트에게 보낸다.&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;lt;&amp;lt;&amp;lt;Type Response Followed by '.'&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;s/\r//&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;s/\n//&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^\./&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 펄 서버는 ‘type-o-serve’라고 이름 붙인 펄 프로그램 입니다. HTTP 요청이 오면 콘솔창에 받은 요청이 출력되고, 콘솔에 타이핑한 텍스트가 HTTP 응답으로 전송되는 간단한 서버입니다. 코드가 간단하고 책에서 단계별로 주석도 잘 적어주셨기 때문에 쉽게 이해할 수 있을 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;53-진짜-웹-서버가-하는-일&quot;&gt;5.3. 진짜 웹 서버가 하는 일&lt;/h3&gt;

&lt;p&gt;상용 웹 서버는 위의 펄 서버와 비교할 수 없을 만큼 다양한 일을 합니다. 하지만 모든 웹 서버가 하는 일은 아래와 같은 과정을 따른다고 할 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;커넥션을 맺는다 : 클라이언트의 접속을 받아들이거나, 원치 않는 클라이언트라면 닫는다.&lt;/li&gt;
  &lt;li&gt;요청을 받는다 : HTTP 요청 메세지를 네트워크로부터 읽어 들인다.&lt;/li&gt;
  &lt;li&gt;요청을 처리한다 : 요청 메세지를 해석하고 행동을 취한다.&lt;/li&gt;
  &lt;li&gt;리소스에 접근한다 : 메세지에서 지정한 리소스에 접근한다.&lt;/li&gt;
  &lt;li&gt;응답을 만든다 : 올바른 헤더를 포함한 HTTP 응답 메세지를 생성한다.&lt;/li&gt;
  &lt;li&gt;응답을 보낸다 : 응답을 클라이언트에게 돌려준다.&lt;/li&gt;
  &lt;li&gt;트랜잭션을 로그로 남긴다 : 로그 파일에 트랜잭션 완료에 대한 기록을 남긴다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;뒤로는 각 단계들에 대해 살펴보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;54-단계1--클라이언트-커넥션-수락&quot;&gt;5.4. 단계1 : 클라이언트 커넥션 수락&lt;/h3&gt;

&lt;p&gt;한 클라이언트에 대해 이미 커넥션이 열려있다면 그 커넥션을 계속 사용할 수 있지만, 새로운 클라이언트가 연결을 요청한다면 새 커넥션을 열 필요가 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;541-새-커넥션-다루기&quot;&gt;5.4.1. 새 커넥션 다루기&lt;/h4&gt;

&lt;p&gt;클라이언트가 TCP 커넥션 요청을 보내오면 서버는 커넥션을 수락하고 커넥션에서 IP를 추출해 상대방이 어떤 클라이언트인지 확인합니다.(이런 TCP 커넥션들을 소켓이라고 부릅니다.) 새 커넥션이 생성되고 받아들여지면 서버는 새 커넥션을 커넥션 목록에 추가하고 데이터를 받을 준비를 합니다.&lt;/p&gt;

&lt;p&gt;웹 서버는 어떤 커넥션이든 마음대로 거절하거나 닫을 수 있습니다. 금지할 IP 주소나 호스트명을 미리 정해두면 여기서 오는 모든 커넥션을 거절할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;542-클라이언트-호스트-명-식별&quot;&gt;5.4.2. 클라이언트 호스트 명 식별&lt;/h4&gt;

&lt;p&gt;서버가 특정 호스트명의 접근을 막거나 로그를 남길때 어디서 온 로그인지 보기쉽게 남겨야할 필요가 있습니다. 이때 서버는 reverse DNS 를 이용해 클라이언트의 IP를 호스트명으로 변환할 수 있습니다. 이 작업을 Hostname Lookup 이라고 합니다.&lt;/p&gt;

&lt;p&gt;하지만 이 작업은 시간이 꽤 걸리는 작업이라 트랜잭션을 지연시킬 수 있습니다. 따라서 이 작업은 서버에 따라 꺼두기도 하고 특정 리소스에 대해서만 켜기도 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Apache&quot;&gt;HostnameLookups off
&amp;lt;File ~ &quot;\.(html|htm|cgi)$&quot;&amp;gt;
	HostnameLookups on
&amp;lt;/File&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위 코드는 아파치에서 html, htm, cgi 리소스들만 Hostname Lookup을 실시하고 나머지는 하지 않는다는 설정 코드입니다.&lt;/p&gt;

&lt;h4 id=&quot;543-ident를-통해-클라이언트-사용자-알아내기&quot;&gt;5.4.3. ident를 통해 클라이언트 사용자 알아내기&lt;/h4&gt;

&lt;p&gt;클라이언트를 식별하는 방법엔 ident 프로토콜을 사용하는 방법도 있습니다. 간단히 설명하자면 클라이언트 식별을 위한 전용 커넥션을 생성하고 요청, 응답해 클라이언트를 식별하는 방법입니다. 과정은 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트가 HTTP 커넥션을 요청합니다.&lt;/li&gt;
  &lt;li&gt;서버는 클라이언트의 커넥션 요청을 받아들입니다.&lt;/li&gt;
  &lt;li&gt;서버는 클라이언트의 ident 서버 포트(113번으로 정해져있으며 처음 클라이언트가 요청할때 사용한 포트와 다른 포트입니다.)로 커넥션을 요청합니다.&lt;/li&gt;
  &lt;li&gt;클라이언트가 커넥션을 받아들이면 서버가 사용자를 식별할 요청을 보냅니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;사내 망에선 종종 사용되지만 공공 인터넷에선 다음과 같은 이유로 사용이 되지 않습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트가 ident 프로토콜을 지원해야 합니다.&lt;/li&gt;
  &lt;li&gt;HTTP 트랜잭션을 지연시킵니다.&lt;/li&gt;
  &lt;li&gt;방화벽에서 서버의 ident 커넥션 요청이 막힐 수도 있습니다.&lt;/li&gt;
  &lt;li&gt;ident 프로토콜은 가상 IP 주소를 잘 지원하지 않습니다.&lt;/li&gt;
  &lt;li&gt;프라이버시 침해의 우려도 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;55-단계2--요청-메세지-수신&quot;&gt;5.5. 단계2 : 요청 메세지 수신&lt;/h3&gt;

&lt;p&gt;커넥션을 맺은 뒤에 서버는 데이터가 오길 기다립니다. 커넥션에 데이터가 들어오면 앞 장에서 살펴본 HTTP 메세지의 구성을 고려해 데이터를 HTTP 메세지로 파싱합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;요청 메서드, URI, 버전번호를 파싱합니다. 각 값은 공백으로 분리되어 있고 요청줄의 끝은 CRLF로 끝납니다.&lt;/li&gt;
  &lt;li&gt;헤더들을 파싱합니다. 각 헤더는 CRLF로 끝납니다.&lt;/li&gt;
  &lt;li&gt;헤더의 끝을 의미하는 CRLF 끝나는 빈줄을 찾아 헤더 파싱을 끝냅니다.&lt;/li&gt;
  &lt;li&gt;이후 엔터티 본문이 있다면 읽어 들입니다.(이때, 헤더에 Content-Length가 있다면 그만큼 읽어냅니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IP패킷들은 순서와 상관없이 불규칙하게 전달됩니다. 따라서 웹 서버는 파싱 가능할때까지 IP패킷의 데이터들을 메모리에 임시 저장해 놓을 수 있어야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;551-메세지의-내부-표현&quot;&gt;5.5.1. 메세지의 내부 표현&lt;/h4&gt;

&lt;p&gt;웹 서버에 따라 요청 메세지를 다루기 쉽게 따로 자료 구조를 만들어 저장합니다.&lt;/p&gt;

&lt;h4 id=&quot;552-커넥션-입력출력-처리-아키텍처&quot;&gt;5.5.2. 커넥션 입력/출력 처리 아키텍처&lt;/h4&gt;

&lt;p&gt;포털 사이트 같이 사용자가 많은 웹 서버들은 그 많은 사용자와 하나 이상의 커넥션을 맺고 있습니다. 어떤 사용자는 10초에 한 번씩 요청을 보내고 어떤 사용자는 1초에 한 번씩 보냅니다. 그리고 어떤 사용자는 웹 크롤러를 사용해 1초에 10번씩 요청을 보냅니다.&lt;/p&gt;

&lt;p&gt;이렇게 많은 사용자들의 커넥션들을 효율적으로 처리하기 위해 커넥션 입/출력 처리 기술도 발전해 왔습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;단일 스레드 웹 서버&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;처음은 단일 스레드 웹 서버였을 것입니다. 한 번에 하나의 커넥션만 처리하는 단일 스레드 웹 서버는 당연히 성능이 형편 없어 테스트 및 교육용이나 임베디드 서버 같은 극히 일부의 서버에서만 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;멀티프로세스와 멀티스레드 웹 서버&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;여러 요청을 동시에 처리하기 위해 멀티프로세스/스레드 서버가 사용됩니다. 프로세스/스레드는 필요할때마다 생성할 수도 있고 미리 만들어 놓고 기다릴 수도 있습니다.&lt;/p&gt;

&lt;p&gt;각각 커넥션 마다 프로세스/스레드를 할당 할 수 있지만 이렇게 된다면 너무 많은 메모리를 낭비하게 될 것입니다. 멀티프로세스/스레드를 사용하는 웹 서버들은 프로세스/스레드 수에 제한을 걸어 놓습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다중 I/O 서버&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;방금 설명한 멀티프로세스/스레드 서버는 단일 스레드보단 좋지만 한계가 있습니다. 하나의 커넥션이 생성되었지만 실제로 그 커넥션에 들어오는 요청이 없더라도 프로세스/스레드는 그 커넥션을 보면서 데이터가 오길 기다려야하기 때문입니다. 이를 해결하기 위한 방법이 입출력 다중화(multiplexing)입니다.&lt;/p&gt;

&lt;p&gt;하나의 커넥션은 ‘입력 -&amp;gt; 처리 -&amp;gt; 출력’ 으로 동작한다고 볼 수 있습니다. 그런데 처리중엔 입력, 출력에서 쓰이는 함수가 봉쇄(block) 됩니다. #@$#@$@#$ 추가 설명 필요&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다중 멀티스레드 웹 서버&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;56-단계3--요청-처리&quot;&gt;5.6. 단계3 : 요청 처리&lt;/h3&gt;

&lt;p&gt;요청을 처리하는 과정은 뒷 장들에서 나올 주제중 대부분이기 때문에 이번 장에선 생략하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;57-단계4--리소스의-매핑과-접근&quot;&gt;5.7. 단계4 : 리소스의 매핑과 접근&lt;/h3&gt;

&lt;p&gt;웹 서버는 리소스를 주고 받게 해주는 서버입니다. 이 리소스에는 이미지 파일, html 페이지 같은 고정된 리소스도 있지만 php, jsp, asp와 같이 리소스 생성 어플리케이션을 통해 만들어지는 동적인 리소스도 있습니다.&lt;/p&gt;

&lt;p&gt;웹 서버가 리소스를 알맞게 제공하기 위해선 클라이언트의 요청 URI에서 그에 맞는 리소스나 리소스 생성기를 찾아야 합니다. 이런 과정을 리소스 맵핑이라고 합니다.&lt;/p&gt;

&lt;h4 id=&quot;571-docroot&quot;&gt;5.7.1. Docroot&lt;/h4&gt;

&lt;p&gt;리소스 맵핑의 가장 단순한 형태는 URI로 파일 자체를 가리키는 것입니다. 그런데 그 파일들은 어느 디렉토리에 위치해 있을까요?&lt;/p&gt;

&lt;p&gt;스프링 프레임워크를 사용해 보았다면 클라이언트는 ‘WebContent’ 폴더 안에 있는 것들만 접근 할 수 있다라는 얘기를 많이 들어보셨을 것입니다. 이렇게 일반적으로 웹 서버 파일 시스템의 특별한 폴더를 웹 리소스를 올려두기 위해 예약해둡니다. 이 폴더를 문서 루트, docroot 라고 부릅니다.&lt;/p&gt;

&lt;p&gt;웹 서버는 URI에서 호스트명 뒤의 리소스 경로를 가져와 docroot 뒤에 붙입니다. 아래와 같은 요청이 왔다고 하면&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;요청 URI : http://www.joes-hardware.com/specials/saw-blade.gif
리소스 경로 : /specials/saw-blade.gif&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;웹 서버의 docroot에 따라 docroot/specials/saw-blade.gif 리소스를 찾아 갑니다.&lt;/p&gt;

&lt;p&gt;이 docroot는 사용하는 웹 서버에서 기본적으로 설정해 두기도 하고 따로 설정 파일을 통해 docroot를 지정할 수도 있습니다. 많이 사용하는 아파치 웹 서버의 경우 httpd.conf 파일에 아래와 같은 줄을 추가해 설정할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DocumentRoot /usr/local/httpd/files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;웹 서버는 상대 URL이 docroot를 벗어나 파일 시스템의 다른 부분을 가리킬 수 없게 조심해야 합니다. 예를들어 다음과 같이 docroot의 상위 디렉토리를 찾는 요청이 왔다고 해서 실제 docroot의 상위 디렉토리를 찾아가면 안됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://www.joes-hardware.com/../&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;가상 호스팅된 docroot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;가상 호스팅은 하나의 물리적 웹 서버에 여러 도메인을 호스팅 하는 것입니다. 가상 호스팅 환경에선 호스팅된 각각의 서버마다 분리된 docroot를 설정해줍니다. 설정은 매우 간단합니다. 많이 사용되는 아파치의 경우 아래와 같이 설정 됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;VirtualHost www.joes-hardware.com&amp;gt;
	ServerName www.joes-hardware.com
	DocumentRoot /docs/joe
	TransferLog /logs/joe.access_log
	ErrorLog /logs/joe.error_log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost www.marys-antiques.com&amp;gt;
	ServerName www.marys-antiques.com
	DocumentRoot /docs/mary
	TransferLog /logs/mary.access_log
	ErrorLog /logs/mary.error_log
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가상 호스팅에 대해선 18장에서 더 자세히 이어집니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;사용자 홈 디렉터리 docroots&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;docroots를 활용하면 사용자들이 한 대의 웹 서버에서 각자 자신의 웹 사이트를 만들 수 있습니다. ‘/~’ 뒤에 이름이 오는 것으로 시작하는 URI들이 그 예입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;요청 메세지A : GET /~bob/index.html HTTP/1.0
-&amp;gt; 가리키는 리소스 : /home/bob/public_html&lt;/p&gt;

  &lt;p&gt;요청 메세지B : GET /~betty/index.html HTTP/1.0
-&amp;gt; 가리키는 리소스 : home/betty/public_html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;572-디렉터리-목록&quot;&gt;5.7.2. 디렉터리 목록&lt;/h4&gt;

&lt;p&gt;URL은 리소스 파일을 가리키는게 아니라 디렉터리 자체를 가리킬 수도 있습니다. 이를 디렉터리 URL 이라고 합니다. 대부분 웹 서버는 디렉터리 URL 요청을 받았을때 다음과 같은 행동을 취합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;에러를 반환&lt;/li&gt;
  &lt;li&gt;디렉터리 대신 특별한 ‘색인 파일’을 반환&lt;/li&gt;
  &lt;li&gt;디렉터리를 탐색한 뒤 그 내용을 담은 HTML 페이지를 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;대부분의 웹 서버는 디렉터리 URL을 받으면 해당 디렉터리 안의 ‘index.html’  혹은 ‘index.htm’ 파일을 찾습니다. 그리고 그 파일이 존재한다면 반환합니다.&lt;/p&gt;

&lt;p&gt;아파치 웹 서버에선 이렇게 디렉터리 URL이 왔을때 기본적으로 찾을 파일의 이름 집합을 설정할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DirectoryIndex index.html index.htm home.html home.htm index.cgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 설정하면 나열된 순서대로 파일을 찾아보고 나온다면 그 파일을 반환합니다.&lt;/p&gt;

&lt;p&gt;그런데 만약 기본 색인 파일을 찾을 수 없다면 어떻게 할까요? 많은 웹 서버는 요청받은 디렉터리 안의 파일들의 크기, 변경일, 파일에 대한 링크 등을 열거한 HTML 파일을 반환합니다. 하지만 이 방식은 클라이언트에게 숨겨야 할 파일도 노출할 수 있으니 조심해야 합니다.&lt;/p&gt;

&lt;p&gt;아파치 웹 서버에선 다음과 같은 설정으로 디렉터리 색인 파일 자동 생성을 끌 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Options -Indexes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;573-동적-콘텐츠-리소스-매핑&quot;&gt;5.7.3. 동적 콘텐츠 리소스 매핑&lt;/h4&gt;

&lt;p&gt;웹 서버는 URI를 동적 리소스에 맵핑할 수도 있습니다. 웹 서버중 웹 어플리케이션 서버(WAS, Web Application Server)라고 불리는 것들은 웹 서버와 백엔드 어플리케이션을 연결해줍니다.&lt;/p&gt;

&lt;p&gt;국내에서 많이 사용되는 기술 스택인 ‘아파치 - 톰캣 - 자바 서블릿’이 이런 동적 콘텐츠 맵핑의 하나라고 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;아파치에서 URI에 따라 프로그램의 경로를 맵핑 시킬 수 있습니다. 다음 아파치 설정을 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ScriptAlias /cgi-bin/ /usr/local/etc/httpd/cgi-programs/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 설정은 URI 경로가 ‘/cgi-bin/’ 으로 시작한다면, ‘/usr/local/etc/httpd/cgi-programs/’ 에서 프로그램을 찾아 실행하라는 의미 입니다. 여기에 덧붙여&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AddHandler cgi-script .cgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 설정을 추가해 특정 확장자의 파일만 실행 되도록 설정할 수 있습니다. 위 설정은 ‘.cgi’ 로 끝나는 모든 웹 리소스는 실행되어야 함을 명시하는 것입니다.&lt;/p&gt;

&lt;p&gt;CGI는 서버사이드 어플리케이션을 실행하기 위한 간단한 인터페이스인데 웹의 초창기에 많이 사용되었습니다. CGI 자체는 Common Gateway Interface로 웹 서버와 웹 어플리케이션 서버간 데이터를 주고받는데 도움을 주는 인터페이스입니다. 이 CGI를 따라 작성된 프로그램을 CGI 프로그램이라고 합니다.&lt;/p&gt;

&lt;p&gt;오늘날엔 asp, jsp 같은 애플리케이션 서버가 cgi를 대체하고 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;574-서버사이드-인클루드server-side-includes-ssi&quot;&gt;5.7.4. 서버사이드 인클루드(Server-Side Includes, SSI)&lt;/h4&gt;

&lt;p&gt;서버사이드 인클루드는 서버가 생성하거나 가지고 있는 HTML 파일을 클라이언트에게 보내기 직전에 html 안에 있던 변수 값들을 치환하는 것을 말합니다.&lt;/p&gt;

&lt;p&gt;SSI를 가지고 있는 html파일은 대부분 ‘.shtml’ 이라는 확장자가 붙습니다.&lt;/p&gt;

&lt;p&gt;자바 스택을 이용해 웹 페이지를 만들어 보았다면 jsp 페이지에&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;% include file=&quot;/css/bootstrap.css&quot; %&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런 &amp;lt;% ~~ %&amp;gt; 태그를 본적이 있을 것입니다. 이런 태그들이 클라이언트에게 보내지기 직전에 치환되는 변수들이며 이런 과정을 SSI라고 합니다.&lt;/p&gt;

&lt;p&gt;많은 웹 서버가 이 SSI를 지원합니다. 동적 컨텐츠를 만들 수 있는 쉬운 방법중 하나입니다.&lt;/p&gt;

&lt;h4 id=&quot;575-접근-제어&quot;&gt;5.7.5. 접근 제어&lt;/h4&gt;

&lt;p&gt;웹 서버는 각 리소스에 접근 제어를 설정할 수도 있습니다. 접근이 제어된 리소스에 요청이 올 경우 웹 서버는 클라이언트의 IP에 근거해 접근을 제어하던가, 리소스에 접근하기 위한 비밀번호를 물어보던가 등을 할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;58-단계5--응답-만들기&quot;&gt;5.8. 단계5 : 응답 만들기&lt;/h3&gt;

&lt;p&gt;요청을 받았다면 응답을 해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;581-응답-엔터티&quot;&gt;5.8.1. 응답 엔터티&lt;/h4&gt;

&lt;p&gt;응답 메세지에 엔터티 본문이 있다면, 응답 메세지엔 다음과 같은 것들이 포함되어야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;응답 본문의 MIME 타입을 서술하는 Content-Type 헤더&lt;/li&gt;
  &lt;li&gt;응답 본문의 길이를 서술하는 Content-Length 헤더&lt;/li&gt;
  &lt;li&gt;실제 응답 본문&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;582-mime-타입-결정하기&quot;&gt;5.8.2. MIME 타입 결정하기&lt;/h4&gt;

&lt;p&gt;웹 서버는 응답 본문의 MIME 타입을 결정해야 하는 책임이 있습니다. MIME 타입을 결정하는 방법엔 다음과 같은 것들이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mime.types&lt;/strong&gt;
 파일 이름의 확장자를 사용하는 방법입니다. 확장자를 그대로 사용하는 것은 아니고, 웹 서버별로 확장자별 MIME 타입이 담겨 있는 파일을 탐색해 확장자에 맞는 MIME 타입을 맵핑해 줍니다. 가장 흔히 쓰이는 방법입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;매직 타이핑(Magic Typing)&lt;/strong&gt;
 한편, 확장자가 없는 파일이 있을 수도 있습니다. 아파치 웹 서버에선 파일의 내용을 검사해 특정 패턴을 추출할 수 있습니다. 이 패턴을 매직 파일(패턴과 MIME 타입을 맵핑해주는 테이블)에 맵핑해 MIME 타입을 찾아냅니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;유형 명시(Explicit typing)&lt;/strong&gt;
 특정 파일 혹은 특정 디렉토리 안의 파일들을 파일 확장자나 내용에 상관 없이 어떤 MIME 타입을 갖도록 명시할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;유형 협상(Type negotiation)&lt;/strong&gt;
 한 리소스가 여러 MIME 타입에 맵핑 될 수도 있습니다. 이때 웹 서버가 협상 과정을 통해 사용하기 가장 좋은 MIME 타입을 판별해 설정할 수도 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;583-리다이렉션&quot;&gt;5.8.3. 리다이렉션&lt;/h4&gt;

&lt;p&gt;웹 서버는 성공 대신 리다이렉션을 응답하기도 합니다. 리다이렉션이 사용되는 경우는 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;영구히 리소스가 옮겨진 경우&lt;/strong&gt;
 리소스의 위치가 옮겨지거나 이름이 바뀌었을 수 있습니다. 이때 웹 서버는 클라이언트에게 리소스의 URL이 바뀌었으니 북마크를 새로 갱신하라고 말해줄 수 있습니다. 이때 ‘301 Moved Permanently’ 코드가 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;임시로 리소스가 옮겨진 경우&lt;/strong&gt;
 리소스가 영구히 옮겨진게 아니라 잠시 옮겨지거나 이름이 변경될 수도 있습니다. 이때, 리다이렉션은 필요하지만 방금 전 처럼 북마크를 갱신할 필요는 없습니다. 이럴땐 ‘303 See Other’ 이나 ‘307 Temporary Redirect’ 코드가 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;URL 증강&lt;/strong&gt;
 서버는 문맥 정보를 포함시키기 위해 재작성된 URL로 리다이렉션 시키기도 합니다. 그러면 클라이언트는 다시 작성된 fat URL을 따라 다시 요청 합니다. 이때도 ‘303 See Other’이나 ‘307 Temporary Redirect’ 코드가 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;부하 균형&lt;/strong&gt;
 과부하된 서버가 요청을 받으면 부하가 덜 걸린 서버로 리다이렉션 시킬수도 있습니다. 이때도 ‘303 See Other’이나 ‘307 Temporary Redirect’ 코드가 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;친밀한 다른 서버가 있을 때&lt;/strong&gt;
 웹 서버들은 사용자에 대한 정보를 가지고 있을 수 있습니다. 한 서버가 요청을 받았을때, 클라이언트의 정보를 가지고 있는 서버로 리다이렉션 시킬 수 있습니다. 이때도 ‘303 See Other’이나 ‘307 Temporary Redirect’ 코드가 사용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;디렉터리 이름 정규화&lt;/strong&gt;
 클라이언트가 디렉터리 이름에 대해 URI 요청을 하는데 ‘/’를 바뜨렸다면, 대부분의 웹 서버는 클라이언트를 ‘/’를 추가한 새로운 URI로 리다이렉션 시킵니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;59-단계6--응답-보내기&quot;&gt;5.9. 단계6 : 응답 보내기&lt;/h3&gt;

&lt;p&gt;대게 한 서버는 여러 클라이언트를 상대하며 여러 커넥션을 가지고 있습니다. 그중 어떤 커넥션은 놀고 있을 수 있고 어떤 커넥션은 데이터를 보내고 있으며 어떤 커넥션은 데이터를 받고 있을 수도 있습니다.&lt;/p&gt;

&lt;p&gt;요청을 받을때와 마찬가지로 응답을 보낼때도 커넥션 상태들을 추적해 효율적으로 전송해야 합니다. 특히, 비지속 커넥션은 응답을 보낸뒤에 바로 커넥션을 닫으면 되기 때문에 비교적 간단하지만 지속 커넥션의 경우 더 주의해야 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;510-단계7--로깅&quot;&gt;5.10. 단계7 : 로깅&lt;/h3&gt;

&lt;p&gt;트랜잭션이 완료되면 트랜잭션의 수행 결과를 로그 파일에 기록합니다. 대부분의 웹 서버는 기본적으로 제공하는 로깅 방식과 설정들이 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;

&lt;p&gt;매 장을 읽으면 그동안 머릿속에 자유롭게 돌아다니던 지식의 조각들이 제 자리를 찾아가는 것을 느낍니다. ‘How to use’를 알고 있던 것들이 ‘How it works’와 연결되는 과정이 즐겁습니다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>커넥션 관리</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C4/"/>
   <updated>2020-03-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드4</id>
   <content type="html">&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;41-tcp-커넥션&quot;&gt;4.1. TCP 커넥션&lt;/h3&gt;

&lt;p&gt;이번 장에선 HTTP 통신을 사용하기 위한 기저인 TCP 커넥션에 대해 알아볼 것입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP는 어떻게 TCP 통신을 사용하는지&lt;/li&gt;
  &lt;li&gt;네트워크 지연의 원인인 TCP 커넥션의 지연, 병목, 막힘이 무엇인지&lt;/li&gt;
  &lt;li&gt;지연을 해결하기 위한 병렬커넥션, keep-alive 커넥션, 커넥션 파이프라인이 무엇인지&lt;/li&gt;
  &lt;li&gt;커넥션 관리를 위해 따라야 할 몇 가지 규칙들&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같은 것들을 알아볼 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;1장에서도 설명드렸듯이 모든 HTTP 통신은 TCP/IP 통신을 기반으로 이루어집니다. HTTP는 데이터가 손실되지 않는 안전한 통신인데, 이 ‘안전한’을 TCP가 보장해줍니다.&lt;/p&gt;

&lt;p&gt;TCP/IP 커넥션이 맺어지면 HTTP 메세지들은 손실, 손상되지 않고 순서가 바뀌지도 않습니다. 이번 절에선 TCP/IP가 어떻게 데이터를 보장해주는지알아볼 것입니다.&lt;/p&gt;

&lt;p&gt;웹 브라우저 입장에서 TCP 커넥션을 이용한 HTTP 통신은 다음과 같은 과정으로 이루어집니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;브라우저가 URL에서 호스트 명을 추출합니다. 
(ex - http://www.joes-hardware.com:80/power-tools.html -&amp;gt; www.joes-hardware.com)&lt;/li&gt;
  &lt;li&gt;브라우저가 DNS(Domain Name System)을 이용해 호스트명에 대한 IP 주소를 찾습니다. 
(ex - www.joes-hardware.com -&amp;gt; 202.43.78.3)&lt;/li&gt;
  &lt;li&gt;브라우저가 URL에서 포트번호를 얻습니다. 
(ex - http://www.joes-hardware.com:80/power-tools.html -&amp;gt; 80)&lt;/li&gt;
  &lt;li&gt;브라우저가 호스트명의 포트 번호로 TCP 커넥션을 생성합니다.&lt;/li&gt;
  &lt;li&gt;브라우저가 서버로 요청 HTTP메세지를 보냅니다.&lt;/li&gt;
  &lt;li&gt;브라우저가 서버에서 온 응답 HTTP 메세지를 읽습니다.&lt;/li&gt;
  &lt;li&gt;브라우저가 커넥션을 끊습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;411-신뢰할-수-있는-데이터-전송-통로인-tcp&quot;&gt;4.1.1. 신뢰할 수 있는 데이터 전송 통로인 TCP&lt;/h4&gt;

&lt;p&gt;TCP에 대해 깊게 이해하기 위해선 따로 책 한권이 필요할 정도입니다.(저자추천 도서: 『TCP/IP Illustrated』 - W.Richard Stevens)&lt;/p&gt;

&lt;p&gt;4.1. 절에선 어떻게 TCP가 작동하고 데이터를 보장하는지 간략히 알아볼 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;412-tcp-스트림은-세그먼트로-나뉘어-ip-패킷을-통해-전송된다&quot;&gt;4.1.2. TCP 스트림은 세그먼트로 나뉘어 IP 패킷을 통해 전송된다&lt;/h4&gt;

&lt;p&gt;TCP는 HTTP 메세지를 통째로 전송하지 않습니다. IP 패킷(== IP 데이터그램)이라는 작은 조각으로 나눠 데이터를 전송합니다.&lt;/p&gt;

&lt;p&gt;패킷이라는 작은 조각으로 나누는 이유는 서킷 통신과 패킷 통신에 대해 알아야 합니다. https://brunch.co.kr/@wangho/6에 정말 잘 정리되어 있습니다. 간단히 말해 기존의 서킷 통신은 전화처럼 연결이 된 상대하고만 통신이 가능하고 그 외의 사람은 연결이 끝날때 까지 기다려야 하는데, 패킷 통신은 각자가 보낸 조각 패킷들을 받아서 조합하기 때문에 한 사람이 어떤 사람과 통신 중에 다른 사람이 끼어들어도 패킷들 사이에 다른 사람의 패킷이 들어올 수 있어 여러명과 통신이 가능하다는 것입니다.&lt;/p&gt;

&lt;p&gt;TCP는 HTTP 메세지를 세그먼트라는 단위로 나눠 IP 패킷에 담아 전달합니다. 이 과정은 osi 7계층에서 네트워크 계층, 전송 계층에서 일어나기 때문에 애플리케이션 계층을 다루는 개발자에겐 보이지 않습니다.&lt;/p&gt;

&lt;p&gt;IP 패킷은 아래와 같은 그림처럼 이루어져 있습니다.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;p&gt;크게 IP 패킷 헤더(보통 20 Byte), TCP 세그먼트 헤더(보통 20 Byte), TCP 데이터 조각으로 이루어져 있는데 각자의 역할이 있습니다.&lt;/p&gt;

&lt;p&gt;IP 패킷 헤더는 발신지에서 목적지로 IP 패킷이 이동하는데 필요한 정보를 가지고 있습니다. 하나의 HTTP 메세지는 여러 IP 패킷으로 잘려 IP 패킷 헤더를 이용해 목적지에 도착합니다. 이때, 도착한 순서나 각 패킷들이 손상 없이 잘 도착했는지는 보장할 수 없습니다.&lt;/p&gt;

&lt;p&gt;이걸 보장해주기 위해 필요한게 TCP 세그먼트 헤더입니다. TCP 세그먼트 헤더의 속성들로 조각난 IP 패킷의 순서를 맞추고, 손실된 데이터가 발견되면 해당 데이터를 다시 요청합니다.&lt;/p&gt;

&lt;h4 id=&quot;413-tcp-커넥션-유지하기&quot;&gt;4.1.3. TCP 커넥션 유지하기&lt;/h4&gt;

&lt;p&gt;하나의 컴퓨터는 여러개의 TCP 커넥션을 가지고 있습니다. 포트 번호마다 여러개의 커넥션이 생성될 수 있습니다. 이런 여러개의 TCP 커넥션은&lt;/p&gt;

&lt;p&gt;&amp;lt;발신지 IP 주소, 발신지 포트, 수신지 IP 주소, 수신지 포트&amp;gt;&lt;/p&gt;

&lt;p&gt;위 네가지 값으로 식별됩니다. 네 가지 값이 같다면 같은 커넥션이라고 볼 수 있습니다. 한 포트에 여러 커넥션이 생성될 수 있지만 네 가지 값이 모두 같아야만 같은 커넥션이라고 합니다.&lt;/p&gt;

&lt;h4 id=&quot;414-tcp-소켓-프로그래밍&quot;&gt;4.1.4. TCP 소켓 프로그래밍&lt;/h4&gt;

&lt;p&gt;이런 TCP를 개발자가 직접 조작할 수도 있습니다. 이를 도와주는게 각 운영체제에서 지원하는 TCP 관련 API 입니다. 이를 흔히 소켓 API라고 부릅니다. 소켓 API는 유닉스에서 처음 개발됐지만 현재는 대부분의 운영체제에서 지원합니다.&lt;/p&gt;

&lt;p&gt;아래는 소켓 API의 주요 인터페이스입니다. 물론 API도 필요 없이 더 저수준의 언어로 TCP를 조작할 수도 있겠지만… 그건 나중에.. 각 운영체제에서 제공하는 소켓 API는 개발자들에게 TCP/IP에 관한 세부사항(핸드셰이킹, IP 패킷의 분할 및 재조립 등 .. )을 숨기지만 TCP/IP를 조작 할 수 있게 도와줍니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;소켓 API&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;s = socket(&lt;parameters&gt;)&lt;/parameters&gt;&lt;/td&gt;
      &lt;td&gt;연결되지 않은 익명의 새로운 소켓 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bind(s, &lt;local IP:port=&quot;&quot;&gt;)&lt;/local&gt;&lt;/td&gt;
      &lt;td&gt;소켓에 로컬 IP, 포트 번호와 인터페이스 할당&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;connect(s, &lt;remote IP:port=&quot;&quot;&gt;)&lt;/remote&gt;&lt;/td&gt;
      &lt;td&gt;로컬의 소켓과 원격 호스트, 포트 사이에 TCP 커넥션 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;listen(s, …)&lt;/td&gt;
      &lt;td&gt;커넥션을 받아들이기 위해 로컬 소켓에 허용함을 표시&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;s2 = accpet(s)&lt;/td&gt;
      &lt;td&gt;누군가 로컬 포트에 커넥션을 맺기 기다림&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n = read(s, buffer, n)&lt;/td&gt;
      &lt;td&gt;소켓으로부터 버퍼에 n바이트 읽기 시도&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n = write(s, buffer, n)&lt;/td&gt;
      &lt;td&gt;소켓으로부터 버퍼에 n바이트 쓰기 시도&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;close(s)&lt;/td&gt;
      &lt;td&gt;TCP 커넥션을 완전히 끊음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;shutdown(s, &lt;side&gt;)&lt;/side&gt;&lt;/td&gt;
      &lt;td&gt;TCP 커넥션의 입출력만 닫음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;getsockopt(s, …)&lt;/td&gt;
      &lt;td&gt;내부 소켓 설정 옵션값을 읽음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;setsockopt(s, …)&lt;/td&gt;
      &lt;td&gt;내부 소켓 설정 옵션값을 변경&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위의 소켓 api를 기반으로 클라이언트와 서버의 TCP 통신을 대략적으로 그려보면 다음과 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;클라이언트&lt;/th&gt;
      &lt;th&gt;서버&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;1. 새로운 소켓을 만든다(socket)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2. 80포트로 소켓을 묶는다(bind)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3. 소켓 커넥션을 허가한다(listen)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;4. 커넥션을 기다린다(accept)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1. 요청 URL에서 IP 주소와 포트를 얻는다&lt;/td&gt;
      &lt;td&gt;:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2. 새로운 소켓을 생성한다(socket)&lt;/td&gt;
      &lt;td&gt;:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3. 서버의 IP:포트로 연결한다(connect)&lt;/td&gt;
      &lt;td&gt;:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;5. 커넥션 인식 및 연결 확인 메세지를 보낸다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4. 연결 성공&lt;/td&gt;
      &lt;td&gt;6. 요청을 읽기 시작한다(read)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5. HTTP 요청을 보낸다(write)&lt;/td&gt;
      &lt;td&gt;:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6. HTTP 응답을 기다린다(read)&lt;/td&gt;
      &lt;td&gt;7. 요청 메세지를 처리한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:&lt;/td&gt;
      &lt;td&gt;:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:&lt;/td&gt;
      &lt;td&gt;8. 응답을 보낸다.(write)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7. 응답을 처리한다.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8. 커넥션을 닫는다(close)&lt;/td&gt;
      &lt;td&gt;9. 커넥션을 닫는다(close)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;42-tcp의-성능에-대한-고려&quot;&gt;4.2. TCP의 성능에 대한 고려&lt;/h3&gt;

&lt;p&gt;HTTP는 osi 7계층에서 TCP 바로 위의 계층이기 때문에 HTTP의 성능은 TCP 성능에 직접적으로 영향을 받습니다.&lt;/p&gt;

&lt;p&gt;이번 절에선 TCP 성능 (주로 성능 저하의 원인)에 대해 알아볼 것입니다. TCP 프로토콜 내부를 자세히 알아야 하는 절이고 많은 개발자들은 이걸 직접 다룰 일은 드물 것입니다. 하지만 본 스터디는 근본 지식을 위한 스터디이므로 저는 한번 훑어보도록 하겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;421-http-트랜잭션-지연&quot;&gt;4.2.1. HTTP 트랜잭션 지연&lt;/h4&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;p&gt;위의 그림과 같이 HTTP 요청을 처리하는 시간은 요청을 전송하고 응답을 전송하는 시간에 비해 짧습니다. 대부분의 HTTP 지연은 TCP 네트워크의 지연 때문에 발생합니다.&lt;/p&gt;

&lt;p&gt;HTTP 지연에는 다음과 같은 원인들이 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;처음 방문하는 호스트의 경우 DNS을 이용해 호스트명을 IP로 변환하는 과정. 과거에는 수십초가 걸림(현재는 인터넷 인프라의 발전으로 대부분 밀리초 단위로 DNS 이름 분석이 끝난다 - 옮긴이)&lt;/li&gt;
  &lt;li&gt;새로운 커넥션을 만들고 설정하는 시간. 과거엔 1~2초가 걸림 (역시 인터넷 인프라의 발전으로 대부분 1초 미만으로 끝난다.)&lt;/li&gt;
  &lt;li&gt;요청 메세지 전송&lt;/li&gt;
  &lt;li&gt;요청 처리 및 응답 메세지 전송&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;422-성능-관련-중요-요소&quot;&gt;4.2.2. 성능 관련 중요 요소&lt;/h4&gt;

&lt;p&gt;지금부턴 다음과 같은 일반적인 TCP 관련 지연에 대해 살펴봅니다. 고성능의 HTTP 소프트웨어를 개발해야 한다면 각 항목을 모두 이해해야 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;TCP 커넥션의 핸드셰이크 설정&lt;/li&gt;
  &lt;li&gt;TCP의 slow start : 본래는 인터넷의 혼잡을 제어하기 위해 사용되지만 지연의 원인이 되기도 합니다.&lt;/li&gt;
  &lt;li&gt;Nagle 알고리즘 : 작은 데이터를 모아 한번에 전송하기 위해 만들어진 알고리즘이지만 지연의 원인이 되기도 합니다.&lt;/li&gt;
  &lt;li&gt;TCP의 편승(piggyback) 확인응답(acknowledgment)을 위한 확인응답 지연 : 이 역시 확인응답이라는 메세지를 다른 데이터에 편승 시킬 목적이었으나 지연의 원인이 되기도 합니다.&lt;/li&gt;
  &lt;li&gt;TIME_WAIT 지연과 포트고갈&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;423-tcp-커넥션-핸드셰이크-지연&quot;&gt;4.2.3. TCP 커넥션 핸드셰이크 지연&lt;/h4&gt;

&lt;p&gt;핸드셰이크는 악수죠. TCP 커넥션 핸드셰이크는 정말 직관적으로 잘 이해되는 단어 같습니다. 새로운 TCP 커넥션을 맺을 때 두 TCP 소프트웨어는 커넥션을 맺기 위해 IP 패킷을 교환합니다.&lt;/p&gt;

&lt;p&gt;다음 그림과 설명은 TCP 커넥션이 핸드셰이크를 하는 순서입니다.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트는 ‘SYN’이라는 플래그를 가진 작은 TCP 패킷을 보낸다.(40~60 Byte) SYN 플래그는 커넥션 생성 요청을 뜻한다.&lt;/li&gt;
  &lt;li&gt;서버가 그 커넥션을 받으면 몇 가지 커넥션 매개변수를 산출해 ‘SYN’과 ‘ACK’ 플래그가 담긴 TCP 패킷을 클라이언트에게 보낸다. SYN+ACK 플래그는 커넥션 생성 요청이 승낙 됐다는 것을 뜻한다.&lt;/li&gt;
  &lt;li&gt;SYN+ACK 플래그를 가진 TCP 패킷을 받은 클라이언트는 승낙을 확인했다는 뜻의 ACK 플래그를 가진 확인 응답 신호를 보낸다. 오늘날 TCP는 이 확인 응답 신호를 실질적으로 보내야할 데이터와 같이 보낸다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;주고받아야할 데이터의 크기가 작은 HTTP 트랜잭션들은 통신시간의 50%이상을 실제 데이터 전송이 아니라 TCP 커넥션을 구성하는데 사용합니다. (하나의 IP 패킷은 인터넷상에서 수백 바이트, 로컬에선 1500바이트 정도 됩니다.)&lt;/p&gt;

&lt;p&gt;이미 존재하는 커넥션을 재활용 하는 방식으로 이런 지연을 최소화 하는데 이는 뒤에서 살펴볼 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;424-확인응답-지연&quot;&gt;4.2.4. 확인응답 지연&lt;/h4&gt;

&lt;p&gt;앞서 하나의 HTTP 메세지는 여러 세그먼트단위로 나뉘고 IP 패킷에 담겨 전송되고, TCP는 각 세그먼트의 순서와 손상 여부를 검사한다고 했습니다. 이렇게 HTTP 메세지를 잘 받은걸 확인한 후에 확인응답 패킷을 송신자에게 반환합니다.&lt;/p&gt;

&lt;p&gt;그리고 송신자는 특정 시간 안에 확인응답을 받지 못하면 패킷 전송에 오류가 있다는 것으로 간주해 데이터를 다시 전송하게 됩니다.&lt;/p&gt;

&lt;p&gt;위 과정에서 보내는 확인응답은 크기가 작습니다. 그래서 보통 TCP는 확인응답이 가야할 방향으로 송출되는 데이터 패킷에 확인응답을 같이 태워보냅니다. 이를 편승(piggyback)시킨다고 부릅니다.&lt;/p&gt;

&lt;p&gt;편승하기 위해서 구현된 많은 ‘확인응답 지연’ 알고리즘은 다음과 같이 동작합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;보낼 확인응답을 특정시간(0.1~0.2초) 동안 버퍼에 저장한다.&lt;/li&gt;
  &lt;li&gt;편승할 송출 데이터 패킷을 찾는다.&lt;/li&gt;
  &lt;li&gt;일정 시간 안에 송출 데이터 패킷을 찾지 못하면 확인응답만 별도의 패킷으로 전송한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;서로 데이터 전송이 활발한 커넥션의 경우에 문제가 없겠지만 주고받는게 적은 통신에선 오히려 편승할 데이터 패킷을 찾는 과정에 시간을 버리는 일이 빈번합니다.&lt;/p&gt;

&lt;p&gt;운영체제에 따라 이 확인응답 지연 관련 기능을 수정할수도 있지만 조심히 건드려야 할것입니다.&lt;/p&gt;

&lt;h4 id=&quot;425-tcp-느린-시작slow-start&quot;&gt;4.2.5. TCP 느린 시작(slow start)&lt;/h4&gt;

&lt;p&gt;TCP의 slow start는 생성 초기엔 커넥션의 최대 속도를 제한하고 데이터가 성공적으로 전송됨에 따라 속도 제한을 높이는 것입니다. 이는 인터넷의 급작스러운 부하나 혼잡을 방지하기 위해 도입되었습니다.&lt;/p&gt;

&lt;p&gt;속도 제한은 한번에 전송 가능한 패킷의 수로 제어 합니다. 패킷이 성공적으로 전달되면 추가로 2개의 패킷을 더 전송할 수 있는 권한을 얻게 됩니다.&lt;/p&gt;

&lt;p&gt;2개를 보냈다가 성공적으로 전달되면 다음엔 4개를 보낼 수 있게되는 방식입니다. 이렇게 점진적으로 전달 패킷 양을 늘리는걸 ‘Opening the congestion window’라고 부르고 어느 정도 데이터를 주고 받은 커넥션을 ‘튜닝된’ 커넥션이라고 부릅니다.&lt;/p&gt;

&lt;p&gt;새로운 커넥션은 튜닝된 커넥션보다 느리기 때문에(한 번에 보낼 수 있는 최대 패킷수가 제한되기 때문에) 커넥션을 재사용하지 않는다면 TCP의 slow start 때문에 네트워크 지연이 발생할수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;426-네이글nagle-알고리즘과-tcp_nodelay&quot;&gt;4.2.6. 네이글(Nagle) 알고리즘과 TCP_NODELAY&lt;/h4&gt;

&lt;p&gt;앞서 보았듯이 실제로 전송해야할 데이터가 얼마가 되든 IP 패킷으로 전송하기위해선 IP 패킷 헤더, TCP 세그먼트 헤더, 플래그등을 포함합니다. 따라서 전송해야할 데이터가 작다면 실제 보낼 데이터보다 헤더값들이 더 큰 상황이 발생할 수 있습니다.&lt;/p&gt;

&lt;p&gt;네이글 알고리즘은 이런 작은 패킷들을 하나로 합쳐 전송하는 역할을 합니다. 네이글 알고리즘은 다음과 같은 순서로 이루어집니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;전에 전송한 패킷에 아직 확인응답을 못받은 경우 전송할 데이터들을 버퍼에 쌓아둔다.&lt;/li&gt;
  &lt;li&gt;쌓아둔 데이터가 세그먼트의 최대크기 만큼 쌓이면 하나의 패킷으로 전송한다.&lt;/li&gt;
  &lt;li&gt;전에 전송한 패킷들이 모두 확인응답을 받아 확인응답을 기다리는 패킷들이 없다면, 버퍼에 쌓는 데이터가 세그머느의 최대 크기가 되지 않더라도 하나의 패킷으로 전송한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;네이글 알고리즘 역시 네트워크의 지연을 줄이고자 하는 목적으로 도입됐지만 오히려 네트워크 지연을 발생시키기도 합니다. 앞으로 생길지 말지 모르는 데이터를 하염없이 기다리며 지연됩니다.&lt;/p&gt;

&lt;p&gt;그리고 이 네이글 알고리즘은 앞서 본 확인응답 지연과 같이 쓰이면 성능이 매우 떨어지기도 합니다. 확인응답 지연은 패킷을 자주 주고받아 확인응답을 다른 패킷에 편승시켜야 하는데, 네이글 알고리즘은 작은 패킷들은 안보내고 모으고 있으니 서로 역효과를 발생시키게 됩니다.&lt;/p&gt;

&lt;p&gt;HTTP 어플리케이션 수준에서 HTTP 스택에 TCP_NODELAY 파라미터 값을 설정하면 네이글 알고리즘을 비활성화 할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;427-time_wait의-누적과-포트-고갈&quot;&gt;4.2.7. TIME_WAIT의 누적과 포트 고갈&lt;/h4&gt;

&lt;p&gt;TIME_WAIT의 누적과 포트 고갈은 실제 상황에서 발생할 가능성은 낮지만 발생시엔 심각한 성능 저하를 일으킵니다. 그렇다면 포트고갈은 왜 일어나는 것 인지 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;TCP 커넥션의 종단(end-point)에서 TCP 커넥션을 끊으면 커넥션의 IP 주소와 포트번호를 메모리의 제어영역(control block)에 기록해두고 해당 주소와 포트번호는 일정 시간 동안 사용하지 않게합니다. 이를 TIME_WAIT라고 하고 보통 세그먼트의 최대 생명주기의 두배(2MSL) 정도 유지하며 2MSL은 과거엔 2분, 현재는 1분 이내입니다.&lt;/p&gt;

&lt;p&gt;TIME_WAIT를 하는 이유는 이전 커넥션과 관련된 패킷이 이전 커넥션과 같은 IP, 포트를 갖는 새로운 커넥션에 들어오는 것을 방지하는 것입니다. 그래서 세그먼트의 생명주기의 두배정도를 기다리는 것입니다.&lt;/p&gt;

&lt;p&gt;하지만 요즘엔 라우터들이 향상되어 커넥션이 닫힌 후에 중복 패킷이 생기는 경우는 거의 없습니다.&lt;/p&gt;

&lt;p&gt;처음에 이 포트 고갈은 실제 상황에서 발생할 가능성이 낮다고 했습니다. 실제 상황보다 성능 테스트 시에 발생할 가능성이 높습니다. 커넥션에 관해 설명할때&lt;/p&gt;

&lt;p&gt;&amp;lt;발신지 IP주소, 발신지 포트, 목적지 IP주소, 목적지 포트&amp;gt;&lt;/p&gt;

&lt;p&gt;4가지가 모두 같아야 같은 커넥션이라고 했습니다. 실제 상황에선 한 발신지에서 많은 트랜잭션을 단시간에 보내는 경우는 드물기 때문에 실제론 잘 발생하지 않습니다. 오히려 발신지의 IP와 포트가 제한된 채로 많은 트랜잭션을 발생시켜 테스트하는 성능 테스트 단계에서 발생하기 쉽습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;43-http-커넥션-관리&quot;&gt;4.3. HTTP 커넥션 관리&lt;/h3&gt;

&lt;p&gt;이번 절에선 커넥션을 생성하고 최적화하는데 필요한 HTTP 기술을 알아볼 것입니다. HTTP의 Connection 헤더에 대해 알아보고 이를 최적화 하는 방법을 알아 볼 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;431-흔히-잘못-이해하는-connection-헤더&quot;&gt;4.3.1. 흔히 잘못 이해하는 Connection 헤더&lt;/h4&gt;

&lt;p&gt;클라이언트의 요청은 바로 목적지 서버로 들어가지 않고 여러 프록시를 거칠 수 있습니다. 이때를&lt;/p&gt;

  	클라이언트 - 프록시1 - 프록시2 - 서버

&lt;p&gt;순서로 통신이 이루어진다고 가정하면, 클라이언트와 프록시1 둘 간에만 적용될 옵션을 지정할 수 있습니다. 이를 hop-by-hop 헤더라고 합니다.&lt;/p&gt;

&lt;p&gt;HTTP메세지의 Connection헤더는 세가지 종류의 토큰이 올 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTTP 헤더 필드 명 : 해당 커넥션에서만 사용되는 HTTP 헤더를 나열합니다. 다음 커넥션에선 해당 HTTP 헤더를 삭제하고 보냅니다.&lt;/li&gt;
  &lt;li&gt;임시적인 토큰 : 커넥션에 대한 비표준 옵션입니다.&lt;/li&gt;
  &lt;li&gt;close : 커넥션 작업이 완료되면 종료되어야 한다는 뜻입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;예시를 보겠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;HTTP/1.1 200 OK
Cache-control : max-age=3600
Connection : meter, close, bill-my-credit-card
Meter : max-uses=3, max-refuses=6, dont-report&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위는 서버에서 프록시쪽으로 갈 수 있는 응답 메세지 입니다. 이 중 Connection 헤더를 보면 meter 토큰이 있고 아래에 Meter라는 HTTP 헤더가 있습니다. 여기서 meter 헤더는 해당 커넥션에서만 사용되고 다음 커넥션으로 갈땐 Meter 헤더가 삭제 되어야 한다는 뜻입니다.&lt;/p&gt;

&lt;p&gt;bill-my-credit-card는 커넥션에서 사용하기 위해 만든 비표준 옵션이라고 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;추가적으로 Connection 헤더에 기술되지 않더라도 기본적으로 hop-by-hop 헤더인 HTTP 헤더들도 있습니다. Proxy-Authenticate, Proxy-Connection, Transfer-Encoding, Upgrade 같은 헤더들이 그것입니다.&lt;/p&gt;

&lt;h4 id=&quot;432-순차적인-트랜잭션-처리에-의한-지연&quot;&gt;4.3.2. 순차적인 트랜잭션 처리에 의한 지연&lt;/h4&gt;

&lt;p&gt;3개의 이미지가 있는 웹페이지를 연다고 가정해보겠습니다. 이 웹페이지를 열기 위해선 4번의 HTTP 트랜잭션이 필요합니다. (HTML을 가져오는 트랜잭션 1개 + 3개의 이미지를 가져오는 각각의 트랜잭션)&lt;/p&gt;

&lt;p&gt;각 트랜잭션들이 새로운 커넥션이 필요하다면(HTML과 각 이미지를 호스팅하는 서버가 다르거나 포트가 다를 경우) 핸드셰이킹 지연과 TCP slow start 지연이 추가로 발생합니다.&lt;/p&gt;

&lt;p&gt;이렇게 순차적으로 4개의 트랜잭션을 처리할 경우 물리적으로 지연이 발생할 뿐 아니라 사용자 입장에서 이미지가 로드될때까지 빈 화면을 바라봐야 하는 심리적인 지연도 있습니다. (뒤에서 살펴볼 병렬적으로 이미지를 받아오는 방식이 더 느릴때도 있지만 사용자는 그래도 동시에 로드되는걸 좋아한다고 합니다!)&lt;/p&gt;

&lt;p&gt;또한 특정 브라우저들의 경우엔 이미지의 크기를 알기 전엔 HTML의 뼈대조차 안그려주는 브라우저도 있습니다. (html 태그 상에서 width와 height를 지정해주면 해결되긴 합니다.)&lt;/p&gt;

&lt;p&gt;이렇게 발생하는 지연을 해결하기 위해 아래와 같은 방법들을 사용하고 앞으로 하나씩 알아보겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;병렬 커넥션 : 여러개의 TCP 커넥션을 통한 동시 HTTP 요청&lt;/li&gt;
  &lt;li&gt;지속 커넥션 : 커넥션을 맺고 끊는 데서 발생하는 지연을 제거하기 위한 TCP 커넥션의 재활용&lt;/li&gt;
  &lt;li&gt;파이프라인 커넥션 : 공유 TCP 커넥션을 통한 병렬 HTTP 요청&lt;/li&gt;
  &lt;li&gt;다중 커넥션 : 요청과 응답들에 대한 중재(아직 실험적인 기술)&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;44-병렬-커넥션&quot;&gt;4.4. 병렬 커넥션&lt;/h3&gt;

&lt;p&gt;병렬 커넥션은 말 그대로 여러개의 커넥션을 맺어 여러개의 HTTP 트랜잭션을 병렬로 처리하는 것입니다. 병렬 ‘커넥션’이기 때문에 가져와야할 리소스가 다른 호스트나 포트에 있어야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;441-병렬-커넥션은-페이지를-더-빠르게-내려-받는다&quot;&gt;4.4.1. 병렬 커넥션은 페이지를 더 빠르게 내려 받는다&lt;/h4&gt;

&lt;p&gt;하나의 커넥션은 HTTP 요청을 보내고 응답을 기다립니다. 그 기다리는 시간동안 다른 커넥션을 만들고 다른 요청을 보냅니다. 이렇게 하기 위해선 충분한 인터넷 대역폭이 확보되어야 합니다.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;p&gt;이렇게 인터넷 대역폭이 충분하고 한 커넥션이 지연되는 시간이 있을때, 하나가 지연될때 다른 커넥션을 작동시켜 지연시간을 겹치게 만들 수 있습니다. 이렇게 하면 일반적으론 더 빠르게 웹 페이지를 받아올 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;442-병렬-커넥션이-항상-더-빠르지는-않다&quot;&gt;4.4.2. 병렬 커넥션이 항상 더 빠르지는 않다&lt;/h4&gt;

&lt;p&gt;하지만 병렬 커넥션이 항상 빠르지는 않습니다. 앞서 말했듯이 충분한 인터넷 대역폭이 확보되어야 하는데 인터넷 대역폭이 극히 작아 하나의 커넥션만으로 버겁다면 병렬적으로 커넥션을 사용할 수 없습니다. (오히려 여러 커넥션을 만들어야 되니 그로 인한 지연이 더 발생할 수 있습니다.)&lt;/p&gt;

&lt;p&gt;그리고 커넥션을 여러개 생성하는건 메모리의 문제로 이어질 수도 있습니다.&lt;/p&gt;

&lt;p&gt;또한, 복잡한 웹페이지의 경우엔 수십~수백개의 객체를 포함하는데 이를 수백개의 병렬 커넥션으로 연결할 순 없습니다. 서버쪽에서 거부하기 때문에 과도한 수의 커넥션이 맺어지면 서버쪽에서 임의로 끊을 수도 있습니다.&lt;/p&gt;

&lt;p&gt;사실 서버쪽에서 거부하기 전에 사용자가 사용하는 브라우저 자체에서 병렬 커넥션의 수를 제한합니다.(최신 브라우저들은 대부분 6~8개의 병렬 커넥션을 지원합니다. - 옮긴이)&lt;/p&gt;

&lt;h4 id=&quot;443-병렬-커넥션은-더-빠르게-느껴질-수-있다&quot;&gt;4.4.3. 병렬 커넥션은 더 빠르게 ‘느껴질 수’ 있다&lt;/h4&gt;

&lt;p&gt;이렇게 실제로 병렬 커넥션이 더 느릴 수도 있습니다. 하지만 사용자는 병렬 커넥션을 더 선호합니다. 앞서 말했듯이 빈 화면을 보고있는 것보단 동시에 로드되는 과정을 지켜볼때 사용자는 더 빠르다고 생각합니다.&lt;/p&gt;

&lt;p&gt;이렇게 사용자의 심리적인 부분을 고려하는 것도 중요합니다. 옮긴이에 따르면, 이미지 같은 것을 로드할때 처음엔 저화질 이미지를 로드해 보여주고 후에 고화질을 받아 보여주는 방식도 사용자의 심리적인 면을 고려하는 것중 하나라고 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;45-지속-커넥션&quot;&gt;4.5. 지속 커넥션&lt;/h3&gt;

&lt;p&gt;대부분의 웹 사이트를 이용할 때 웹 클라이언트는 같은 사이트에 여러 개의 커넥션을 맺습니다. 하나의 웹 페이지를 띄우기 위해 가져와야할 많은 리소스들이 같은 서버에 있는 경우 그 서버에 또 요청을 하게 됩니다. 이를 ‘site locality’ 라고 부릅니다.&lt;/p&gt;

&lt;p&gt;이를 위해 HTTP/1.1에선 처리가 완료된 후에도 TCP 커넥션을 유지합니다. 이를 ‘지속 커넥션’이라고 부르고 지속 커넥션을 이용하면 여러 번 커넥션을 맺을 때 발생할 수 있는 헨드셰이킹 지연, TCP slow start 지연을 방지해 더 빠르게 리소스를 가져올 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;451-지속-커넥션-vs-병렬-커넥션&quot;&gt;4.5.1. 지속 커넥션 vs 병렬 커넥션&lt;/h4&gt;

&lt;p&gt;병렬 커넥션의 장, 단점은 앞에서 살펴보았고 지속 커넥션의 장점은 방금 살펴보았습니다. 하지만 지속 커넥션이 장점만 갖는건 아닙니다. 지속 커넥션 관리가 제대로 되지 않을 경우, 연결된 상태의 커넥션이 계속 쌓여 클라이언트, 서버 양쪽에 리소스를 낭비할 것입니다.&lt;/p&gt;

&lt;p&gt;사실 가장 좋은 방법은 병렬 커넥션과 지속 커넥션을 같이 사용하는 것입니다. 요즘의 많은 웹 어플리케이션은 적은 수의 병렬 커넥션을 사용하며 각 커넥션을 지속 커넥션으로 사용합니다.&lt;/p&gt;

&lt;p&gt;쉽게 볼 수 있는 지속 커넥션엔 두 가지가 있습니다. HTTP/1.0+ 에서 사용되는 ‘keep alive’ 커넥션이 있고 HTTP/1.1 에서 사용되는 ‘지속’ 커넥션이 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;452-http10의-keep-alive-커넥션&quot;&gt;4.5.2. HTTP/1.0+의 Keep-Alive 커넥션&lt;/h4&gt;

&lt;p&gt;HTTP/1.0에서는 지속 커넥션이 없었습니다. 당시에 실험적인 수준이었던 keep-alive 커넥션을 지원하기 위해 HTTP/1.0+로 확장 됩니다.&lt;/p&gt;

&lt;p&gt;keep-alive 커넥션은 처음 등장한 지속 커넥션이어서 그런지 설계상 문제가 있었습니다. 하지만 아직도 많은 클라이언트와 서버들은 keep-alive 커넥션을 사용합니다. (&lt;strong&gt;책이 집필 된 지 오래돼서 아직도 이 문장이 유효한지 잘 모르겠습니다.&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;keep-alive의 설계상 문제는 HTTP/1.1 에서 수정되어 새로운 지속 커넥션으로 바뀌었습니다. 그리고 keep-alive 자체는 HTTP/1.1 명세에 빠졌습니다. 머지않아 레거시로만 남게 될 것 같습니다.&lt;/p&gt;

&lt;h4 id=&quot;453-keep-alive-동작&quot;&gt;4.5.3. Keep-Alive 동작&lt;/h4&gt;

&lt;p&gt;keep-alive가 HTTP/1.1 명세에서 공식적으로 빠졌더라도 아직 많은 웹 클라이언트와 서버가 keep-alive를 사용중이고 레거시와의 호환성은 개발자에겐 피할 수 없는 숙명이므로 keep-alive가 어떻게 동작하는지 알아보겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트가 요청시 ‘Connection:Keep-Alive’ 헤더를 포함시킵니다.&lt;/li&gt;
  &lt;li&gt;‘Connection:Keep-Alive’헤더를 받은 서버가 이 지속 커넥션을 수락하고자 한다면 응답 메세지에도 ‘Connection:Keep-Alive’헤더 를 포함시킵니다.&lt;/li&gt;
  &lt;li&gt;응답 메세지에서 ‘Connection:Keep-Alive’헤더를 확인한 클라이언트는 지속 커넥션을 유지합니다. 만약 응답 메세지에서 ‘Connection:Keep-Alive’를 찾지 못했다면 서버가 커넥션을 끊을 것이라 추정하게 됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;여기서 ‘Connection:Keep-Alive’ 헤더는 커넥션을 유지하기 바라는 요청일 뿐이고 해당 헤더를 포함시켰다고 해서 keep-alive 커넥션이 만들어질거라는 보장은 없습니다. 또한, 언제든지 keep-alive 커넥션은 끊어질 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;454-keep-alive-옵션&quot;&gt;4.5.4. Keep-Alive 옵션&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Connection : Keep-Alive
Keep-Alive : max=5, timeout=120&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위에서 처럼 Keep-Alive 헤더를 추가해 keep-alive에 대한 옵션 사항을 줄 수도 있습니다. 위의 예시에서 max 파라미터는 몇 개의 HTTP 트랜잭션을 처리할 때 까지 커넥션을 유지할 것인지를 나타냅니다. timeout 파라미터는 이 커넥션이 얼마간 유지될 것인지를 나타냅니다. 이 외에도 다양한 파라미터를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 ‘Connection:Keep-Alive’헤더가 keep-alive 커넥션을 보장하지 못하는 것 처럼 Keep-Alive 헤더에 옵션을 적었다고 해서 그렇게 동작할 것이라는 보장은 없습니다.&lt;/p&gt;

&lt;p&gt;끝으로 Keep-Alive 헤더는 ‘Connection:Keep-Alive’ 헤더가 있을때만 유효합니다.&lt;/p&gt;

&lt;h4 id=&quot;455-keep-alive-커넥션-제한과-규칙&quot;&gt;4.5.5. Keep-Alive 커넥션 제한과 규칙&lt;/h4&gt;

&lt;p&gt;앞에서 살펴본 것들과 뒤에서 살펴볼 keep-alive의 제한이나 규칙등을 정리해보겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;keep-alive는 기본적으로 적용되는 것이 아닙니다.  Connection:Keep-Alive 요청 헤더를 보내야 합니다.&lt;/li&gt;
  &lt;li&gt;keep-alive를 유지하려면 계속 요청과 응답에서 Connection:Keep-Alive 헤더를 유지해야 합니다. 클라이언트가 Connection:Keep-Alive를 보내지 않으면 서버는 keep-alive 커넥션을 끊을 것입니다.&lt;/li&gt;
  &lt;li&gt;서버가 Connection:Keep-Alive를 보내지 않으면 클라이언트는 서버가 keep-alive 커넥션을 끊을 것이라 생각합니다.&lt;/li&gt;
  &lt;li&gt;keep-alive 커넥션에서 Content-Length의 값을 알려주는 것은 매우 중요합니다. Content-Length를 알아야만 메세지의 끝과 시작점을 알 수 있기 때문입니다.&lt;/li&gt;
  &lt;li&gt;정석대로라면 keep-alive 커넥션은 Connection 헤더를 인식하지 못하는 프록시와는 연결되면 안됩니다. 뒤에서 설명할 dumb 프록시로 인한 문제가 발생할 수 있기 때문입니다. 하지만 현실적으론 쉽지 않습니다.&lt;/li&gt;
  &lt;li&gt;기술적으론 HTTP/1.0 을 따르는 곳에서 오는 모든 Connection 헤더 필드는 무시해야 합니다.&lt;/li&gt;
  &lt;li&gt;클라이언트는 응답을 전부 받기 전에 커넥션이 끊어진다면 다시 요청을 보낼 준비를 하고 있어야 합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;456-keep-alive와-멍청한dumb-프록시&quot;&gt;4.5.6. Keep-Alive와 멍청한(dumb) 프록시&lt;/h4&gt;

&lt;p&gt;dumb 프록시에 관한 문제는 Connection 헤더를 이해못하는 구형 프록시 때문에 발생합니다. 발생 과정을 살펴보겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트 - dumb proxy - 서버 간의 통신 상황입니다.&lt;/li&gt;
  &lt;li&gt;클라이언트가 Connection : Keep-Alive 헤더를 포함한 요청을 보냅니다.&lt;/li&gt;
  &lt;li&gt;dumb 프록시는 Connection : Keep-Alive 헤더를 단순히 확장 헤더로 취급하고 서버에 그대로 전달 합니다.
앞서 살펴봤듯이 Connection 헤더는 hop-by-hop 헤더로써, 다음 서버로 전송되면 안됩니다.&lt;/li&gt;
  &lt;li&gt;서버는 Connection : Keep-Alive 헤더가 담긴 메세지를 받고 문제가 없는 경우에 keep-alive 커넥션에 동의하고 Connection : Keep-Alive 헤더를 포함한 응답 메세지를 보냅니다.&lt;/li&gt;
  &lt;li&gt;dumb 프록시는 이번에도 Connection : Keep-Alive 헤더를 확장 헤더로 취급해 그대로 클라이언트에게 전달합니다.&lt;/li&gt;
  &lt;li&gt;그리고 dumb 프록시는 keep-alive를 이해하지 못하기 때문에 서버가 커넥션을 끊기를 기다립니다. 하지만 서버는 keep-alive 커넥션에 동의했기 때문에 커넥션을 끊지 않습니다.&lt;/li&gt;
  &lt;li&gt;Connection : Keep-Alive 헤더가 담긴 응답을 받은 클라이언트는 keep-alive가 맺어졌다고 생각하고 다음 요청을 프록시에 보냅니다.
하지만 프록시는 같은 커넥션에서 다른 요청이 또 올거라 예상하지 못하기 때문에 클라이언트의 다음 요청은 무시됩니다. 클라이언트는 계속 기다리게 됩니다.&lt;/li&gt;
  &lt;li&gt;dumb 프록시가 중간을 어지럽혔기 때문에 클라이언트나 서버는 타임아웃이 나서 커넥션이 끊길때 까지 기다리게 됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위의 모든 상황은 dumb 프록시가 다음으로 넘기지 말아야 할 Connection 헤더를 넘겨 일어난 일입니다.&lt;/p&gt;

&lt;h4 id=&quot;457-proxy-connection-살펴보기&quot;&gt;4.5.7. Proxy-Connection 살펴보기&lt;/h4&gt;

&lt;h4 id=&quot;458-http11의-지속-커넥션&quot;&gt;4.5.8. HTTP/1.1의 지속 커넥션&lt;/h4&gt;

&lt;p&gt;앞에서 많은 시간을 들여 keep-alive 커넥션에 대해 알아봤지만 사실 keep-alive는 deprecated된 기술입니다. HTTP/1.1에선 keep-alive보다 향상된 지속 커넥션을 사용합니다.&lt;/p&gt;

&lt;p&gt;HTTP/1.1의 지속 커넥션은 기본적으로 활성화되어 있습니다. keep-alive가 기본적으로 비활성이던 것과는 정반대입니다. HTTP/1.1의 지속 커넥션은 모든 커넥션을 지속 커넥션으로 취급하고, 이를 끊으러면 Connection : close 헤더를 보내야 합니다.&lt;/p&gt;

&lt;p&gt;Connection : close 헤더가 없다면 HTTP/1.1을 따르는 웹 어플리케이션들은 지속 커넥션이 유지된다고 생각합니다. 물론, Connection : close를 보내지 않았다고 해서 커넥션이 영원히 유지되는 것은 아닙니다.&lt;/p&gt;

&lt;h4 id=&quot;459-지속-커넥션의-제한과-규칙&quot;&gt;4.5.9. 지속 커넥션의 제한과 규칙&lt;/h4&gt;

&lt;p&gt;HTTP/1.1 지속 커넥션의 특징들을 정리하겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;클라이언트가 Connection : close헤더를 포함한 요청을 보냈다면 그 커넥션으로 추가 요청을 보낼 순 없다.&lt;/li&gt;
  &lt;li&gt;클라이언트가 추가적으로 요청을 보내지 않을 것이라면 Connection : close헤더를 포함해 마지막 요청을 보내야 한다.&lt;/li&gt;
  &lt;li&gt;메세지에 길이 정보가 있어야 지속 커넥션을 유지 시킬 수 있다. 즉, Content-Length를 가지고나 chunked transfer encoding 되어 있어야 한다.&lt;/li&gt;
  &lt;li&gt;HTTP/1.1 프록시는 클라이언트, 서버와 각각 별도의 지속 커넥션을 맺고 관리해야 한다.&lt;/li&gt;
  &lt;li&gt;HTTP/1.1 프록시는 클라이언트의 HTTP지원 범위를 모른다면 지속 커녁션을 맺으면 안된다.(하지만 이게 잘 지켜지진 않는다.)&lt;/li&gt;
  &lt;li&gt;HTTP/1.1 기기는 Connection : close 헤더와 관계 없이 언제든 커넥션을 끊을 수 있다.&lt;/li&gt;
  &lt;li&gt;HTTP/1.1 어플리케이션은 중간에 끊어진 커넥션을 복구할 수 있어야 한다. 다시 보내도 되는 요청이면 다시 보내야 한다.&lt;/li&gt;
  &lt;li&gt;클라이언트는 커넥션이 비정상적으로 끊어질 것을 대비해 다시 요청을 보낼 준비가 되어있어야 한다.&lt;/li&gt;
  &lt;li&gt;하나의 클라이언트는 서버의 과부하 방지를 위해 두개 정도의 지속 커넥션을 유지해야 한다. n명의 사용자를 상대하기 위해서 프록시나 서버는 2n개의 커넥션을 유지할 수 있어야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;46-파이프라인-커넥션&quot;&gt;4.6. 파이프라인 커넥션&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;파이프라인 : 컴퓨터 과학에서 파이프라인은 한 데이터 처리 단계의 출력이 다음 단계의 입력으로 이어지는 형태로 연결된 구조를 가리킨다. 이렇게 연결된 데이터처리 단계는 한 단계가 서로 동시에, 또는 병렬적으로 수행될 수 있어 효율성의 향상을 꾀할 수 있다. 각 단계 사이의 입출력을 중계하기 위해 버퍼가 사용될 수 있다.  - [위키백과][https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8_(%EC%BB%B4%ED%93%A8%ED%8C%85)]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;HTTP/1.1은 지속 커넥션을 위해 요청을 파이프라이닝 할 수 있습니다. 하나의 요청을 보내고 응답을 기다리는 동안 보낸 요청은 큐에 쌓아두고 새로운 요청을 보내고 또 큐에 쌓는 방식입니다. 대기시간이 긴 네트워크 상황에서 큰 효과를 얻을 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 파이프라이닝엔 다음과 같은 제약 사항들이 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTTP 클라이어느는 커넥션이 지속 커넥션인지 확인하기 전 까진 파이프라인을 이어서는 안됩니다.&lt;/li&gt;
  &lt;li&gt;HTTP 응답은 요청 순서와 같게 와야 합니다. HTTP 메세지는 순번이 매개져 있지 않기 때문에 응답이 무작위로 오면 순서에 맞게 정렬시킬 방법이 없습니다.&lt;/li&gt;
  &lt;li&gt;HTTP 클라이언트는 커넥션이 언제 끊어지더라도 실패한 요청을 다시 보낼 수 있어야 합니다.&lt;/li&gt;
  &lt;li&gt;POST 요청과 같이 반복해서 보낼때 문제가 생길 수 있는 요청은 파이프라인을 통해 보내면 안됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;47-커넥션-끊기에-대한-미스터리&quot;&gt;4.7. 커넥션 끊기에 대한 미스터리&lt;/h3&gt;

&lt;p&gt;커넥션을 관리(특히 언제, 어떻게 커넥션을 끊는지)에는 명확한 기준도 없고 관련한 기술문서도 많지 않습니다.&lt;/p&gt;

&lt;h4 id=&quot;471-마음대로-커넥션-끊기&quot;&gt;4.7.1. ‘마음대로’ 커넥션 끊기&lt;/h4&gt;

&lt;p&gt;모든 HTTP 클라이언트, 프록시, 서버는 사실 언제든지 TCP 전송 커넥션을 독자적으로 끊을 수 있습니다. 보통은 메세지를 다 보낸 다음 끊게 되지만 이렇게 마음대로 커넥션을 끊어 버리면 HTTP메세지의 중간이 끊기는것 처럼 다양한 문제가 발생할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;472-content-length와-truncation&quot;&gt;4.7.2. Content-Length와 Truncation&lt;/h4&gt;

&lt;p&gt;오래된 HTTP 서버는 ‘커넥션을 끊는다’ == ‘데이터 전송이 끝났다’ 라는 가정하에 개발되어 Content-Length를 가지지 않는 경우가 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 모든 HTTP 응답은 엔터티 본문의 크기를 값는 Content-Length헤더를 가지고 있어야 합니다.&lt;/p&gt;

&lt;p&gt;만약 클라이언트가 실제 엔터티 본문의 크기와 Content-Length의 값이 다른 응답을 받거나, Content-Length 자체를 받지 못했다면 정확한 길이를 다시 물어봐야 합니다. 이때, 발신자가 캐시 프록시였다면 응답을 캐시하면 안됩니다.&lt;/p&gt;

&lt;h4 id=&quot;473-커넥션-끊기의-허용-재시도-멱등성&quot;&gt;4.7.3. 커넥션 끊기의 허용, 재시도, 멱등성&lt;/h4&gt;

&lt;p&gt;앞서 몇번 언급했듯이 커넥션은 에러가 없더라도 언제든지 끊길 수 있습니다. HTTP 어플리케이션들은 이에 대한 대비가 되어있어야 합니다.&lt;/p&gt;

&lt;p&gt;클라이언트의 경우 커넥션이 끊겨 실패한 요청을 다시 보낼 수 있어야 합니다. 이 상황은 파이프라인 커넥션에선 좀 더 복잡해집니다. 응답 대기중인 요청은 큐에 쌓여있지만 모든 응답이 오기전에 커넥션이 끊기면 어느 요청들이 처리됐는지 알수 없습니다.&lt;/p&gt;

&lt;p&gt;이런 상황에서 요청이 어떤 종류의 요청이었는지는 중요합니다. 몇번을 보내도 서버에 영향을 미치지 않는 요청들(앞서 Safe Method라 배운 GET, HEAD)이나 한 번 실행됐는지, 여러번 실행됐는지에 상관없이 같은 결과를 반환하는 요청들(PUT, DELETE 와 같은)은 여러번 보내도 상관없습니다. 이런 부류의 요청을 ‘멱등(idempotent)한’ 요청이라고 합니다.&lt;/p&gt;

&lt;p&gt;POST와 같은 멱등하지 않은 요청을 파이프라인을 통해 요청하다 커넥션이 예상치 못하게 끊어진다면, POST 요청을 다시 보내도 될지 말지 결정할 수 없습니다. 이런 멱등하지않은 요청은 파이프라인 커넥션을 통해 요청하면 안됩니다.&lt;/p&gt;

&lt;h4 id=&quot;474-우아한-커넥션-끊기&quot;&gt;4.7.4. 우아한 커넥션 끊기&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;

&lt;p&gt;커넥션은 어깨너머 들은 지식을 정리하기 보단 새로운 지식으로 받아들이는 시간이었던 것 같습니다. 하지만 이 책의 학습 목표는 이런 웹 서비스가 동작하는데에 대한 깊고 근본적인 지식을 탐구하는 것이기 때문에 매우 재밌습니다! :smiley:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTTP 메시지</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C3/"/>
   <updated>2020-03-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드3</id>
   <content type="html">&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;
&lt;p&gt;앞서 HTTP는 ‘배달원’이라고 했습니다. 이번장에서 알아볼 HTTP 메시지는 배달원이 보내는 소포와 같은 역할을 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;31-메시지의-흐름&quot;&gt;3.1. 메시지의 흐름&lt;/h3&gt;

&lt;p&gt;HTTP 메세지는 메세지에 대한 메타 정보와 데이터로 이루어진 데이터의 블록입니다. HTTP 메세지는 클라이언트, 서버, 프록시 사이를 흐릅니다.&lt;/p&gt;

&lt;h4 id=&quot;311-메시지는-원-서버-방향을-인바운드로-하여-송신된다&quot;&gt;3.1.1. 메시지는 원 서버 방향을 인바운드로 하여 송신된다&lt;/h4&gt;

&lt;p&gt;인바운드, 아웃바운드는 DB서버를 열어주기 위해 방화벽을 설정해봤다면 한번쯤 마주쳐봤을 용어입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인바운드 :  HTTP의 요청 방향으로 가는 것 (클라이언트 -&amp;gt; 서버)&lt;/li&gt;
  &lt;li&gt;아웃바운드 : HTTP 요청이 온 방향(응답방향)으로 가는 것 (서버 -&amp;gt; 클라이언트)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;312-다운스트림으로-흐르는-메시지&quot;&gt;3.1.2. 다운스트림으로 흐르는 메시지&lt;/h4&gt;

&lt;p&gt;다운스트림, 업스트림은 인바운드, 아웃바운드와는 별개로 메세지가 흐르는 방향을 말합니다. 모든 메세지는 다운스트림으로 흐릅니다.&lt;/p&gt;

&lt;p&gt;예를들어, 아래 그림처럼 클라이언트의 요청이 프록시1, 프록시2, 프록시3을 거쳐 서버로 간다면, 인바운드에서 프록시2는 프록시1의 다운스트림이자 프록시3의 업스트림입니다.
 반대로 서버에서 클라이언트로 응답이가는 아웃바운드에선 프록시2는 프록시3의 다운스트림이자 프록시1의 업스트림이 됩니다.&lt;/p&gt;

&lt;p&gt;그림요망&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;32-메시지의-각-부분&quot;&gt;3.2. 메시지의 각 부분&lt;/h3&gt;

&lt;p&gt;메세지는 기본적으로 [ 시작줄 - 헤더 블록 - 본문 ] 으로 이루어져 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시작줄 : 메세지가 어떤 메세지인지를 알려줍니다. (요청인지 응답인지, 요청 및 응답의 상태는 어떤지, HTTP 버전이 무엇인지 등)&lt;/li&gt;
  &lt;li&gt;헤더 블록 : HTTP메세지에 대한 속성들을 가지고 있습니다. (본문의 길이, 인코딩 등..)&lt;/li&gt;
  &lt;li&gt;본문 : 실제 전송할 데이터가 담기는 부분이며, 없을 수도 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;시작줄과 헤더블록은 CRLF(Carriage Return + Line Feed)로 나뉘어집니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CR (Carriage Return) : 커서를 행의 맨 좌측으로 이동 (ASCII 13번이며, \r 라고도 표현함)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LF (Line Feed) : 커서를 아래 행으로 내림 (ASCII 10번이며, \n 라고도 표현함)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;HTTP명세에 등록된 시작줄과 헤더블록을 나누는 문자는 CRLF(\r\n)이지만 견고한 어플리케이션을 만들기 위해선 \n만으로도 시작줄과 헤더블록을 나누도록 해야 합니다. 오래되거나 잘못 만들어진 HTTP 어플리케이션들은 \r\n가 아닌 \n로 시작줄과 헤더블록을 구분하기 때문입니다.&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;321-메시지-문법&quot;&gt;3.2.1. 메시지 문법&lt;/h4&gt;

&lt;p&gt;요청 메세지의 형식은 다음과 같습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;메서드&gt; &lt;요청URL&gt; &lt;버전&gt;     GET /test/hi-there.txt HTTP/1.1
&lt;헤더&gt;                                          Accept: text/*
                                                     Host: www.joes-hardware.com

&lt;엔터티 본문=&quot;&quot;&gt;                             생략  
&lt;/엔터티&gt;&lt;/헤더&gt;&lt;/버전&gt;&lt;/요청URL&gt;&lt;/메서드&gt;
&lt;/blockquote&gt;

&lt;p&gt;응답 메세지의 형식은 다음과 같습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;버전&gt; &lt;상태코드&gt; &lt;사유 구절=&quot;&quot;&gt;  HTTP/1.0 200 OK
&lt;헤더&gt;                                             Content-type: text/plain
                                                         Content-length: 19

&lt;엔터티 본문=&quot;&quot;&gt;                                Hi, I'm message!
&lt;/엔터티&gt;&lt;/헤더&gt;&lt;/사유&gt;&lt;/상태코드&gt;&lt;/버전&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;메서드 : 클라이언트 입장에서 서버가 수행하길 바라는 동작 (GET, POST, PUT, DELETE …)&lt;/li&gt;
  &lt;li&gt;요청 URL : 요청 리소스의 URL 경로&lt;/li&gt;
  &lt;li&gt;버전 : 메세지에서 사용중인 HTTP 버전&lt;/li&gt;
  &lt;li&gt;상태코드 : 요청의 결과에 대한 상태를 설명하는 세자리 숫자.&lt;/li&gt;
  &lt;li&gt;사유 구절(reason - phrase) : 상태 코드를 설명하는 문구. 정해진 규칙은 없지만 정해진 상태코드의 의미와 맞아야 한다.&lt;/li&gt;
  &lt;li&gt;헤더 : 메세지의 속성들을 설명해주는 ‘이름:값’의 쌍들. 헤더들의 마지막은 빈줄(CRLF)로 끝내 엔터티 본문과 구분지어 준다.&lt;/li&gt;
  &lt;li&gt;엔터티 본문 : 메세지가 전달해야 할 데이터 블록. 생략 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;엔터티 본문이 생략되더라고 헤더의 마지막은 빈줄(CRLF)로 끝나야 합니다. &lt;strong&gt;하지만 많은 HTTP 어플리케이션들이 엔터티 본문이 없으면 헤더의 마지막에 CRLF를 빠뜨립니다. 이런 어플리케이션들과도 호환될 수 있게 HTTP 어플리케이션을 설계해야 합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;322-시작줄&quot;&gt;3.2.2. 시작줄&lt;/h4&gt;

&lt;p&gt;##### &lt;strong&gt;요청에서 시작줄&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;메서드, 요청 URL, 버전으로 이루어져 있으며 서버에게 어떤 동작을 수행해줄 것인가를 알려줍니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;응답에서 시작줄&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;버전, 상태코드, 사유구절로 이루어져 있으며 수행에 대한 결과를 알려줍니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;메서드&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP 명세에선 아래와 같은 9개의 요청 메서드를 정의하고 있습니다.(https://developer.mozilla.org/ko/docs/Web/HTTP/Methods 추가 참고) 하지만 &lt;strong&gt;모든 HTTP 어플리케이션이 아래의 모든 메서드를 구현한 것은 아니며, 어떤 HTTP 어플리케이션은 HTTP명세에 없는 새로운 메서드를 추가했을 수도 있습니다.(확장 메서드)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;메서드&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GET&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서버에서 어떤 문서를 가져온다. 데이터를 받기만 하는 요청.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HEAD&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GET메서드 요청과 동일한 응답을 요구하지만 응답의 엔터티 본문을 포함하지 않는다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;POST&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청 리소스에 필요한 데이터를 보낼때 쓰인다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PUT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청 메세지의 엔터티 본문을 서버에 저장한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DELETE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;특정 리소스를 삭제한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CONNECT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청 리소스를 갖는 서버와 터널을 맺음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;OPTIONS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서버가 어떤 메서드를 수행할 수 있는지 체크한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TRACE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;메세지가 여러 프록시를 거쳐 서버에 도달하는 과정을 추적한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PATCH&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;오청 리소스의 부분만 수정하는데 쓰인다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;상태코드&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;요청의 처리결과를 3자리 숫자로 표현하며, 숫자의 가장 앞자리를 기준으로 처리결과의 분류가 나뉩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;전체 범위&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정의된 범위&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;분류&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100~199&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100~101&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정보&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200~299&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200~206&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;성공&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300~399&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300~305&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;리다이렉션&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400~499&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400~415&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;클라이언트 에러&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500~599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500~505&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서버 에러&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;사용가능한 범위에 비해 실제로 HTTP명세에 공식적으로 정의된 범위는 적습니다. 메서드와 마찬가지로 각각의 HTTP 어플리케이션에서 HTTP명세에 없는 새로운 코드를 정의할 수 있지만 코드의 분류에 맞게 정의하는 것이 바람직 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;사유 구절&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;상태 코드는 프로그램들이 읽기위한 데이터였다면 사유 구절은 사람들이 읽기위한 상태 코드를 설명하는 문구입니다. 따로 정의된 규칙은 없지만 상태코드를 설명할 수 있어야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;버전 번호&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP 메세지를 보낸 어플리케이션이 어떤 버전의 HTTP를 따르는지를 알려줍니다. 두 가지를 유의해야 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;버전 번호는 어플리케이션이 지원하는 가장 높은 버전의 HTTP를 알려주는 것이지 해당 HTTP메세지를 그 버전의 HTTP로 해석해 달라는 것이 아닙니다. 
예를들어, 응답이 HTTP/1.1로 온 것은 응답을 보낸 어플리케이션이 HTTP/1.1 까지 이해할 수 있다는 것이지 이 메세지를 HTTP/1.1로 해석해 달라는 것이 아닙니다.&lt;/li&gt;
  &lt;li&gt;버전 번호는 소수점이 아니라 [정수.정수] 입니다. HTTP/2.22 는 HTTP/2.3 보다 상위 버전입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;323-헤더&quot;&gt;3.2.3. 헤더&lt;/h4&gt;

&lt;p&gt;HTTP 명세에서 정의하는 헤더들이 있고 메서드, 상태코드와 마찬가지로 각 어플리케이션에서 새로운 헤더를 정의할 수 있습니다.
 헤더의 종류에 따라 아래와 같이 나뉠 수 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;분류&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;일반 헤더&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청, 응답 모두에서 쓰일 수 있는 헤더(ex - Date:Tue, 3 Oct 1997 …)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청 헤더&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요청에 대한 부가정보를 제공하는 헤더(ex - Accept:text/html)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;응답 헤더&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;응답에 대한 부가정보를 제공하는 헤더(ex - Server: Tiki-Hut/1.0)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Entity 헤더&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;엔터티 본문에 대한 부가정보를 제공하는 헤더(ex - Content-Type: text/html)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;확장 헤더&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;각 어플리케이션이 정의한 HTTP 명세에 없는 헤더&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;헤더의 가독성을 위해 하나의 헤더를 개행할 수 있는데, 이때 아래 줄엔 하나의 스페이스 혹은 탭이 와야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Content-Length: 8572
Server: Test Server
	Version 1.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;324-엔터티-본문&quot;&gt;3.2.4. 엔터티 본문&lt;/h4&gt;

&lt;p&gt;HTTP메시지가 전송할 데이터이며 이미지, 비디오, HTML, 신용카드 트랜잭션, email 등 다양한 데이터를 포함할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;325-버전-09-메시지&quot;&gt;3.2.5. 버전 0.9 메시지&lt;/h4&gt;

&lt;p&gt;사실 지금까진 모드 HTTP/1.0 이상에 대해서만 알아봤습니다. 그 이전 버전인 HTTP/0.9의 메세지는 아래 그림과 같이 요청은 오직 요청 메서드와 URL만, 응답은 엔터티 본문만 존재합니다. HTTP/0.9는 나중에 맞닥드리게 되면 그때 추가로 살펴보는 것이 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;33-메서드&quot;&gt;3.3. 메서드&lt;/h3&gt;

&lt;p&gt;널리 사용되는 기본적인 메서드들에 대해 알아볼 것입니다. 다시 한 번 말씀드리지만 모든 어플리케이션이 모든 메서드들을 지원하는 것은 아닙니다. 웹 프레임워크를 사용할때 해당 웹 프레임워크는 어떤 메서드들을 지원하는지 아는게 중요할 것 같습니다.&lt;/p&gt;

&lt;h4 id=&quot;331-안전한-메서드safe-method&quot;&gt;3.3.1. 안전한 메서드(Safe Method)&lt;/h4&gt;

&lt;p&gt;Safe Method는 결과적으로 &lt;strong&gt;서버에 어떤 리소스의 변화도 줄 수 없는 메서드&lt;/strong&gt;들을 말합니다. 일반적으론 GET과 HEAD메서드가 Safe Method에 속합니다.&lt;/p&gt;

&lt;p&gt;하지만 Safe Method 자체가 Safe를 보장하진 않습니다. 그건 모두 우리 개발자에게 달렸습니다. HTTP에 대한 이해가 부족해 GET요청에도 리소스를 수정 및 삭제 하게 만든 어플리케이션이 있다면 조금 문제가 있는 어플리케이션일것 같습니다.&lt;/p&gt;

&lt;h4 id=&quot;332-get&quot;&gt;3.3.2. GET&lt;/h4&gt;

&lt;p&gt;서버에서 리소스를 가져오기 위해 사용됩니다. HTTP/1.1을 준수하기 위해 필요한 메서드중 하나입니다.&lt;/p&gt;

&lt;h4 id=&quot;333-head&quot;&gt;3.3.3. HEAD&lt;/h4&gt;

&lt;p&gt;GET과 동일하게 행동하지만 엔터티 본문을 포함하지 않습니다. 시작줄과 헤더만 가져와 아래와 같은 사항들을 알아 낼 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;리소스 전체를 가져오지 않고 리소스에 대한 정보를 알아냄(타입, 크기 등..)&lt;/li&gt;
  &lt;li&gt;리소스의 존재 여부를 알 수 있음&lt;/li&gt;
  &lt;li&gt;리소스의 변경 여부를 알 수 있음&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;요청할 리소스의 크기가 큰 경우에 유용하게 사용할 수 있을 것 같습니다.&lt;/p&gt;

&lt;p&gt;HTTP/1.1 준수를 위해 필요한 메서드 중 하나이며, &lt;strong&gt;개발자들은 HEAD의 헤더가 GET의 헤더와 정확히 일치하도록 유의해하며 개발해야 합니다.&lt;/strong&gt;(웹 프레임워크에 다시 한 번 감사함을 느낍니다.)&lt;/p&gt;

&lt;h4 id=&quot;334-put&quot;&gt;3.3.4. PUT&lt;/h4&gt;

&lt;p&gt;PUT 메서드는 요청의 본문을 요청 URL 대로 서버에 저장하는 역할을 합니다. 이미 존재하는 URL이라면 수정을 합니다. 아래 그림과 같이 말이죠.&lt;/p&gt;

&lt;p&gt;그림 요망&lt;/p&gt;

&lt;h4 id=&quot;335-post&quot;&gt;3.3.5. POST&lt;/h4&gt;

&lt;p&gt;POST메서드는 서버에 입력 데이터를 전송하기 위해 설계 됐습니다. HTML을 다뤄봤다면 &amp;lt;form&amp;gt;태그에서 모두 본 적이 있을 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;336-trace&quot;&gt;3.3.6. TRACE&lt;/h4&gt;

&lt;p&gt;우리의 요청은 서버로 가기전에 여러개의 프록시들을 거칠 수 있습니다. 클라이언트의 입장에서 내가 보낸 요청이 서버에게 어떻게 받아들였는지를 알고 싶을때(프록시에서 요청이 수정될 수 있으므로) 사용하는 것이 TRACE 메서드입니다.&lt;/p&gt;

&lt;p&gt;TRACE 메서드는 요청의 목적지인 서버까진 일반적인 요청과 같이 진행됩니다. 서버에서 클라이언트로 응답을 돌려주는 과정에서 부터 loopback 진단이 시작됩니다. 아래 그림과 같이 응답이 오며 어떤 요청에 대한 응답인지를 기록해 클라이언트에서 서버로 가면서 요청들이 어떻게 수정됐는지 진단 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;그림요망&lt;/p&gt;

&lt;p&gt;요청들의 기록은 응답의 엔터티 본문에 담겨 최종적으로 클라이언트에게 전달됩니다.&lt;/p&gt;

&lt;p&gt;TRACE메서드는 한 가지 취약점을 가지고 있습니다. 몇몇 프록시들은 자신이 받은 요청 메서드에 따라 다르게 처리하기도 합니다. 예를들어 어떤 프록시는 POST요청은 바로 서버로 전달하지만 GET 요청은 웹 캐시 프록시로 먼저 보냅니다. 하지만 TRACE메서드를 사용하면 이와 같은 처리를 하지 못합니다.&lt;/p&gt;

&lt;p&gt;TRACE 메서드 자체로는 해당 요청이 POST처럼 처리될지, GET처럼 처리될 지 알려주는 메커니즘을 제공하지 않습니다. 이를 어떻게 다룰 지는 각 프록시들이 결정하게 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;337-options&quot;&gt;3.3.7. OPTIONS&lt;/h4&gt;

&lt;p&gt;OPTIONS 메소드는 간단합니다. 웹 서버에게 어떤 종류의 메서드를 지원하는 지 물어보는 역할을 합니다. 아래 그림과 같이 말이죠.&lt;/p&gt;

&lt;h4 id=&quot;338-delete&quot;&gt;3.3.8. DELETE&lt;/h4&gt;

&lt;p&gt;DELETE 메서드는 말 그대로 리소스의 삭제를 요청합니다. 하지만 DELETE 메서드를 보냈다고 해서 리소스의 삭제가 보장되는건 아닙니다.&lt;/p&gt;

&lt;h4 id=&quot;339-확장-메서드&quot;&gt;3.3.9. 확장 메서드&lt;/h4&gt;

&lt;p&gt;확장 메서드는 HTTP 명세에 정의되지 않은 메서드입니다. 아래는 확장 메서드의 사례로, WebDAV HTTP 확장입니다.(19장에서 더 자세히 알아볼 것입니다.)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;메서드&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LOCK&lt;/td&gt;
      &lt;td&gt;사용자가 리소스를 잠글 수 있게 해준다. 예를 들어, 문서를 편집하는 동안 다른 사람이 동시에 같은 문서를 편집하지 못하도록 문서를 잠글 수 있다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MKCOL&lt;/td&gt;
      &lt;td&gt;사용자가 문서를 생성할 수 있게 해준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COPY&lt;/td&gt;
      &lt;td&gt;서버에 있는 리소스를 복사한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MOVE&lt;/td&gt;
      &lt;td&gt;서버에 있는 리소스를 옮긴다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;34-상태-코드&quot;&gt;3.4. 상태 코드&lt;/h3&gt;

&lt;h4 id=&quot;341-100199-정보성-상태-코드&quot;&gt;3.4.1. 100~199: 정보성 상태 코드&lt;/h4&gt;

&lt;p&gt;HTTP/1.1 부터 도입되어서 실제로 정의된 코드는 100, 101 밖에 없습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;상태코드&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;사유 구절&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;의미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Continue&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;요청의 시작 부분 일부가 받아들여졌으며, &lt;br /&gt;클라이언트는 나머지를 계속 이어서 보내야 함을 의미한다. &lt;br /&gt;이것을 보낸 후, 서버는 반드시 요청을 받아 응답해야 한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;101&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Switching Protocols&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;클라이언트가 Upgrade 헤더에 나열한 것중 하나로, &lt;br /&gt;서버가 프로토콜을 바꾸었음을 의미한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;101 코드는 간단하다. 하지만 100 코드는 더 자세히 알아볼 필요가 있습니다.&lt;/p&gt;

&lt;p&gt;100 코드는 클라이언트에서 서버로 엔터티 본문을 전송하기 전에, 서버가 그 엔터티 본문을 받아들일 것인지 확인하는 작업을 최적화 하기 위해 도입됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;클라이언트 - 100 Continue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;상태코드는 응답 메세지에서 볼 수 있는 것입니다. 클라이언트 측에서 100 Continue 응답을 받고 싶다면 “Expect : 100-continue” 헤더를 보내면 됩니다. “Expect : 100-continue” 헤더를 받은 서버는 클라이언트쪽에서 엔터티를 보낼 것이라 생각하게 됩니다.&lt;/p&gt;

&lt;p&gt;서버가 100 Continue를 보냈다면 클라이언트는 엔터티 전송을 시작할 것입니다. 하지만 100코드는 HTTP/1.1 부터 도입된 코드이기 때문에 &lt;strong&gt;아직 서버 쪽에서 100 Continue를 보내지 못할 수도 있습니다.&lt;/strong&gt; 이때 클라이언트는 계속 기다리는게 아니라 &lt;strong&gt;약간의 타임아웃 이후 100 Continue가 없다면 그냥 엔터티를 전송해야 합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;서버 - 100 Continue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서버가 “Expect : 100-continue” 헤더를 받는다면, 100 Continue 혹은 에러 코드로 응답을 해야 합니다.&lt;/p&gt;

&lt;p&gt;서버가 100 Continue를 보내기 전에 클라이언트쪽에서 엔터티의 일부나 전체를 받았다면 100 Continue를 보낼 필요 없이 요청에 대한 최종 응답을 보내야 합니다.&lt;/p&gt;

&lt;p&gt;서버가 Expect 요청을 받았지만 엔터티 본문을 읽기 전에 요청을 끝내기로 결정했다면 서버는 그냥 응답을 보내고 연결을 닫아서는 안됩니다. 그렇게 하면 클라이언트가 응답을 받을 수 없습니다.(이 부분은 4장을 읽고 다시 부연 설명하겠습니다.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;프록시 - 100 Continue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;클라이언트와 서버 사이엔 프록시가 있을 수 있습니다. 그럼 “Expect : 100-continue” 헤더 요청을 프록시가 받는다면 어떻게 될까요?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;next-hop 서버가 HTTP/1.1 을 따르거나 어떤 버전을 따르는지 모를 때 : “Expect : 100-continue” 헤더 요청을 포함해 다음으로 전달.&lt;/li&gt;
  &lt;li&gt;next-hop 서버가 HTTP/1.1 이전 버전의 HTTP를 따를 때 : 417 Expectation Failed 에러를 뱉어야 함&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그런데, 클라이언트는 Expect 요청을 보내지 않았지만 프록시가 클라이언트를 대신해 서버로 “Expect : 100-continue” 헤더를 포함시켜 요청을 보낼 수도 있습니다. 이때 프록시가 100 Continue 응답을 받았더라도 100 Continue응답을 클라이언트에 전하면 안됩니다. 클라이언트는 100 Continue응답을 어떻게 다룰 지 모를수 있기 때문이죠.&lt;/p&gt;

&lt;h4 id=&quot;342-200299-성공-상태-코드&quot;&gt;3.4.2. 200~299: 성공 상태 코드&lt;/h4&gt;

&lt;p&gt;200번대 상태코드는 요청이 성공했음을 나타내고, 요청의 종류에 따라 성공 코드가 달라집니다.&lt;/p&gt;

&lt;p&gt;7가지의 성공 상태 코드가 정의되어 있고 양이 많은 관계로 [여기][]에 따로 기록해두겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;343-300399-리다이렉션-상태-코드&quot;&gt;3.4.3. 300~399: 리다이렉션 상태 코드&lt;/h4&gt;

&lt;p&gt;300번대 상태코드는 리다이렉션을 뜻하면 다음과 같은 경우에 사용됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트가 요청한 리소스가 옮겨지거나 변경됐을 때 요청한 리소스를 대신할 다른 대안 응답을 제시
    &lt;ul&gt;
      &lt;li&gt;Location 헤더에 새로운 위치를 담아 응답하며, 대부분의 브라우저는 Location헤더를 읽어 옮겨진 위치로 다시 요청한다. (ex - www.java.sun.com 으로 요청을 보내면 301 코드와 함께 Location: http://www.oracle.com/technetwork/java/index.html 헤더가 담겨오며, 브라우저는 Location으로 리다이렉트 한다.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리소스에 대한 클라이언트의 로컬 복사본이 원래 서버와 비교했을 때 유효한지 확인 할 때
    &lt;ul&gt;
      &lt;li&gt;요청할 때 If-Modified-Since: ~~ 같은 헤더와 같이 사용해 해당 시간 이후에 수정된 리소스면 가져올 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;7가지의 라다이렉션 상태 코드가 정의되어 있고 [여기][]에 따로 기록해두겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;344-400499-클라이언트-에러-상태-코드&quot;&gt;3.4.4. 400~499: 클라이언트 에러 상태 코드&lt;/h4&gt;

&lt;p&gt;클라이언트측의 잘못으로 리소스를 가져오지 못할때를 알려주는 상태코드 입니다. 가장 흔한 400번대 에러는 존재하지 않는 URL을 요청하는 것으로 404 Not Found는 개발을 한다면 누구나 마주쳤을법한 에러코드 입니다.&lt;/p&gt;

&lt;p&gt;로그인등의 권한문제로 인해 발생하는 401 Unauthorized 역시 종종 볼 수 잇는 에러코드 입니다.&lt;/p&gt;

&lt;p&gt;18개의 에러코드가 정의되어 있으며 [여기][]에 기록해두겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;345-500599-서버-에러-상태-코드&quot;&gt;3.4.5. 500~599: 서버 에러 상태 코드&lt;/h4&gt;

&lt;p&gt;500번대 에러는 반대로 서버측의 잘못으로 요청을 처리하지 못하는 경우입니다. 서버 자체의 문제일 때도 있고 프록시, 게이트웨이 같은 서버의 보조 구성요소에서 발생한 에러일 수도 있습니다.&lt;/p&gt;

&lt;p&gt;6가지의 에러코드가 정의되어 있고 [여기][]에 기록해두었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;35-헤더&quot;&gt;3.5. 헤더&lt;/h3&gt;

&lt;p&gt;앞서 말했듯이 헤더는 메세지의 속성을 설명해주며 아래와 같이 크게 5가지로 분류 됩니다.
|    분류     |                             설명                             |
| :———: | :———————————————————-: |
|  일반 헤더  | 요청, 응답 모두에서 쓰일 수 있는 헤더(ex - Date:Tue, 3 Oct 1997 …) |
|  요청 헤더  | 요청에 대한 부가정보를 제공하는 헤더(ex - Accept:text/html)  |
|  응답 헤더  | 응답에 대한 부가정보를 제공하는 헤더(ex - Server: Tiki-Hut/1.0) |
| Entity 헤더 | 엔터티 본문에 대한 부가정보를 제공하는 헤더(ex - Content-Type: text/html) |
|  확장 헤더  |        각 어플리케이션이 정의한 HTTP 명세에 없는 헤더        |&lt;/p&gt;

&lt;h4 id=&quot;351-일반-헤더&quot;&gt;3.5.1. 일반 헤더&lt;/h4&gt;

&lt;p&gt;일반 헤더는 요청, 응답 모두에서 유용한 기본적인 속성들을 가리킵니다.&lt;/p&gt;

&lt;p&gt;일반 캐시 헤더 : HTTP/1.0에서 도입된 헤더로, 요청시 마다 매번 서버로 가지 않게 로컬 복사본으로 캐시할 수 있게 해주는 헤더입니다. 최신 HTTP버전엔 매우 많은 캐시 헤더를 가지고 있습니다.&lt;/p&gt;

&lt;p&gt;대표적인 헤더들은 [여기][]에 모아뒀습니다.&lt;/p&gt;

&lt;h4 id=&quot;352-요청-헤더&quot;&gt;3.5.2. 요청 헤더&lt;/h4&gt;

&lt;p&gt;요청헤더는 요청시에만 사용되고 서버가 클라이언트에게 더 나은 응답을 주기 위해 사용됩니다.&lt;/p&gt;

&lt;p&gt;Accept 관련 헤더 : Accept, Accept-Charset, Accept-Language 등의 헤더를 통해 서버에게 클라이언트 자신의 선호와 능력을 알려줄 수 있습니다.&lt;/p&gt;

&lt;p&gt;조건부 요청 헤더 : 앞서 100 Continue 코드에서 언급된 Expect 헤더나 300 코드에서 언급된 If-Modified-Since 헤더 같이 클라이언트는 조건을 붙여 서버에게 요청을 할 수 있습니다. 이때 사용 되는 헤더가 조건부 헤더 입니다.&lt;/p&gt;

&lt;p&gt;요청 보안 헤더 : HTTP는 자체적으로 간단한 인증 요구/응답 체계를 가지고 있습니다. 이는 HTTP 트랜잭션을 더 안전하게 만들어 줍니다. 14장에서 자세히 알아볼 것입니다. Authorization, Cookie와 같은 헤더가 이때 사용되는 헤더 입니다.&lt;/p&gt;

&lt;p&gt;프록시 요청 헤더 : 프록시가 많아지며 프록시와 관련한 헤더 역시 등장했습니다. 6장에서 자세히 알아봅니다. Max-Forwards, Proxy-Connection 등의 헤더가 있습니다.&lt;/p&gt;

&lt;p&gt;대표적인 헤더들은 [여기][]에 모아뒀습니다.&lt;/p&gt;

&lt;h4 id=&quot;353-응답-헤더&quot;&gt;3.5.3. 응답 헤더&lt;/h4&gt;

&lt;p&gt;응답 헤더는 응답시에 사용되어 클라이언트가 응답을 다루기 쉽게 도와줍니다.&lt;/p&gt;

&lt;p&gt;협상 헤더 : 서버에 프랑스어, 독일어로 번역된 같은 HTML문서가 있는 것과 같이 한 요청에 대해 여러 선택지가 있을 경우 HTTP/1.1은 그것들 중 어떤 표현을 택할 것인지 협상하도록 지원해준다. 17장에서 자세히 살펴보며,  Accept-Ranges, Vary와 같은 헤더가 사용됩니다.&lt;/p&gt;

&lt;p&gt;응답 보안 헤더 : 요청헤더에서 요청 보안 헤더가 있었듯이 응답에서도 응답 보안헤더가 있습니다. 14장에서 자세히 살펴보며 Proxy-Authenticate, Set-Cookie와 같은 헤더가 있습니다.&lt;/p&gt;

&lt;p&gt;대표적인 헤더들은 [여기][]에 모아뒀습니다.&lt;/p&gt;

&lt;h4 id=&quot;354-엔터티-헤더&quot;&gt;3.5.4. 엔터티 헤더&lt;/h4&gt;

&lt;p&gt;엔터티 헤더는 요청, 응답 모두 등장할 수 있으며 엔터티에 대한 광범위한 부가정보를 제공합니다.&lt;/p&gt;

&lt;p&gt;콘텐츠 관련 헤더 : Content-Base, Content-Language, Content-Location 과 같이 콘텐츠 헤더는 콘텐츠에 대한 구체적인 정보를 제공해줍니다.&lt;/p&gt;

&lt;p&gt;엔터티 캐싱 헤더 : 일반 헤더에서 언급된 일반 캐싱 헤더는 언제, 어떻게 캐시가 되어야 하는지 알려줬다면, 엔터티 캐싱 헤더는 리소스의 사본이 유효한지, 캐시된 리소스가 더 이상 유효하지 않게 되는 시점은 언제인지 등 엔터티 캐싱에 대한 정보를 제공합니다. 7장에서 자세히 살펴볼 것입니다.&lt;/p&gt;

&lt;p&gt;대표적인 헤더들은 [여기][]에 모아뒀습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;

&lt;p&gt;ajax 보낼때 말곤 헤더는 관찰만 했지 직접 조작해보진 않았습니다. 이렇게 헤더의 종류가 많고 다양하다니! 그리고 3장째 보고 있는데 가장 무서운 점은 모두 뒷장에서 더 자세히 설명해준다는 것입니다. (얼마나 자세히 설명해주시려고… :cry:)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>URL과 리소스</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C2/"/>
   <updated>2020-03-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드2</id>
   <content type="html">&lt;hr /&gt;

&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;
&lt;p&gt;앞 장에서 리소스, URI, URL, URN에 대해 간략히 살펴봤었습니다. 이번 장에선 URL과 리소스에 대해 자세히 알아볼 것입니다.&lt;/p&gt;

&lt;p&gt;특정한 하나를 식별해야 하는 것에는 모두 식별하는 체계가 있습니다. 특정한 집을 식별하기 위해 사용되는 주소, 책을 식별하기 위한 ISBN번호, 사람을 식별하기 위한 주민등록번호 등…&lt;/p&gt;

&lt;p&gt;URI는 인터넷 상에서 리소스를 식별하기 위한 체계입니다. 그리고 같은 주소를 식별하는데 지번주소, 도로명주소가 있듯이 리소스를 식별하는데에도 URL과 URN이 있습니다.&lt;/p&gt;

&lt;p&gt;URN은 아직 개발중이고 대중적으로 사용되지 않기 때문에 URL에 대해서 집중적으로 알아볼 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;21-인터넷의-리소스-탐색하기&quot;&gt;2.1. 인터넷의 리소스 탐색하기&lt;/h3&gt;
&lt;p&gt;몇 가지 URL의 사례를 살펴보겠습니다.
 1) http://www.joes-hardware.com/seasonal/index-fall.html
 여기서 http는 ‘스킴’이라고 합니다. 리소스에 접근하는 방법을 말해줍니다.
 www.joes-hardware.com 은 서버의 위치 입니다. 리소스가 어느 서버에 호스팅 되었는지 알려줍니다.
 /seasonal/index-fall.html은 서버 내의 리소스 경로 입니다.&lt;/p&gt;

&lt;p&gt;2) mailto:president@whitehouse.gov
 위 URL의 mailto는 이메일 전송 프로토콜 입니다. 다른 URL들과는 형식이 조금 다릅니다.&lt;/p&gt;

&lt;p&gt;3) ftp://ftp.lots-o-books.com/pub/complete-price-list.xls
 ftp(File Transfer Protocol)는 파일 전송 프로토콜이고 ftp.lots-o-books.com는 서버 주소를, /pub/complete-price-list.xls는 서버 내 리소스 위치 입니다.&lt;/p&gt;

&lt;p&gt;4) rtsp://www.joes-hardware.com:554/interview/cto_video
 rtsp(Real Time Streaming Protocol)는 스트리밍 전송 프로토콜입니다.&lt;/p&gt;

&lt;p&gt;대부분의 URL은 ‘스킴://서버위치/리소스경로’로 이루어져 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;211-url이-있기-전-암흑의-시대&quot;&gt;2.1.1. URL이 있기 전 암흑의 시대&lt;/h4&gt;
&lt;p&gt;‘스킴://서버위치/리소스경로’의 어느정도 통일된 URL을 사용하게 된건 그리 오래되지 않았습니다. URL이 있기 이전엔 애플리케이션마다 리소스를 찾는 방법이 매우 다양했습니다.&lt;/p&gt;

&lt;p&gt;책에 나온 사례를 보겠습니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;URL이 있기 전에 친구와 complete-catalog.xls이라는 파일을 공유하려고 했다면 이렇게 말해야 했을 것이다. “ftp.joes-hardware.com에 FTP로 접속해. 익명 사용자로 로그인한 다음 비밀번호로 네 이름을 입력해. pub 디렉토리로 이동한 다음, 바이너리 형식으로 전환해. 이제 complete-catalog.xls란 이름의 파일을 너의 로컬 파일 시스템에 내려 받은 다음 보면 될 거야.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;URL이 없던 시절엔 이렇게 직접 서버에 커넥션을 맺고, 디렉터리를 찾아서 리소스를 받아왔다고 합니다. URL과 웹 브라우저가 발달된 지금은 아래와 같이 진행됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;위의 복잡한 설명 대신에, 친구에게 브라우저에서 “ftp://frp.lots-o-books.com/pub/complete-catalog.xmls 를 열어봐” 라고 말하면 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다시 한 번 선배 개발자님들이 존경스러워 지는 순간입니다.&lt;/p&gt;

&lt;p&gt;그리고 사실 요즘 웹 브라우저를 사용한다면 ftp를 사용할 필요도 없습니다. 저도 개발을 시작하기 전엔 URL에 http, https 말곤 다른 프로토콜이 들어가는걸 본적이 없으니까요. http 프로토콜로 파일 다운을 요청해도 1장에서 설명했고 뒤에서 설명할 게이트웨이, 프록시 등이  ftp 통신을 대신 해줍니다.&lt;/p&gt;

&lt;h3 id=&quot;22-url-문법&quot;&gt;2.2. URL 문법&lt;/h3&gt;
&lt;p&gt;URL의 문법은 스킴(앞서 본 http, ftp, mailto 등..)에 따라 달라집니다. 하지만 대부분 스킴의 URL문법은 일반적인 URL 문법을 따릅니다. 몇몇 스킴을 제외한다면 말이죠.&lt;/p&gt;

&lt;p&gt;일반적인 URL 문법은 아래와 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;스킴&gt;://&lt;사용자이름&gt;:&lt;비밀번호&gt;@&lt;호스트&gt;:&lt;포트&gt;/&lt;경로&gt;;&lt;파라미터&gt;?&lt;질의&gt;#&lt;프래그먼트&gt;
&lt;/프래그먼트&gt;&lt;/질의&gt;&lt;/파라미터&gt;&lt;/경로&gt;&lt;/포트&gt;&lt;/호스트&gt;&lt;/비밀번호&gt;&lt;/사용자이름&gt;&lt;/스킴&gt;
&lt;/blockquote&gt;

&lt;p&gt;각 &amp;lt; &amp;gt; 를 컴포넌트라고 부릅니다. 위 모든 컴포넌트를 모두 갖는 URL 스킴은 거의 없습니다.&lt;/p&gt;

&lt;p&gt;각 컴포넌트에 대해 자세히 알아봅시다.&lt;/p&gt;

&lt;h4 id=&quot;221-스킴-사용할-프로토콜&quot;&gt;2.2.1. 스킴: 사용할 프로토콜&lt;/h4&gt;
&lt;p&gt;스킴은 리소스에 접근하는 방법을 알려주는 아주 중요한 컴포넌트입니다. 스킴은 대소문자를 가리지 않고 나머지 부분들과 ‘ : ‘로 구분합니다.&lt;/p&gt;

&lt;h4 id=&quot;222-호스트와-포트&quot;&gt;2.2.2. 호스트와 포트&lt;/h4&gt;
&lt;p&gt;리소스를 찾기 위해선 리소스를 갖고 있는 컴퓨터와 그 컴퓨터 내에 서버가 어딘인지 알아야 합니다.
 호스트 컴포넌트가 리소스를 가지고 있는 컴퓨터(장비)를 가리키고, 포트 컴포넌트가 컴퓨터 내에 어느 서버인지를 가리킵니다. 
 TCP 프로토콜을 사용하는 HTTP의 기본 포트는 80입니다.&lt;/p&gt;

&lt;h4 id=&quot;223-사용자-이름과-비밀번호&quot;&gt;2.2.3. 사용자 이름과 비밀번호&lt;/h4&gt;
&lt;p&gt;일반인이나 저와 같이 이제 막 개발에 입문한 개발자라면 URL에 id와 pw가 들어가는 걸 본적이 없을겁니다. 
 어느 스킴에서 사용자 이름이나 비밀번호를 요구하지만 입력하지 않은 경우 사용자 이름엔 기본 사용자이름인 ‘anonymous’ 가 들어가고, 비밀번호는 브라우저마다 가지고 있는 기본 비밀번호가 입력됩니다.(크롬 - chrome@example.com, IE - IEUser) 
 따라서 아래와 같은 URL들이 가능합니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ftp://ftp.prep.ai.mit.edu/pub/gnu
ftp://anonymous@ftp.prep.ai.mit.edu/pub/gnu
ftp://anonymous:my_password@ftp.prep.ai.mit.edu/pub/gnu
http://joe:joespasswd@www.joes-hardware.com/sales_info.txt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;사용자이름 컴포넌트와 비밀번호 컴포넌트는 ‘ : ‘로 구분하고 비밀번호 컴포넌트와 호스트 명 컴포넌트는 ‘@’로 구분합니다. 위의 URL들을 보면 우리가 잘 알고있는 메일 주소와 비슷하게 생겼습니다.&lt;/p&gt;

&lt;p&gt;우리가 알고있는 메일 주소도 사실은 URL 스킴입니다. ntz4kiseung@gmail.com 제 메일주소입니다. 여기서 ntz4kiseung이 사용자명, 비밀번호 컴포넌트는 생략되고 ‘@’로 비밀번호와 호스트를 구분해줍니다. 그리고 제 메일과 관련한 리소스들을 가지고 있는 서버는 gmail.com이 되는 겁니다.&lt;/p&gt;

&lt;h4 id=&quot;224-경로&quot;&gt;2.2.4. 경로&lt;/h4&gt;
&lt;p&gt;URL 경로는 리소스가 서버 내 어디에 위치해 있는지를 지정합니다. 폴더 디렉터리를 생각하면 쉬울 것 같습니다. 각 경로내 디렉토리는 ‘ / ‘로 각각의 경로 조각으로 나뉩니다. 각 경로조각은 각각 파라미터를 가질 수 있습니다.&lt;/p&gt;

&lt;p&gt;윈도우에서 사용하는 백슬래쉬 ‘ \ ‘가 아니라 그냥 슬래쉬 ‘ / ‘임을 한 번더 각인합시다. 
 여담으로 첫 프로젝트에 나갔을때 윈도우 환경인 로컬 서버에서 파일 저장 경로를 ‘ \ ‘로 지정해 ‘folder1 &amp;gt; folder2 &amp;gt; folder3 &amp;gt; file1.txt’ 와 같은 디렉토리에 파일이 저장되게 해뒀었습니다. 그 후에 팀원들이 공동으로 사용하는 리눅스 기반의 개발서버에 올려놓으니까 원래 구성해놓은 디렉토리 구조를 따라가는게 아니라  ‘folder1\folder2\folder3'라는 이름의 폴더가 생기고 그 안에 file1.txt가 만들어 졌었습니다.&lt;/p&gt;

&lt;h4 id=&quot;225-파라미터&quot;&gt;2.2.5. 파라미터&lt;/h4&gt;
&lt;p&gt;웹 서비스가 방대해지면 단순히 호스트명, 포트, 리소스 경로만 가지고는 리소스들을 특정하기 힘들어 집니다. 이때 서버는 경로 안에서 더 상세하게 리소스를 특정하기 위해 파라미터들을 요구할 수 있습니다. 
 파라미터는 경로와 ‘ ; ‘ 로 구분되며 {name}={value}의 형태로 전달됩니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ftp://prep.ai.mit.edu/pub/gnu;type=d&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위의 사례에서 type이 name, d가 value인 type=d 파라미터가 사용됐습니다.&lt;/p&gt;

&lt;p&gt;2.2.4.에서 말했듯이 경로조각 마다 파라미터가 사용될 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://www.joes-hardware.com/hammers;sale=false/index.html;graphics=true&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;hammers경로 조각에 ‘sale=false’ 파라미터가 사용됐고 index.html 경로조각에 ‘graphics=true’ 파라미터가 사용됐습니다.&lt;/p&gt;

&lt;h4 id=&quot;226-질의-문자열query-string&quot;&gt;2.2.6. 질의 문자열(Query String)&lt;/h4&gt;
&lt;p&gt;사실 이전에 웹을 배울때 URL에서 리소스 다음 ? 뒤에 오는 부분을 ‘파라미터’라고 부르곤 했습니다. 책을 보면서 다시 용어를 제대로 확립해야 할것 같습니다. parameter는 2.2.5. 에서 본 ‘ ; ‘ 로 구분되는게 파라미터고 파라미터라고 편하게 부르면서 사용하던 ‘ ? ‘ 뒤 name=value쌍이 Query String이었습니다.&lt;/p&gt;

&lt;p&gt;Query String은 말그대로 Query를 사용하는 데이터베이스 기반의 서비스에서 많이 사용됩니다. 요청받을 리소스 형식의 범위를 좁히기 위해 사용됩니다. 게시판에서 글 하나를 선택시 하나의 글을 지정할때, 게시판 조회시 필터 항목들을 걸어줄때 사용하곤 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://www.joes-hardware.com/inventory-check.cgi?item=12731
http://www.joes-hardware.com/inventory-check.cgi?item=12731&amp;amp;color=blue&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Query String끼리 ‘ &amp;amp; ‘로 연결해 여러개의 Query String을 보낼 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;227-프래그먼트&quot;&gt;2.2.7. 프래그먼트&lt;/h4&gt;

&lt;p&gt;HTML같은 형식의 리소스는 더 작은 단위로 나뉠 수 있습니다. 전체 리소스 중 특정 부분을 가리키기 위해 사용하는 것이 프래그먼트 컴포넌트입니다.  ‘#’으로 연결되어 사용됩니다. 아래와 같이&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://www.joes-hardware.com/tools.html/#drills&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;모든 tool들을 보여주는 tools.html 리소스에서 드릴 부분만 #drill로 특정했습니다.&lt;/p&gt;

&lt;p&gt;프래그먼트에서 주의할 점은 클라이언트쪽에서 프래그먼트를 서버로 보내지 않는다는 것입니다. 온전한 HTTP 객체를 요청 및 응답받은 이후에 웹 클라이언트 어플리케이션쪽에서 프래그먼트에 맞는 리소스의 일부분만 사용자에게 보여줍니다. 브라우저는 정말 많은 일을 하는 것 같습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;23-단축-url&quot;&gt;2.3. 단축 URL&lt;/h3&gt;

&lt;p&gt;단축 URL은 사용하는 웹 클라이언트 프로그램에 따라 지원할 수도 있고 안할 수도 있습니다. 단축 URL은 사용자가 URL을 다루기 쉽게 하기 위해 사용됩니다.&lt;/p&gt;

&lt;h4 id=&quot;231-상대-url&quot;&gt;2.3.1. 상대 URL&lt;/h4&gt;

&lt;p&gt;상대 URL은 웹 페이지를 제작해본 경험이 있다면 자연스럽게 써봤을 것이다. http://www.servername.com/ 등 앞부분을 생략하고 리소스 부분만 기술한 URL입니다.&lt;/p&gt;

&lt;p&gt;상대 URL을 사용하면 유지보수에 용이해진다. html 문서 안에서 이미지를 삽입할 때&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img path=&quot;http://www.servername.com/images/img1.png&quot; /&gt;
&lt;img path=&quot;http://www.servername.com/images/img2.png&quot; /&gt;
&lt;img path=&quot;http://www.servername.com/images/img3.png&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이런 식으로 지정해 둔다면 후에 이미지 리소스들을 /images에서 /public/images로 옮겨야 할 때 혹은 도메인 네임을 servername.com에서 server.com으로 옮길때 위 코드를 모두 수정해줘야 할 것입니다. 하지만&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img path=&quot;/images/img1.png&quot; /&gt;
&lt;img path=&quot;/images/img2.png&quot; /&gt;
&lt;img path=&quot;/images/img3.png&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위와 같이 상대 URL을 사용한다면 Base URL만 바꿔주면 다시 제대로 리소스를 찾아올 수 있습니다.&lt;/p&gt;

&lt;p&gt;상대 URL을 사용하기 위해선 Base URL을 알아내야 한다. Base URL은&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;리소스에서 명시적으로 지시 : &amp;lt; BASE &amp;gt; HTML 태그를 통해&lt;/li&gt;
  &lt;li&gt;리소스를 포함하고 있는 Base URL : 상대 URL이 사용된 리소스를 포함하는 상위 리소스의 Base URL(위의 예시에선 &amp;lt; img &amp;gt; 태그가 사용된 html 문서의 Base URL)&lt;/li&gt;
  &lt;li&gt;Base URL이 없는 경우 : 절대 URL만으로 이루어진 경우 혹은 불완전하거나 깨진 URL&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위와 같은 방법으로 구해집니다.&lt;/p&gt;

&lt;p&gt;Base URL과 상대 URL을 알았다면 둘을 조합해 실제 요청할 절대 URL 경로를 알아내야 합니다. 단순히 붙이면 될 거라 생각하지만(실제로 거진 잘 될 것 같지만) 상대 URL을 절대 URL로 변환하는 알고리즘이 공식적으로 존재합니다. 그 알고리즘은 RFC1808에서 최초 제안되고 RFC2396에서 포함되었습니다. 하단의 사진과 같은 알고리즘인데 필요하면 추후에 확인해도 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;사진 넣기&lt;/p&gt;

&lt;h4 id=&quot;232-url-확장&quot;&gt;2.3.2. URL 확장&lt;/h4&gt;

&lt;p&gt;URL 확장은 웹 브라우저마다 제공해주는 범위와 방식이 다릅니다. 크게 호스트명 확장, 히스토리 확장으로 나뉠 수 있습니다.&lt;/p&gt;

&lt;p&gt;호스트명 확장 : 호스트명 yahoo를 입력하면 웹 브라우저에서 www.과 .com을 붙여 완성된 www.yahoo.com을 만들어주는 방식입니다. 요즘 브라우저들에선 url입력창이 각 브라우저의 검색창 역할을 하므로 호스트명 확장은 요즘엔 꽤 보기 힘들어진 것 같습니다.&lt;/p&gt;

&lt;p&gt;히스토리 확장 : 과거에 사용자가 방문했던 기록을 토대로 URL을 완성해줍니다. 제가 쓰는 크롬 브라우저에선 URL 창에 y만 쳐도 www.youtube.com이 완성되고 n만 눌러도 www.netflix.com이 완성됩니다. 개인적으로 네이버에 접속하고 싶은데 넥플릭스에 접속되서 가끔 불편함을 느낍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;24-안전하지-않은-문자shady-characters&quot;&gt;2.4. 안전하지 않은 문자(Shady Characters)&lt;/h3&gt;

&lt;p&gt;컴퓨터 시스템은 영어 중심으로 발달해왔기 때문에 기본 문자 집합역시 US - ASCII가 대부분이었습니다. 알파벳과 일부 특수문자만을 가지고 있는 작은 문자 집합 입니다.&lt;/p&gt;

&lt;p&gt;하지만 US - ASCII 문자열이라고 해서 모두가 URL에 사용될 수 있는 것은 아니었습니다. 왜냐하면 URL의 설계자들은 다음과 같은 사항들을 고민했는데&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;어떤 인터넷 프로토콜과도 호환이 되어야 한다.&lt;/li&gt;
  &lt;li&gt;정보가 유실될 위험 없이 URL을 전송해야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위와 같은 제약사항들을 만족시키려다 보니 URL에 사용될 수 없는 안전하지 않은 문자들이 생겼습니다. 특정 프로토콜에서 전송시 제거하는 문자, URL 컴포넌트를 구분하는 등 URL에서 이미 특정 기호로 쓰이기 위해 예약된 문자들이 그것들입니다. 아래의 표가 URL에 그대로 사용되지 못하는 문자열들입니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;문자&lt;/th&gt;
      &lt;th&gt;선전 및 제한&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;%&lt;/td&gt;
      &lt;td&gt;인코딩된 문자에 사용할 이스케이프 토큰으로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;경로 컴포넌트에 있는 경로 세그먼트를 나누는 용도로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt;경로 컴포넌트에서 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;..&lt;/td&gt;
      &lt;td&gt;경로 컴포넌트에서 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;#&lt;/td&gt;
      &lt;td&gt;프래그먼트의 구획 문자로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt;질의 문자열의 구획 문자로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;;&lt;/td&gt;
      &lt;td&gt;파라미터의 구획 문자로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:&lt;/td&gt;
      &lt;td&gt;스킴, 사용자이름/비밀번호, 호스트/포트의 구획 문자로 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$, +&lt;/td&gt;
      &lt;td&gt;선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ &amp;amp; =&lt;/td&gt;
      &lt;td&gt;특정 스킴에서 특별한 의미가 있기 때문에 선점&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;{ } | \ · [ ] `&lt;/td&gt;
      &lt;td&gt;게이트웨이와 같은 여러 전송 에이전트에서 불안전하게 다루기 때문에 제한됨&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt; &amp;gt; “&lt;/td&gt;
      &lt;td&gt;안전하지 않음. 웹 문서에서 URL을 구분지어 표시하듯이,&lt;br /&gt; URL 범위 밖에서 역할이 있는 문자이기 때문에 반드시 인코딩 해야 한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;241-url-문자-집합&quot;&gt;2.4.1. URL 문자 집합&lt;/h4&gt;

&lt;p&gt;하지만 위와 같은 문자열을 URL에 포함해야 하는 경우도 생겼고, URL이 특정 이진 데이터를 포함해야 하는 경우도 생겼으며, 컴퓨터가 확산됨에 따라 유럽언어, 비서구권 언어들을 표현해야 했습니다.&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해 URL 설계자들은 흔히 Percent Encoding이라고 부르는 인코딩 체계를 도입했습니다.&lt;/p&gt;

&lt;h4 id=&quot;242-인코딩-체계&quot;&gt;2.4.2. 인코딩 체계&lt;/h4&gt;

&lt;p&gt;Percent Encoding은 기본적으로 ‘%+16진수 2개’ 로 이루어집니다.&lt;/p&gt;

&lt;p&gt;’ ~ ‘ 같은 경우 ASCII 코드가 126이기 때문에 %7E 로 표현됩니다.&lt;/p&gt;

&lt;p&gt;1바이트 문자인 기존의 US - ASCII 내의 Shady Character들은 %__ 로 표현이 가능합니다. 하지만 언어권에 따라 2Byte 문자, 3Byte문자가 있습니다. 한글의 경우엔 3Byte 문자입니다.&lt;/p&gt;

&lt;p&gt;‘가’ 의 경우 Unicode는 44032 (= 0xAC00) 인데 이를 UTF-8로 인코딩 하면 234, 176, 128 이며 각각 %EA %B0 %80로 인코딩 됩니다. 결국 ‘가’ -&amp;gt; ‘%EA%B0%80’ 가 되는 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;243-문자-제한&quot;&gt;2.4.3. 문자 제한&lt;/h4&gt;

&lt;p&gt;위 표가 제한되는 문자들입니다.&lt;/p&gt;

&lt;h4 id=&quot;244-좀-더-알아보기&quot;&gt;2.4.4. 좀 더 알아보기&lt;/h4&gt;

&lt;p&gt;Shady Character를 사용했다고 해서 모든 요청이 실패하는 것은 아닙니다. 상황에 따라 성공할 수도, 실패할 수도 있습니다. 하지만 어플리케이션은 약속대로 구현이 되어야 합니다.&lt;/p&gt;

&lt;h3 id=&quot;25-스킴의-바다&quot;&gt;2.5. 스킴의 바다&lt;/h3&gt;

&lt;p&gt;이 절에선 다양한 스킴을 요약해 두었습니다. 단순 정보 나열이지만 본 포스팅에 포함시키면 너무 방대해 질것 같아 [여기][https://www.naver.com]에 따로 빼두겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;26-미래&quot;&gt;2.6. 미래&lt;/h3&gt;

&lt;p&gt;URL은 인터넷에 존재하는 모든 리소스를 특정할 수 있습니다. 확장성도 좋아 새로운 포맷을 추가할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 현재 URL이 가지고 있는 약점이 있습니다. URL은 리소스의 위치를 특정하는 것이기 때문에 리소스가 옮겨진다면 기존의 URL은 쓸모 없어지게 됩니다.&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해 IEFT(Internet Engineering Task Force) 에선 URN(Uniform Resource Names)라는 새로운 URI 표준 작업에 들어갔습니다. URN은 Name으로 리소스를 특정하기 때문에 리소스의 위치가 옮겨지더라도 리소스를 찾을 수 있습니다.&lt;/p&gt;

&lt;p&gt;URL과 URN을 호환할 수 있게하는 기술도 연구중입니다. PURL(Persistent Uniform Resource Locators)입니다. URL과 URN을 중개해주는 역할을 합니다.&lt;/p&gt;

&lt;h4 id=&quot;261-지금이-아니면-언제&quot;&gt;2.6.1. 지금이 아니면, 언제?&lt;/h4&gt;

&lt;p&gt;사실 URN은 이미 사용가능합니다. 하지만 아직 연구단계이기도 하고, 기존의 URL환경이 워낙 방대하기 때문에 교체되는데도 시간이 걸릴것입니다.&lt;/p&gt;

&lt;p&gt;그리고 무엇보다 URL을 URN으로 대체하는 것은 웹 개발 커뮤니티에서 긴급한 사안으로 생각되지 않습니다.&lt;/p&gt;

&lt;p&gt;하지만 URN도 계속 발전해나갈 것이며 언젠가 한계를 가진 URL을 대체할 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;

&lt;p&gt;두 번째 포스팅인데 확실히 첫 번째 포스팅보단 빨라진 것 같습니다. 다만 아직 포스팅의 전체적인 구조를 어떻게 구성해 나가야 할지는 고민중입니다. 정말 책을 요약하는 데에서 끝내는게 정확한 정보전달 차원에서 맞는건지, 개인적인 이해와 사견, 비유등을 덧붙여도 좋을지 고민이 됩니다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>1장 HTTP 개관</title>
   <link href="http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C1/"/>
   <updated>2020-03-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/http%EC%99%84%EB%B2%BD%EA%B0%80%EC%9D%B4%EB%93%9C/Http완벽가이드1</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;본 포스팅의 첫번째 목적은 제가 학습한 것을 스스로 정리해보며 정리하는 것&lt;/strong&gt;입니다. 따라서 책의 내용을 오해하고 정리했을 소지가 있으니 &lt;strong&gt;제 포스팅에 너무 의존하진 말아주세요.&lt;/strong&gt;(훗날 자신있게 제 포스팅에 의존해 달라고 할 수 있는 날이 왔으면 좋겠습니다!) 내용에 대한 지적은 언제나 환영입니다.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;들어가며&quot;&gt;들어가며&lt;/h3&gt;

&lt;p&gt;본 장에선 아래와 같은  HTTP와 연관된 대략적인 개념들을 살펴봅니다. &lt;strong&gt;각 개념들은 이후 장들에서 더 자세히 알아볼 것입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;HTTP: 인터넷의 멀티미디어 배달부&lt;/li&gt;
  &lt;li&gt;웹 클라이언트와 서버&lt;/li&gt;
  &lt;li&gt;리소스&lt;/li&gt;
  &lt;li&gt;트랜잭션&lt;/li&gt;
  &lt;li&gt;메시지&lt;/li&gt;
  &lt;li&gt;TCP 커넥션&lt;/li&gt;
  &lt;li&gt;프로토콜 버전&lt;/li&gt;
  &lt;li&gt;웹의 구성요소&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;11-http--인터넷의-멀티미디어-배달부&quot;&gt;1.1. HTTP : 인터넷의 멀티미디어 배달부&lt;/h3&gt;
&lt;p&gt;본 책은 HTTP에 대한 여정을 시작하는 첫 장, 첫 절에서 HTTP를 &lt;strong&gt;인터넷의 멀티미디어 배달부&lt;/strong&gt;‘라고 표현하고 있습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;인터넷 : 기기와 운영체제를 가리지 않는다.&lt;/li&gt;
  &lt;li&gt;멀티미디어 : 텍스트, 이미지, 영상 등 다양한 형식의 데이터를 다룬다.&lt;/li&gt;
  &lt;li&gt;배달부 : 클라이언트에서 서버로, 서버에서 서버로, 서버에서 클라이언트로 데이터를 전송해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같은 의미로 HTTP를 압축적으로 표현한 것 같습니다.&lt;/p&gt;

&lt;p&gt;HTTP는 신뢰성 있는 데이터 전송 프로토콜(뒤에서 살펴볼 TCP/IP)을 사용하기 때문에 전송중에 데이터가 꼬이거나 손상될 걱정이 없습니다. 개발자의 입장에선 네트워크에 관한 문제는 제쳐두고 어플리케이션 개발에 집중할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;12-웹-클라이언트와-서버&quot;&gt;1.2. 웹 클라이언트와 서버&lt;/h3&gt;
&lt;p&gt;웹 서버 : 데이터를 저장하며, HTTP 클라이언트가 요청한 데이터를 제공한다. HTTP서버 라고도 부른다.&lt;/p&gt;

&lt;p&gt;웹 클라이언트 : 사용자를 대신해 HTTP 요청을 보내줌준다. 매일 사용하는 웹 브라우저들이 웹 클라이언트 중 하나라고 부를 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;웹 브라우저에서 https://www.naver.com/index.html 를 입력하면 브라우저는 HTTP 요청 객체를 www.naver.com 로 보낸다. 요청을 받은 서버는 서버에서 /index.html에 해당하는 &lt;strong&gt;컨텐츠&lt;/strong&gt;를 찾고 성공했다면 웹 브라우저로 응답 HTTP 객체를 보낸다. 응답을 받은 웹 브라우저는 응답 컨텐츠를 웹 브라우저에 띄워준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;그림요망&gt;

---

### 1.3. 리소스
본 책에서 데이터, 리소스, 컨텐츠와 같이 유사한 개념이 나옵니다. 책에서 따로 각각을 비교하며 명확히 정의하진 않았지만 데이터와 리소스의 관계는 '데이터⊂리소스' 인것 같고 컨텐츠는 리소스를 가공해 얻어지고 사용자가 접하게 되는 것이라고 이해하고 있습니다.('웹 리소스는 웹 콘텐츠의 원천이다.')


웹에서의 가장 간단한 리소스는 정적 파일입니다. 웹 서버에 저장된 텍스트파일, 사진, 동영상, html 파일등이 될 수 있습니다.

리소스는 항상 정적인 것은 아닙니다. 리소스는 동적으로 컨텐츠를 만드는 프로그램을 뜻할 수도 있습니다. 

#### 1.3.1. 미디어 타입
본 포스팅의 제일 처음에서 HTTP는 '인터넷의 **멀티미디어** 배달부'라고 했습니다. 인터넷은 multi 미디어라는 말 처럼 수천 가지 데이터 타입을 다룹니다.

그리고 HTTP 프로토콜에선 이 수천 가지 데이터 타입을 다루기 위해 **HTTP가 전송하는 데이터에 MIME(Multipurpose Internet Mail Extension) 타입이라는 데이터 포맷 라벨을 붙입니다.**  지금 HTTP객체가 전송중인 데이터가 '어떤 타입의 데이터다' 라는 것을 말해주는 것이죠.

(MIME 타입은 전자메일 시스템에서 처음 사용한 데이터 타입 분류인데 메일에서 잘 작동하여 HTTP에서도 채택해 사용 중입니다.)

MIME 타입은 '주타입/부타입' 으로 이루어진 문자열 라벨입니다. html의 &lt;form&gt;태그에서 봤을법한 text/html, text/plain, image/jpeg, image/gif 같은 것들입니다.

수천 가지의 데이터 타입을 다루는 만큼 MIME 타입을 상세히 열거하면 엄청나게 많습니다. 아래 링크에서 MIME 타입의 모든 목록을 볼 수 있습니다.
https://www.iana.org/assignments/media-types/media-types.xhtml

#### 1.3.2. URI(Uniform Resource Identifier)
#### 1.3.3. URL(Uniform Resource Locator)
#### 1.3.4. URN(Uniform Resource Name)
위 세개의 절은 한 번에 설명을 해야할 것 같습니다. 우선 세 개념의 관계는 아래 그림과 같습니다.
&lt;그림 요망=&quot;&quot;&gt;
앞 절에서 웹 서버는 데이터(리소스)를 저장하고 있다고 했습니다. 리소스들엔 각자의 이름(파일명)이 있겠죠. URI는 말 그대로 Resource를 Identify하는 역할을 합니다. http://www.naver.com/index.html 에서 본다면 www.naver.com 서버에서 index.html을 식별하도록 지정하는 것이죠. 

이 지정하는 방식이 URL과 URN으로 나뉩니다. 

URL은 우리가 쉽게 접한 형태입니다. 방금전 예시의  http://www.naver.com/index.html 도 쉽게 접할 수 있는 URL 형태의 URI였습니다. 

URL은 '스킴+ 서버 주소+ 리소스' 로 나타내며 리소스의 위치를 지정해 리소스를 식별합니다.

스킴 : 리소스에 접근하기 위해 사용되는 프로토콜(ex) http://, ftp://, mailto://)
서버주소 : 서버의 주소. IP+port(127.0.0.1:4000) 혹은 Domain ( www.naver.com )
리소스 : /index.html, /image/error.png ..

URN은 리소스의 위치가 아닌 이름으로 리소스를 지정합니다. 아래는 인터넷 표준문서 'RFC 2141'을 지정하는 URN입니다.

urn:ietf:rfc:2141

URN은 URL의 단점을 보완하기 위해 나왔으나 아직 실험 단계에 있습니다.

---

### 1.4. 트랜잭션

트랜잭션이란?
&amp;gt; Transaction processing : information processing that is divided into individual, indivisible operations
&amp;gt;Database transaction : a unit of work performed within a database management system
&amp;gt; Atomic transaction : a series of database operations such that either all occur, or nothing occurs
&amp;gt; Financial transaction : an agreement, communication, or movement carried out between a buyer and a seller to exchange an asset for payment 
&amp;gt; https://en.wikipedia.org/wiki/Transaction

위키에서 찾아본 다양한 트랜잭션에 대한 정의입니다. 공통적으로 보면 '분리할 수 없는 하나의 업무 단위' 라고 볼 수 있습니다. 

HTTP에서 트랜잭션은 '요청명령+응답결과' 입니다. 요청이 있으면 요청에 맞는 데이터를 돌려주든, 에러를 뱉든 응답결과가 있어야 HTTP 통신이 이루어졌다고 할 수 있습니다.

#### 1.4.1. 메서드 
모든 HTTP 요청은 하나의 메서드를 갖습니다. 메서드는 클라이언트가 서버에게 '어떤 동작이 취해져야 하는지' 말해줍니다. 아래는 웹에서 많이 사용되는 5개의 메서드입니다.
| HTTP메서드 | 설명 |
|:---:|:---:|
|GET|서버에서 클라이언트로 지정한 리소스를 보내라.|
|PUT|클라이언트에서 서버로 보낸 데이터를 지정한 이름의 리소스로 저장하라|
|DELETE|지정한 리소스를 서버에서 삭제하라.|
|POST|클라이언트 데이터를 서버 게이트웨이 어플리케이션으로 보내라.|
|HEAD|지정한 리소스에 대한 응답에서, HTTP 헤더 부분만 보내라.|

#### 1.4.2. 상태 코드
모든 HTTP 응답은 하나의 상태코드를 갖습니다. 상태코드는 요청의 성공/실패 여부 등을 알려주는 코드입니다. 아래는 웹에서 많이 볼 수 있는 몇 가지 상태코드 입니다.
|HTTP 상태코드|설명|
|:---:|:---:|
|200|응답 성공. 문서가 올바르게 반환됨.|
|302|다시 보내라. 다른 곳에서 리소스를 가져가라.|
|404|리소스를 찾을 수 없다.|

#### 1.4.3. 웹페이지는 여러 객체로 이루어질 수 있다.
http://www.naver.com/index.html 를 웹 브라우저 주소창에 쳐보자. 하나의 화면이 나타난다. 그렇다면 한 웹 페이지는 하나의 HTTP 요청, 객체로 이루어지는 것일까? 아니다.

하나의 웹페이지를 만들기 위해선 여러 HTTP 객체가 이용될 수 있다. 우리가 웹 브라우저를 통해 하나의 URL을 요청하면 웹 브라우저는 기본적으로 html 뼈대를 받아온다. 브라우저가 받아온 html을 읽으면서 html을 보여주기 위한 이미지, 자바 애플릿 등을 다시 요청해 가져온다. 

이 요청들은 처음 요청한 URL과 다른 서버에서 가져올 수도 있다. 

---

### 1.5. 메시지
HTTP 메시지는 HTTP 요청과 응답을 표현해주는 단순한 문자열이다. 요청메세지와 응답메세지 모두 3부분(start line, header, body)로 구분됩니다. header는 빈 문자열로 끝납니다.

아래는 요청 메세지의 예시입니다. 
&amp;gt;
&amp;gt;GET / test/hi-there.txt HTTP/1.0
&amp;gt;
&amp;gt;---
&amp;gt;Accept: text/*
&amp;gt;Accept-Language: en, fr
&amp;gt;　   
&amp;gt;
&amp;gt;---
&amp;gt;

아래는 응답 메세지의 예시입니다.
&amp;gt;
&amp;gt;HTTP/1.0 200 OK
&amp;gt;
&amp;gt;---
&amp;gt;Content-type: text/plain
&amp;gt;Content-length: 19
&amp;gt;　
&amp;gt;
&amp;gt;---
&amp;gt;Hi! I'm a message!
&amp;gt;
&amp;gt;---
&amp;gt;

자세한 사항은 2장에서 이어집니다.

---

### 1.6. TCP 커넥션
앞선 1.1. 에서 HTTP는 신뢰성 있는 데이터 전송 프로토콜을 사용한다고 했습니다. TCP(Transmission Control Protocol) 커넥션이 바로 그 프로토콜입니다. TCP 커넥션에 관해선 4장에서 더 자세히 배울 예정입니다.

#### 1.6.1. TCP/IP
이제 개발을 막 시작했을 무렵 정보처리기사 자격증을 공부했습니다. 그때 OSI 7계층이란 걸 배웠습니다. 아래와 같은 것이죠. 아래 사진 출처 포스트에 OSI 7계층에 대해 알기 쉽게 나와 있으니 참고하셔도 좋을 것 같습니다. (참고 - https://brunch.co.kr/@wangho/6  서킷통신 vs 패킷통신)

![Alt text](/image/iso7layer.png)

출처 : https://medium.com/harrythegreat/osi%EA%B3%84%EC%B8%B5-tcp-ip-%EB%AA%A8%EB%8D%B8-%EC%89%BD%EA%B2%8C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-f308b1115359


출처의 포스트에서 
&amp;gt; 각 계층은 다른 계층에 대해 알 필요가 없이 자신의 계층에서 캡슐화와 은닉(숨기기)가 가능

라고 표현했습니다. 책에서 &quot;HTTP는 신뢰성있는 데이터 전송 프로토콜을 사용하기 때문에 데이터가 전송중에 꼬이거나 손상될 걱정 할 필요 없다.&quot;라고 한 것과 일치합니다. 데이터의 신뢰성문제는 TCP 프로토콜이 보장한다는 것이죠.

HTTP는 OSI 7계층에서 어플리케이션 계층에 속합니다. 어플리케이션 안에서 일어나는 일에만 관여하고 어플리케이션에서 어플리케이션으로(클라이언트 &amp;lt;-&amp;gt; 서버) 데이터가 전달되는 과정엔 HTTP는 손을 떼고 TCP/IP 프로토콜이 담당하는 것이죠.

TCP/IP에 대한 세부 사항은 4장에서 자세히 다룰 예정입니다. 1장에서의 TCP/IP는 HTTP통신을 도와 데이터를 전송해주는 프로토콜이라고 생각하면 좋을것 같습니다.

#### 1.6.2. 접속, IP주소, 포트번호
 클라이언트와 서버가 데이터를 주고 받기 위해선 TCP/IP 커넥션을 맺어야 합니다. 대화를 전달하기 위해 전화를 거는 것과 비슷한 개념이라고 생각할 수 있습니다.

 전화를 걸기 위해선 전화번호를 알아야 합니다. 마찬가지로  TCP/IP 커넥션을 맺기 위해 알아야 할 것들이 있는데 그게 바로 IP 주소와 포트번호입니다. IP주소가 컴퓨터를 찾는다면 포트번호는 그 컴퓨터 내에 어떤 프로그램인지를 찾아간다고 보면 좋습니다.

&amp;gt; http://207.200.83.29:80/index.html
&amp;gt; http://www.netscape.com:80/index.html
&amp;gt; http://www.netscape.com/index.html

 세 가지 URL이 나와있는데 이중 첫 번째 URL에서 '207.200.83.29'가 IP, '80'이 포트번호 입니다.
 두 번째 URL에선 숫자로 된 IP가 없고 'www.netsacpe.com'이라는 우리에게 친숙한 알파벳의 주소가 있습니다. 이를 도메인 네임, 호스트 명 이라고 부릅니다. 숫자로 이루어진 IP를 직관적으로 기억하기 위해 사용되는 별명과 같은 것인데 DNS(Domain Name Service)라는 장치를 통해 IP로 변환됩니다.
 세 번째 URL은 포트번호가 없습니다. 포트번호가 없다면 기본 포트번호인 80이 사용되었다고 볼 수 있습니다. 

 다음은 클라이언트와 서버가 데이터를 주고받는 간단한 개요입니다.
&amp;gt; 1. 사용자가 입력한 URL에서 웹 브라우저가 호스트 명을 추출한다.
&amp;gt; 2. 웹 브라우저가 네임서버(앞서말한 DNS를 제공하는 서버)를 통해 호스트명을 IP로 변환한다.
&amp;gt; 3. 웹 브라우저가 URL에 포트번호가 있다면 추출한다.
&amp;gt; 4. 웹 브라우저와 웹 서버가 TCP 커넥션을 맺는다.
&amp;gt; 5. 웹 브라우저가 웹 서버에게 HTTP 요청을 보낸다.
&amp;gt; 6. 웹 서버가 웹 브라우저에게 HTTP 응답을 보낸다.
&amp;gt; 7. TCP 커넥션이 닫히면 웹 브라우저는 받은 데이터를 파싱해 사용자에게 보여준다.

우리가 편하게 사용하는 브라우저가 엄청난 일을 해주고 있음을 다시 한 번 느낍니다.

---

### 1.7. 프로토콜 버전

&amp;gt; HTTP 0.9 : 1991년 개발. 초기 버전이며 굉장히 한정적인 기능을 갖고 있음.
&amp;gt; HTTP 1.0 : 1996년 개발. 인터넷이 급성장 하던 시기에 만들어 졌기 때문에 급하게 여러 기능들을 붙여 깔끔하게 정의되지 않음.
&amp;gt; HTTP 1.0 + : 1996년 개발. 1.0 버전에 좀 더 기능들을 추가, 확장 한 것.
&amp;gt; HTTP 1.1 : 1997년 개발. 기능적인 확장보단 그동안 급하게 발전한 온 HTTP의 설계 구조적 결함 교정, 성능 최적화, 잘못된 기능 제거에 집중함. **현재 대중적으로 쓰이는 HTTP 버전 **
&amp;gt; HTTP 2.0 : 1.1 버전의 성능을 개선하기 위해 구글의 SPDY 프로토콜을 기반으로 설계가 진행중.


 쉽게 만날수 있는 버전은 1.1 버전이고 개발을 진행하다가 기존의 HTTP 지식으로 이해가 안되는 현상을 만날때 HTTP 버전을 한 번 확인해보면 좋을 것 같습니다.


 상세한 사항은 https://developer.mozilla.org/ko/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP 를 참고하시면 좋을 것 같습니다.

---

### 1.8. 웹의 구성요소

웹이 작동하는데엔 많은 애플리케이션들이 관여합니다. 이번 절에선 프록시, 캐시, 게이트웨이, 터널, 에이전트에 대해 간략히 알아볼 것입니다. 물론 각 어플리케이션들은 각각의 장에서 자세히 알아볼 것입니다.

#### 1.8.1. 프록시
&amp;gt; 프록시 : 클라이언트와 서버 사이에 위치한 HTTP 중개사

 개인적으로 '프록시'라는 개념은 매번 들어도 친숙해지지 않았습니다. CS에서 사용되는 여러 개념들은 인터넷을 하다보면 어깨너머로 듣기 때문에 대략적인 개념을 유추할 수 있었는데 말이죠. 

 프록시의 어원은 라틴어 procuratia라고 합니다.(https://www.hankookilbo.com/News/Read/201610111434651573)
 &amp;gt;procuratia = 대신, 앞에서(pro) + 관여하다, 조심하다, 배려하다(curare)

 분쟁이 있을때 당사자가 직접 싸우는게 아니라 제 삼자를 내세워 싸우는걸 proxy war 라고  합니다.  비만도를 체질량 지수로 대신하고, 삶의 질을 GDP로 대신하는 것 같이 한 지수를 다른 지수로 표현하는 걸 통계학에서 proxy variable 이라고 합니다. 

 이와 같은 맥락으로 CS에서 프록시는 클라이언트와 서버 사이에서 요청과 응답을 대신해서 주고 받는 역할을 합니다.

 주로 보안을 위해 많이 사용됩니다. 다운로드시 바이러스 검사를 한다던가, 성인 콘텐츠를 차단한다던가 하는 식입니다.


#### 1.8.2. 캐시
&amp;gt; 캐시 : 많이 찾는 웹페이지를 클라이언트 가까이에 보관하는 HTTP 창고

 cache는 원래 '은닉처'라는 뜻을 가지고 있습니다. 책에서도 HTTP '창고'라고 표현을 해두었네요.

 웹 캐시는 위에서 말한 프록시 서버중 하나입니다. 요청 사항을 보고 이미 일전에 여러번 수행했던 요청이라면 굳이 멀리 있는 요청 서버를 통해 결과를 가져오는게 아니라 가까이 있는 웹 캐시에서 결과를 받아 옵니다. 

#### 1.8.3. 게이트웨이
&amp;gt; 게이트웨이 : 다른 애플리케이션과 연결된 특별한 웹 서버

 게이트웨이는 HTTP 트래픽을 다른 프로토콜로 변환하기 위해 사용됩니다. 게이트웨이는 자신이 리소스를 가지고 있는 진짜 서버처럼 행동하기 때문에 클라이언트의 입장에선 본인이 게이트웨이와 통신하는지, 게이트웨이를 통한 서버와 통신하는지 모릅니다.

 예를들어 파일전송만 담당하는 FTP(File Transfer Protocol) 서버가 있다면 HTTP 클라이언트와 직접 통신할 수 없습니다. 그래서 이를 중개하고 변환해 주는게 HTTP/FTP 게이트웨이 입니다.


#### 1.8.4. 터널
&amp;gt; 터널 : 단순히 HTTP 통신을 전달하기만 하는 특별한 프록시

 터널은 두 커넥션 사이에서 raw 데이터를 열어보지 않고 그대로 전달해주는 프록시라고 합니다. 

 대표적인 예로 암호화된 SSL 트래픽을 HTTP 커넥션으로 전송해 웹 트래픽만 허용하는 사내 방화벽을 통과시키는 것을 예로 들 수 있다는데... 사실 이 책을 보며 이해가 안되는 첫 부분입니다. 나중에 보강 하도록 하겠습니다.

#### 1.8.5. 에이전트
&amp;gt; 에이전트 : 자동화된 HTTP 요청을 만드는 준지능적(semi-inteligent) 웹 클라이언트

 앞서 HTTP의 구성요소들에 대해 간략히 알아봤습니다. start-line, header, body, 호스트명, IP주소, 포트번호 등... 하지만 우리가 실 생활에서 HTTP 통신을 할 땐 정말 간단하다. 웹 브라우저를 열고 www.naver.com 만 입력하면 됩니다.

 이렇게 사용자를 위해 HTTP 요청을 만들어주는 클라이언트 프로그램을 통틀어 HTTP 에이전트라고 한다.

 웹 브라우저가 가장 대표적인 HTTP 에이전트이고, 개발할때 테스트 용으로 자주쓰는 postman 이라는 프로그램 역시 HTTP 에이전트라고 볼 수 있습니다.
 이렇게 사용자가 직접 URL을 입력하는 에이전트도 있고 웹 크롤러와 같이 완전 자동화 되어 지정된 HTTP 요청을 수행하는 것 역시 HTTP 에이전트입니다. 

---

 ### 마치며
 이 포스팅이 첫 포스팅인데 만만하게만 봤던 포스팅이 생각보다 많이 어렵다는걸 느꼈습니다. 알고있다고 생각한 개념들을 다른 사람이 모두 볼 수 있는 곳에 올려놓기 위해 정리하다보니 내가 제대로 알고 있던게 아니구나라는걸 느끼게 됐습니다.

 시간도 생각보다 굉장히 많이 걸렸습니다.

 하지만 첫 포스팅이니 그럴 거라고 생각합니다. 앞으로 하나씩 새로 배우는 개념들, 알고 있었지만 다시 정리하는 개념들을 다른 사람에게 보여줄 수 있을 정도로 다듬으면 포스팅도 술술 되는 날이 오겠죠?

 이만 마칩니다.

---

&lt;/그림&gt;&lt;/form&gt;&lt;/그림요망&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/twitch_chat_anaylsis/TCA3/"/>
   <updated>2016-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/twitch_chat_anaylsis/TCA3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  TCA3
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/twitch_chat_anaylsis/TCA2/"/>
   <updated>2016-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/twitch_chat_anaylsis/TCA2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  TCA2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/twitch_chat_anaylsis/TCA1/"/>
   <updated>2016-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/twitch_chat_anaylsis/TCA1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  TCA1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/python/Python3/"/>
   <updated>2015-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/python/Python3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-03-01-Python3s
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/network/Network3/"/>
   <updated>2015-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/network/Network3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-03-01-Network3
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/java/Java3/"/>
   <updated>2015-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/java/Java3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-03-01-Java3
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_book/algorithm/Algorithm3/"/>
   <updated>2015-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/algorithm/Algorithm3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Algorithm3
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/sagyo_reboot/Sagyo3/"/>
   <updated>2015-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/sagyo_reboot/Sagyo3</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-03-01-Sagyo3
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/python/Python2/"/>
   <updated>2015-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/python/Python2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-02-01-Python2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/network/Network2/"/>
   <updated>2015-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/network/Network2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-02-01-Network2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/java/Java2/"/>
   <updated>2015-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/java/Java2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-02-01-Java2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_book/algorithm/Algorithm2/"/>
   <updated>2015-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/algorithm/Algorithm2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Algorithm2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/sagyo_reboot/Sagyo2/"/>
   <updated>2015-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/sagyo_reboot/Sagyo2</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2015-02-01-Sagyo2
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/python/Python1/"/>
   <updated>2015-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/python/Python1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Python1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/network/Network1/"/>
   <updated>2015-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/network/Network1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Network1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_googling/java/Java1/"/>
   <updated>2015-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_googling/java/Java1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Java1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/study_book/algorithm/Algorithm1/"/>
   <updated>2015-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/study_book/algorithm/Algorithm1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Algorithms1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/projects/sagyo_reboot/Sagyo1/"/>
   <updated>2015-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/projects/sagyo_reboot/Sagyo1</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Sagyo1
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/about/AboutMe/"/>
   <updated>2013-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/about/AboutMe</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  2013-01-01-AboutMe
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
